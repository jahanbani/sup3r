Search.setIndex({"alltitles": {"Acknowledgements": [[339, "acknowledgements"], [340, "acknowledgements"]], "Acknowledgments": [[341, "acknowledgments"]], "Command Line Interfaces (CLIs)": [[335, null]], "Directory Structure": [[339, "directory-structure"]], "Example Sup3rCC Data Usage": [[339, "example-sup3rcc-data-usage"]], "Example Sup3rWind Data Usage": [[340, "example-sup3rwind-data-usage"]], "Examples": [[338, null]], "Installation": [[342, null]], "Installation and Usage": [[343, null]], "Installing sup3r": [[341, "installing-sup3r"]], "Nuances of Sup3rCC": [[339, "nuances-of-sup3rcc"]], "Option 1: Install from PIP (recommended for analysts):": [[341, "option-1-install-from-pip-recommended-for-analysts"], [342, "option-1-install-from-pip-recommended-for-analysts"]], "Option 2: Clone repo (recommended for developers)": [[341, "option-2-clone-repo-recommended-for-developers"], [342, "option-2-clone-repo-recommended-for-developers"]], "Parameter": [[244, "parameter"]], "Recommended Citation": [[339, "recommended-citation"], [340, "recommended-citation"], [341, "recommended-citation"]], "Running Sup3rCC Models": [[339, "running-sup3rcc-models"]], "Running Sup3rWind Models": [[340, "running-sup3rwind-models"]], "Sup3rCC Data Access": [[339, "sup3rcc-data-access"]], "Sup3rCC Examples": [[339, null]], "Sup3rCC Versions": [[339, "sup3rcc-versions"]], "Sup3rWind Data Access": [[340, "sup3rwind-data-access"]], "Sup3rWind Examples": [[340, null]], "Sup3rWind Versions": [[340, "sup3rwind-versions"]], "Welcome to Sup3r!": [[341, null]], "batch": [[336, "sup3r-batch"]], "bias-calc": [[336, "sup3r-bias-calc"]], "data-collect": [[336, "sup3r-data-collect"]], "forward-pass": [[336, "sup3r-forward-pass"]], "pipeline": [[336, "sup3r-pipeline"]], "qa": [[336, "sup3r-qa"]], "solar": [[336, "sup3r-solar"]], "sup3r": [[0, null], [336, null]], "sup3r.batch": [[1, null]], "sup3r.batch.batch_cli": [[2, null]], "sup3r.bias": [[3, null]], "sup3r.bias.abstract": [[4, null]], "sup3r.bias.abstract.AbstractBiasCorrection": [[5, null]], "sup3r.bias.base": [[6, null]], "sup3r.bias.base.DataRetrievalBase": [[7, null]], "sup3r.bias.bias_calc": [[8, null]], "sup3r.bias.bias_calc.LinearCorrection": [[9, null]], "sup3r.bias.bias_calc.MonthlyLinearCorrection": [[10, null]], "sup3r.bias.bias_calc.MonthlyScalarCorrection": [[11, null]], "sup3r.bias.bias_calc.ScalarCorrection": [[12, null]], "sup3r.bias.bias_calc.SkillAssessment": [[13, null]], "sup3r.bias.bias_calc_cli": [[14, null]], "sup3r.bias.bias_calc_cli.kickoff_local_job": [[15, null]], "sup3r.bias.bias_calc_cli.kickoff_slurm_job": [[16, null]], "sup3r.bias.bias_calc_vortex": [[17, null]], "sup3r.bias.bias_calc_vortex.BiasCorrectUpdate": [[18, null]], "sup3r.bias.bias_calc_vortex.VortexMeanPrepper": [[19, null]], "sup3r.bias.bias_transforms": [[20, null]], "sup3r.bias.bias_transforms.global_linear_bc": [[21, null]], "sup3r.bias.bias_transforms.local_linear_bc": [[22, null]], "sup3r.bias.bias_transforms.local_presrat_bc": [[23, null]], "sup3r.bias.bias_transforms.local_qdm_bc": [[24, null]], "sup3r.bias.bias_transforms.monthly_local_linear_bc": [[25, null]], "sup3r.bias.mixins": [[26, null]], "sup3r.bias.mixins.FillAndSmoothMixin": [[27, null]], "sup3r.bias.mixins.ZeroRateMixin": [[28, null]], "sup3r.bias.presrat": [[29, null]], "sup3r.bias.presrat.PresRat": [[30, null]], "sup3r.bias.qdm": [[31, null]], "sup3r.bias.qdm.QuantileDeltaMappingCorrection": [[32, null]], "sup3r.bias.utilities": [[33, null]], "sup3r.bias.utilities.bias_correct_feature": [[34, null]], "sup3r.bias.utilities.bias_correct_features": [[35, null]], "sup3r.bias.utilities.lin_bc": [[36, null]], "sup3r.bias.utilities.qdm_bc": [[37, null]], "sup3r.cli": [[38, null]], "sup3r.models": [[39, null]], "sup3r.models.abstract": [[40, null]], "sup3r.models.abstract.AbstractInterface": [[41, null]], "sup3r.models.abstract.AbstractSingleModel": [[42, null]], "sup3r.models.abstract.TensorboardMixIn": [[43, null]], "sup3r.models.base": [[44, null]], "sup3r.models.base.Sup3rGan": [[45, null]], "sup3r.models.conditional": [[46, null]], "sup3r.models.conditional.Sup3rCondMom": [[47, null]], "sup3r.models.dc": [[48, null]], "sup3r.models.dc.Sup3rGanDC": [[49, null]], "sup3r.models.linear": [[50, null]], "sup3r.models.linear.LinearInterp": [[51, null]], "sup3r.models.multi_step": [[52, null]], "sup3r.models.multi_step.MultiStepGan": [[53, null]], "sup3r.models.multi_step.MultiStepSurfaceMetGan": [[54, null]], "sup3r.models.multi_step.SolarMultiStepGan": [[55, null]], "sup3r.models.solar_cc": [[56, null]], "sup3r.models.solar_cc.SolarCC": [[57, null]], "sup3r.models.surface": [[58, null]], "sup3r.models.surface.SurfaceSpatialMetModel": [[59, null]], "sup3r.models.utilities": [[60, null]], "sup3r.models.utilities.TrainingSession": [[61, null]], "sup3r.models.utilities.get_optimizer_class": [[62, null]], "sup3r.models.utilities.st_interp": [[63, null]], "sup3r.pipeline": [[64, null]], "sup3r.pipeline.forward_pass": [[65, null]], "sup3r.pipeline.forward_pass.ForwardPass": [[66, null]], "sup3r.pipeline.forward_pass_cli": [[67, null]], "sup3r.pipeline.forward_pass_cli.kickoff_local_job": [[68, null]], "sup3r.pipeline.forward_pass_cli.kickoff_slurm_job": [[69, null]], "sup3r.pipeline.pipeline_cli": [[70, null]], "sup3r.pipeline.slicer": [[71, null]], "sup3r.pipeline.slicer.ForwardPassSlicer": [[72, null]], "sup3r.pipeline.strategy": [[73, null]], "sup3r.pipeline.strategy.ForwardPassChunk": [[74, null]], "sup3r.pipeline.strategy.ForwardPassStrategy": [[75, null]], "sup3r.pipeline.utilities": [[76, null]], "sup3r.pipeline.utilities.get_chunk_slices": [[77, null]], "sup3r.pipeline.utilities.get_model": [[78, null]], "sup3r.postprocessing": [[79, null]], "sup3r.postprocessing.collectors": [[80, null]], "sup3r.postprocessing.collectors.base": [[81, null]], "sup3r.postprocessing.collectors.base.BaseCollector": [[82, null]], "sup3r.postprocessing.collectors.h5": [[83, null]], "sup3r.postprocessing.collectors.h5.CollectorH5": [[84, null]], "sup3r.postprocessing.collectors.nc": [[85, null]], "sup3r.postprocessing.collectors.nc.CollectorNC": [[86, null]], "sup3r.postprocessing.data_collect_cli": [[87, null]], "sup3r.postprocessing.data_collect_cli.kickoff_local_job": [[88, null]], "sup3r.postprocessing.data_collect_cli.kickoff_slurm_job": [[89, null]], "sup3r.postprocessing.writers": [[90, null]], "sup3r.postprocessing.writers.base": [[91, null]], "sup3r.postprocessing.writers.base.OutputHandler": [[92, null]], "sup3r.postprocessing.writers.base.OutputMixin": [[93, null]], "sup3r.postprocessing.writers.base.RexOutputs": [[94, null]], "sup3r.postprocessing.writers.h5": [[95, null]], "sup3r.postprocessing.writers.h5.OutputHandlerH5": [[96, null]], "sup3r.postprocessing.writers.nc": [[97, null]], "sup3r.postprocessing.writers.nc.OutputHandlerNC": [[98, null]], "sup3r.preprocessing": [[99, null]], "sup3r.preprocessing.accessor": [[100, null]], "sup3r.preprocessing.accessor.Sup3rX": [[101, null]], "sup3r.preprocessing.base": [[102, null]], "sup3r.preprocessing.base.Container": [[103, null]], "sup3r.preprocessing.base.Sup3rDataset": [[104, null]], "sup3r.preprocessing.base.Sup3rMeta": [[105, null]], "sup3r.preprocessing.batch_handlers": [[106, null]], "sup3r.preprocessing.batch_handlers.dc": [[107, null]], "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC": [[108, null]], "sup3r.preprocessing.batch_handlers.factory": [[109, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandler": [[110, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC": [[111, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerFactory": [[112, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1": [[113, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF": [[114, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2": [[115, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SF": [[116, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep": [[117, null]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF": [[118, null]], "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler": [[119, null]], "sup3r.preprocessing.batch_queues": [[120, null]], "sup3r.preprocessing.batch_queues.abstract": [[121, null]], "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue": [[122, null]], "sup3r.preprocessing.batch_queues.base": [[123, null]], "sup3r.preprocessing.batch_queues.base.SingleBatchQueue": [[124, null]], "sup3r.preprocessing.batch_queues.conditional": [[125, null]], "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue": [[126, null]], "sup3r.preprocessing.batch_queues.conditional.QueueMom1": [[127, null]], "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF": [[128, null]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2": [[129, null]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF": [[130, null]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep": [[131, null]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF": [[132, null]], "sup3r.preprocessing.batch_queues.dc": [[133, null]], "sup3r.preprocessing.batch_queues.dc.BatchQueueDC": [[134, null]], "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC": [[135, null]], "sup3r.preprocessing.batch_queues.dual": [[136, null]], "sup3r.preprocessing.batch_queues.dual.DualBatchQueue": [[137, null]], "sup3r.preprocessing.batch_queues.utilities": [[138, null]], "sup3r.preprocessing.batch_queues.utilities.smooth_data": [[139, null]], "sup3r.preprocessing.batch_queues.utilities.spatial_simple_enhancing": [[140, null]], "sup3r.preprocessing.batch_queues.utilities.temporal_simple_enhancing": [[141, null]], "sup3r.preprocessing.cachers": [[142, null]], "sup3r.preprocessing.cachers.base": [[143, null]], "sup3r.preprocessing.cachers.base.Cacher": [[144, null]], "sup3r.preprocessing.cachers.utilities": [[145, null]], "sup3r.preprocessing.collections": [[146, null]], "sup3r.preprocessing.collections.base": [[147, null]], "sup3r.preprocessing.collections.base.Collection": [[148, null]], "sup3r.preprocessing.collections.stats": [[149, null]], "sup3r.preprocessing.collections.stats.StatsCollection": [[150, null]], "sup3r.preprocessing.data_handlers": [[151, null]], "sup3r.preprocessing.data_handlers.base": [[152, null]], "sup3r.preprocessing.data_handlers.base.DailyDataHandler": [[153, null]], "sup3r.preprocessing.data_handlers.base.DataHandler": [[154, null]], "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC": [[155, null]], "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC": [[156, null]], "sup3r.preprocessing.data_handlers.exo": [[157, null]], "sup3r.preprocessing.data_handlers.exo.ExoData": [[158, null]], "sup3r.preprocessing.data_handlers.exo.ExoDataHandler": [[159, null]], "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep": [[160, null]], "sup3r.preprocessing.data_handlers.nc_cc": [[161, null]], "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC": [[162, null]], "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw": [[163, null]], "sup3r.preprocessing.derivers": [[164, null]], "sup3r.preprocessing.derivers.base": [[165, null]], "sup3r.preprocessing.derivers.base.BaseDeriver": [[166, null]], "sup3r.preprocessing.derivers.base.Deriver": [[167, null]], "sup3r.preprocessing.derivers.methods": [[168, null]], "sup3r.preprocessing.derivers.methods.ClearSkyRatio": [[169, null]], "sup3r.preprocessing.derivers.methods.ClearSkyRatioCC": [[170, null]], "sup3r.preprocessing.derivers.methods.CloudMask": [[171, null]], "sup3r.preprocessing.derivers.methods.DerivedFeature": [[172, null]], "sup3r.preprocessing.derivers.methods.PressureWRF": [[173, null]], "sup3r.preprocessing.derivers.methods.SurfaceRH": [[174, null]], "sup3r.preprocessing.derivers.methods.Sza": [[175, null]], "sup3r.preprocessing.derivers.methods.Tas": [[176, null]], "sup3r.preprocessing.derivers.methods.TasMax": [[177, null]], "sup3r.preprocessing.derivers.methods.TasMin": [[178, null]], "sup3r.preprocessing.derivers.methods.TempNCforCC": [[179, null]], "sup3r.preprocessing.derivers.methods.USolar": [[180, null]], "sup3r.preprocessing.derivers.methods.UWind": [[181, null]], "sup3r.preprocessing.derivers.methods.UWindPowerLaw": [[182, null]], "sup3r.preprocessing.derivers.methods.VSolar": [[183, null]], "sup3r.preprocessing.derivers.methods.VWind": [[184, null]], "sup3r.preprocessing.derivers.methods.VWindPowerLaw": [[185, null]], "sup3r.preprocessing.derivers.methods.Winddirection": [[186, null]], "sup3r.preprocessing.derivers.methods.Windspeed": [[187, null]], "sup3r.preprocessing.derivers.utilities": [[188, null]], "sup3r.preprocessing.derivers.utilities.SolarZenith": [[189, null]], "sup3r.preprocessing.derivers.utilities.invert_uv": [[190, null]], "sup3r.preprocessing.derivers.utilities.parse_feature": [[191, null]], "sup3r.preprocessing.derivers.utilities.transform_rotate_wind": [[192, null]], "sup3r.preprocessing.derivers.utilities.windspeed_log_law": [[193, null]], "sup3r.preprocessing.loaders": [[194, null]], "sup3r.preprocessing.loaders.Loader": [[195, null]], "sup3r.preprocessing.loaders.base": [[196, null]], "sup3r.preprocessing.loaders.base.BaseLoader": [[197, null]], "sup3r.preprocessing.loaders.h5": [[198, null]], "sup3r.preprocessing.loaders.h5.LoaderH5": [[199, null]], "sup3r.preprocessing.loaders.nc": [[200, null]], "sup3r.preprocessing.loaders.nc.LoaderNC": [[201, null]], "sup3r.preprocessing.loaders.utilities": [[202, null]], "sup3r.preprocessing.loaders.utilities.standardize_names": [[203, null]], "sup3r.preprocessing.loaders.utilities.standardize_values": [[204, null]], "sup3r.preprocessing.names": [[205, null]], "sup3r.preprocessing.names.Dimension": [[206, null]], "sup3r.preprocessing.rasterizers": [[207, null]], "sup3r.preprocessing.rasterizers.base": [[208, null]], "sup3r.preprocessing.rasterizers.base.BaseRasterizer": [[209, null]], "sup3r.preprocessing.rasterizers.dual": [[210, null]], "sup3r.preprocessing.rasterizers.dual.DualRasterizer": [[211, null]], "sup3r.preprocessing.rasterizers.exo": [[212, null]], "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer": [[213, null]], "sup3r.preprocessing.rasterizers.exo.ExoRasterizer": [[214, null]], "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5": [[215, null]], "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC": [[216, null]], "sup3r.preprocessing.rasterizers.exo.SzaRasterizer": [[217, null]], "sup3r.preprocessing.rasterizers.extended": [[218, null]], "sup3r.preprocessing.rasterizers.extended.Rasterizer": [[219, null]], "sup3r.preprocessing.samplers": [[220, null]], "sup3r.preprocessing.samplers.base": [[221, null]], "sup3r.preprocessing.samplers.base.Sampler": [[222, null]], "sup3r.preprocessing.samplers.cc": [[223, null]], "sup3r.preprocessing.samplers.cc.DualSamplerCC": [[224, null]], "sup3r.preprocessing.samplers.dc": [[225, null]], "sup3r.preprocessing.samplers.dc.SamplerDC": [[226, null]], "sup3r.preprocessing.samplers.dual": [[227, null]], "sup3r.preprocessing.samplers.dual.DualSampler": [[228, null]], "sup3r.preprocessing.samplers.utilities": [[229, null]], "sup3r.preprocessing.samplers.utilities.daily_time_sampler": [[230, null]], "sup3r.preprocessing.samplers.utilities.nsrdb_reduce_daily_data": [[231, null]], "sup3r.preprocessing.samplers.utilities.nsrdb_sub_daily_sampler": [[232, null]], "sup3r.preprocessing.samplers.utilities.uniform_box_sampler": [[233, null]], "sup3r.preprocessing.samplers.utilities.uniform_time_sampler": [[234, null]], "sup3r.preprocessing.samplers.utilities.weighted_box_sampler": [[235, null]], "sup3r.preprocessing.samplers.utilities.weighted_time_sampler": [[236, null]], "sup3r.preprocessing.utilities": [[237, null]], "sup3r.preprocessing.utilities.check_signatures": [[238, null]], "sup3r.preprocessing.utilities.composite_info": [[239, null]], "sup3r.preprocessing.utilities.composite_sig": [[240, null]], "sup3r.preprocessing.utilities.compute_if_dask": [[241, null]], "sup3r.preprocessing.utilities.contains_ellipsis": [[242, null]], "sup3r.preprocessing.utilities.dims_array_tuple": [[243, null]], "sup3r.preprocessing.utilities.expand_paths": [[244, null]], "sup3r.preprocessing.utilities.get_class_kwargs": [[245, null]], "sup3r.preprocessing.utilities.get_date_range_kwargs": [[246, null]], "sup3r.preprocessing.utilities.get_input_handler_class": [[247, null]], "sup3r.preprocessing.utilities.get_obj_params": [[248, null]], "sup3r.preprocessing.utilities.get_source_type": [[249, null]], "sup3r.preprocessing.utilities.is_type_of": [[250, null]], "sup3r.preprocessing.utilities.log_args": [[251, null]], "sup3r.preprocessing.utilities.lower_names": [[252, null]], "sup3r.preprocessing.utilities.lowered": [[253, null]], "sup3r.preprocessing.utilities.make_time_index_from_kws": [[254, null]], "sup3r.preprocessing.utilities.numpy_if_tensor": [[255, null]], "sup3r.preprocessing.utilities.ordered_array": [[256, null]], "sup3r.preprocessing.utilities.ordered_dims": [[257, null]], "sup3r.preprocessing.utilities.parse_ellipsis": [[258, null]], "sup3r.preprocessing.utilities.parse_features": [[259, null]], "sup3r.preprocessing.utilities.parse_keys": [[260, null]], "sup3r.preprocessing.utilities.parse_to_list": [[261, null]], "sup3r.qa": [[262, null]], "sup3r.qa.qa": [[263, null]], "sup3r.qa.qa.Sup3rQa": [[264, null]], "sup3r.qa.qa_cli": [[265, null]], "sup3r.qa.utilities": [[266, null]], "sup3r.qa.utilities.continuous_dist": [[267, null]], "sup3r.qa.utilities.direct_dist": [[268, null]], "sup3r.qa.utilities.frequency_spectrum": [[269, null]], "sup3r.qa.utilities.gradient_dist": [[270, null]], "sup3r.qa.utilities.time_derivative_dist": [[271, null]], "sup3r.qa.utilities.tke_frequency_spectrum": [[272, null]], "sup3r.qa.utilities.tke_wavenumber_spectrum": [[273, null]], "sup3r.qa.utilities.wavenumber_spectrum": [[274, null]], "sup3r.solar": [[275, null]], "sup3r.solar.solar": [[276, null]], "sup3r.solar.solar.Solar": [[277, null]], "sup3r.solar.solar_cli": [[278, null]], "sup3r.solar.solar_cli.kickoff_local_job": [[279, null]], "sup3r.solar.solar_cli.kickoff_slurm_job": [[280, null]], "sup3r.utilities": [[281, null]], "sup3r.utilities.ModuleName": [[282, null]], "sup3r.utilities.cli": [[283, null]], "sup3r.utilities.cli.BaseCLI": [[284, null]], "sup3r.utilities.cli.SlurmManager": [[285, null]], "sup3r.utilities.era_downloader": [[286, null]], "sup3r.utilities.era_downloader.EraDownloader": [[287, null]], "sup3r.utilities.interpolation": [[288, null]], "sup3r.utilities.interpolation.Interpolator": [[289, null]], "sup3r.utilities.loss_metrics": [[290, null]], "sup3r.utilities.loss_metrics.CoarseMseLoss": [[291, null]], "sup3r.utilities.loss_metrics.ExpLoss": [[292, null]], "sup3r.utilities.loss_metrics.LowResLoss": [[293, null]], "sup3r.utilities.loss_metrics.MaterialDerivativeLoss": [[294, null]], "sup3r.utilities.loss_metrics.MmdLoss": [[295, null]], "sup3r.utilities.loss_metrics.MmdMseLoss": [[296, null]], "sup3r.utilities.loss_metrics.MseExpLoss": [[297, null]], "sup3r.utilities.loss_metrics.SpatialExtremesLoss": [[298, null]], "sup3r.utilities.loss_metrics.SpatialExtremesOnlyLoss": [[299, null]], "sup3r.utilities.loss_metrics.SpatialFftOnlyLoss": [[300, null]], "sup3r.utilities.loss_metrics.SpatiotemporalExtremesLoss": [[301, null]], "sup3r.utilities.loss_metrics.SpatiotemporalFftOnlyLoss": [[302, null]], "sup3r.utilities.loss_metrics.StExtremesFftLoss": [[303, null]], "sup3r.utilities.loss_metrics.TemporalExtremesLoss": [[304, null]], "sup3r.utilities.loss_metrics.TemporalExtremesOnlyLoss": [[305, null]], "sup3r.utilities.loss_metrics.gaussian_kernel": [[306, null]], "sup3r.utilities.pytest": [[307, null]], "sup3r.utilities.pytest.helpers": [[308, null]], "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC": [[309, null]], "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC": [[310, null]], "sup3r.utilities.pytest.helpers.BatchHandlerTesterFactory": [[311, null]], "sup3r.utilities.pytest.helpers.DualSamplerTesterCC": [[312, null]], "sup3r.utilities.pytest.helpers.DummyData": [[313, null]], "sup3r.utilities.pytest.helpers.DummySampler": [[314, null]], "sup3r.utilities.pytest.helpers.SamplerTester": [[315, null]], "sup3r.utilities.pytest.helpers.SamplerTesterDC": [[316, null]], "sup3r.utilities.pytest.helpers.make_collect_chunks": [[317, null]], "sup3r.utilities.pytest.helpers.make_fake_cs_ratio_files": [[318, null]], "sup3r.utilities.pytest.helpers.make_fake_dset": [[319, null]], "sup3r.utilities.pytest.helpers.make_fake_h5_chunks": [[320, null]], "sup3r.utilities.pytest.helpers.make_fake_nc_file": [[321, null]], "sup3r.utilities.pytest.helpers.make_fake_tif": [[322, null]], "sup3r.utilities.pytest.helpers.test_sampler_factory": [[323, null]], "sup3r.utilities.utilities": [[324, null]], "sup3r.utilities.utilities.Timer": [[325, null]], "sup3r.utilities.utilities.generate_random_string": [[326, null]], "sup3r.utilities.utilities.nn_fill_array": [[327, null]], "sup3r.utilities.utilities.pd_date_range": [[328, null]], "sup3r.utilities.utilities.preprocess_datasets": [[329, null]], "sup3r.utilities.utilities.safe_cast": [[330, null]], "sup3r.utilities.utilities.safe_serialize": [[331, null]], "sup3r.utilities.utilities.spatial_coarsening": [[332, null]], "sup3r.utilities.utilities.temporal_coarsening": [[333, null]], "sup3r.utilities.utilities.xr_open_mfdataset": [[334, null]]}, "docnames": ["_autosummary/sup3r", "_autosummary/sup3r.batch", "_autosummary/sup3r.batch.batch_cli", "_autosummary/sup3r.bias", "_autosummary/sup3r.bias.abstract", "_autosummary/sup3r.bias.abstract.AbstractBiasCorrection", "_autosummary/sup3r.bias.base", "_autosummary/sup3r.bias.base.DataRetrievalBase", "_autosummary/sup3r.bias.bias_calc", "_autosummary/sup3r.bias.bias_calc.LinearCorrection", "_autosummary/sup3r.bias.bias_calc.MonthlyLinearCorrection", "_autosummary/sup3r.bias.bias_calc.MonthlyScalarCorrection", "_autosummary/sup3r.bias.bias_calc.ScalarCorrection", "_autosummary/sup3r.bias.bias_calc.SkillAssessment", "_autosummary/sup3r.bias.bias_calc_cli", "_autosummary/sup3r.bias.bias_calc_cli.kickoff_local_job", "_autosummary/sup3r.bias.bias_calc_cli.kickoff_slurm_job", "_autosummary/sup3r.bias.bias_calc_vortex", "_autosummary/sup3r.bias.bias_calc_vortex.BiasCorrectUpdate", "_autosummary/sup3r.bias.bias_calc_vortex.VortexMeanPrepper", "_autosummary/sup3r.bias.bias_transforms", "_autosummary/sup3r.bias.bias_transforms.global_linear_bc", "_autosummary/sup3r.bias.bias_transforms.local_linear_bc", "_autosummary/sup3r.bias.bias_transforms.local_presrat_bc", "_autosummary/sup3r.bias.bias_transforms.local_qdm_bc", "_autosummary/sup3r.bias.bias_transforms.monthly_local_linear_bc", "_autosummary/sup3r.bias.mixins", "_autosummary/sup3r.bias.mixins.FillAndSmoothMixin", "_autosummary/sup3r.bias.mixins.ZeroRateMixin", "_autosummary/sup3r.bias.presrat", "_autosummary/sup3r.bias.presrat.PresRat", "_autosummary/sup3r.bias.qdm", "_autosummary/sup3r.bias.qdm.QuantileDeltaMappingCorrection", "_autosummary/sup3r.bias.utilities", "_autosummary/sup3r.bias.utilities.bias_correct_feature", "_autosummary/sup3r.bias.utilities.bias_correct_features", "_autosummary/sup3r.bias.utilities.lin_bc", "_autosummary/sup3r.bias.utilities.qdm_bc", "_autosummary/sup3r.cli", "_autosummary/sup3r.models", "_autosummary/sup3r.models.abstract", "_autosummary/sup3r.models.abstract.AbstractInterface", "_autosummary/sup3r.models.abstract.AbstractSingleModel", "_autosummary/sup3r.models.abstract.TensorboardMixIn", "_autosummary/sup3r.models.base", "_autosummary/sup3r.models.base.Sup3rGan", "_autosummary/sup3r.models.conditional", "_autosummary/sup3r.models.conditional.Sup3rCondMom", "_autosummary/sup3r.models.dc", "_autosummary/sup3r.models.dc.Sup3rGanDC", "_autosummary/sup3r.models.linear", "_autosummary/sup3r.models.linear.LinearInterp", "_autosummary/sup3r.models.multi_step", "_autosummary/sup3r.models.multi_step.MultiStepGan", "_autosummary/sup3r.models.multi_step.MultiStepSurfaceMetGan", "_autosummary/sup3r.models.multi_step.SolarMultiStepGan", "_autosummary/sup3r.models.solar_cc", "_autosummary/sup3r.models.solar_cc.SolarCC", "_autosummary/sup3r.models.surface", "_autosummary/sup3r.models.surface.SurfaceSpatialMetModel", "_autosummary/sup3r.models.utilities", "_autosummary/sup3r.models.utilities.TrainingSession", "_autosummary/sup3r.models.utilities.get_optimizer_class", "_autosummary/sup3r.models.utilities.st_interp", "_autosummary/sup3r.pipeline", "_autosummary/sup3r.pipeline.forward_pass", "_autosummary/sup3r.pipeline.forward_pass.ForwardPass", "_autosummary/sup3r.pipeline.forward_pass_cli", "_autosummary/sup3r.pipeline.forward_pass_cli.kickoff_local_job", "_autosummary/sup3r.pipeline.forward_pass_cli.kickoff_slurm_job", "_autosummary/sup3r.pipeline.pipeline_cli", "_autosummary/sup3r.pipeline.slicer", "_autosummary/sup3r.pipeline.slicer.ForwardPassSlicer", "_autosummary/sup3r.pipeline.strategy", "_autosummary/sup3r.pipeline.strategy.ForwardPassChunk", "_autosummary/sup3r.pipeline.strategy.ForwardPassStrategy", "_autosummary/sup3r.pipeline.utilities", "_autosummary/sup3r.pipeline.utilities.get_chunk_slices", "_autosummary/sup3r.pipeline.utilities.get_model", "_autosummary/sup3r.postprocessing", "_autosummary/sup3r.postprocessing.collectors", "_autosummary/sup3r.postprocessing.collectors.base", "_autosummary/sup3r.postprocessing.collectors.base.BaseCollector", "_autosummary/sup3r.postprocessing.collectors.h5", "_autosummary/sup3r.postprocessing.collectors.h5.CollectorH5", "_autosummary/sup3r.postprocessing.collectors.nc", "_autosummary/sup3r.postprocessing.collectors.nc.CollectorNC", "_autosummary/sup3r.postprocessing.data_collect_cli", "_autosummary/sup3r.postprocessing.data_collect_cli.kickoff_local_job", "_autosummary/sup3r.postprocessing.data_collect_cli.kickoff_slurm_job", "_autosummary/sup3r.postprocessing.writers", "_autosummary/sup3r.postprocessing.writers.base", "_autosummary/sup3r.postprocessing.writers.base.OutputHandler", "_autosummary/sup3r.postprocessing.writers.base.OutputMixin", "_autosummary/sup3r.postprocessing.writers.base.RexOutputs", "_autosummary/sup3r.postprocessing.writers.h5", "_autosummary/sup3r.postprocessing.writers.h5.OutputHandlerH5", "_autosummary/sup3r.postprocessing.writers.nc", "_autosummary/sup3r.postprocessing.writers.nc.OutputHandlerNC", "_autosummary/sup3r.preprocessing", "_autosummary/sup3r.preprocessing.accessor", "_autosummary/sup3r.preprocessing.accessor.Sup3rX", "_autosummary/sup3r.preprocessing.base", "_autosummary/sup3r.preprocessing.base.Container", "_autosummary/sup3r.preprocessing.base.Sup3rDataset", "_autosummary/sup3r.preprocessing.base.Sup3rMeta", "_autosummary/sup3r.preprocessing.batch_handlers", "_autosummary/sup3r.preprocessing.batch_handlers.dc", "_autosummary/sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC", "_autosummary/sup3r.preprocessing.batch_handlers.factory", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandler", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerFactory", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SF", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF", "_autosummary/sup3r.preprocessing.batch_handlers.factory.DualBatchHandler", "_autosummary/sup3r.preprocessing.batch_queues", "_autosummary/sup3r.preprocessing.batch_queues.abstract", "_autosummary/sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue", "_autosummary/sup3r.preprocessing.batch_queues.base", "_autosummary/sup3r.preprocessing.batch_queues.base.SingleBatchQueue", "_autosummary/sup3r.preprocessing.batch_queues.conditional", "_autosummary/sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom1", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom1SF", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom2", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom2SF", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF", "_autosummary/sup3r.preprocessing.batch_queues.dc", "_autosummary/sup3r.preprocessing.batch_queues.dc.BatchQueueDC", "_autosummary/sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC", "_autosummary/sup3r.preprocessing.batch_queues.dual", "_autosummary/sup3r.preprocessing.batch_queues.dual.DualBatchQueue", "_autosummary/sup3r.preprocessing.batch_queues.utilities", "_autosummary/sup3r.preprocessing.batch_queues.utilities.smooth_data", "_autosummary/sup3r.preprocessing.batch_queues.utilities.spatial_simple_enhancing", "_autosummary/sup3r.preprocessing.batch_queues.utilities.temporal_simple_enhancing", "_autosummary/sup3r.preprocessing.cachers", "_autosummary/sup3r.preprocessing.cachers.base", "_autosummary/sup3r.preprocessing.cachers.base.Cacher", "_autosummary/sup3r.preprocessing.cachers.utilities", "_autosummary/sup3r.preprocessing.collections", "_autosummary/sup3r.preprocessing.collections.base", "_autosummary/sup3r.preprocessing.collections.base.Collection", "_autosummary/sup3r.preprocessing.collections.stats", "_autosummary/sup3r.preprocessing.collections.stats.StatsCollection", "_autosummary/sup3r.preprocessing.data_handlers", "_autosummary/sup3r.preprocessing.data_handlers.base", "_autosummary/sup3r.preprocessing.data_handlers.base.DailyDataHandler", "_autosummary/sup3r.preprocessing.data_handlers.base.DataHandler", "_autosummary/sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC", "_autosummary/sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC", "_autosummary/sup3r.preprocessing.data_handlers.exo", "_autosummary/sup3r.preprocessing.data_handlers.exo.ExoData", "_autosummary/sup3r.preprocessing.data_handlers.exo.ExoDataHandler", "_autosummary/sup3r.preprocessing.data_handlers.exo.SingleExoDataStep", "_autosummary/sup3r.preprocessing.data_handlers.nc_cc", "_autosummary/sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC", "_autosummary/sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw", "_autosummary/sup3r.preprocessing.derivers", "_autosummary/sup3r.preprocessing.derivers.base", "_autosummary/sup3r.preprocessing.derivers.base.BaseDeriver", "_autosummary/sup3r.preprocessing.derivers.base.Deriver", "_autosummary/sup3r.preprocessing.derivers.methods", "_autosummary/sup3r.preprocessing.derivers.methods.ClearSkyRatio", "_autosummary/sup3r.preprocessing.derivers.methods.ClearSkyRatioCC", "_autosummary/sup3r.preprocessing.derivers.methods.CloudMask", "_autosummary/sup3r.preprocessing.derivers.methods.DerivedFeature", "_autosummary/sup3r.preprocessing.derivers.methods.PressureWRF", "_autosummary/sup3r.preprocessing.derivers.methods.SurfaceRH", "_autosummary/sup3r.preprocessing.derivers.methods.Sza", "_autosummary/sup3r.preprocessing.derivers.methods.Tas", "_autosummary/sup3r.preprocessing.derivers.methods.TasMax", "_autosummary/sup3r.preprocessing.derivers.methods.TasMin", "_autosummary/sup3r.preprocessing.derivers.methods.TempNCforCC", "_autosummary/sup3r.preprocessing.derivers.methods.USolar", "_autosummary/sup3r.preprocessing.derivers.methods.UWind", "_autosummary/sup3r.preprocessing.derivers.methods.UWindPowerLaw", "_autosummary/sup3r.preprocessing.derivers.methods.VSolar", "_autosummary/sup3r.preprocessing.derivers.methods.VWind", "_autosummary/sup3r.preprocessing.derivers.methods.VWindPowerLaw", "_autosummary/sup3r.preprocessing.derivers.methods.Winddirection", "_autosummary/sup3r.preprocessing.derivers.methods.Windspeed", "_autosummary/sup3r.preprocessing.derivers.utilities", "_autosummary/sup3r.preprocessing.derivers.utilities.SolarZenith", "_autosummary/sup3r.preprocessing.derivers.utilities.invert_uv", "_autosummary/sup3r.preprocessing.derivers.utilities.parse_feature", "_autosummary/sup3r.preprocessing.derivers.utilities.transform_rotate_wind", "_autosummary/sup3r.preprocessing.derivers.utilities.windspeed_log_law", "_autosummary/sup3r.preprocessing.loaders", "_autosummary/sup3r.preprocessing.loaders.Loader", "_autosummary/sup3r.preprocessing.loaders.base", "_autosummary/sup3r.preprocessing.loaders.base.BaseLoader", "_autosummary/sup3r.preprocessing.loaders.h5", "_autosummary/sup3r.preprocessing.loaders.h5.LoaderH5", "_autosummary/sup3r.preprocessing.loaders.nc", "_autosummary/sup3r.preprocessing.loaders.nc.LoaderNC", "_autosummary/sup3r.preprocessing.loaders.utilities", "_autosummary/sup3r.preprocessing.loaders.utilities.standardize_names", "_autosummary/sup3r.preprocessing.loaders.utilities.standardize_values", "_autosummary/sup3r.preprocessing.names", "_autosummary/sup3r.preprocessing.names.Dimension", "_autosummary/sup3r.preprocessing.rasterizers", "_autosummary/sup3r.preprocessing.rasterizers.base", "_autosummary/sup3r.preprocessing.rasterizers.base.BaseRasterizer", "_autosummary/sup3r.preprocessing.rasterizers.dual", "_autosummary/sup3r.preprocessing.rasterizers.dual.DualRasterizer", "_autosummary/sup3r.preprocessing.rasterizers.exo", "_autosummary/sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer", "_autosummary/sup3r.preprocessing.rasterizers.exo.ExoRasterizer", "_autosummary/sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5", "_autosummary/sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC", "_autosummary/sup3r.preprocessing.rasterizers.exo.SzaRasterizer", "_autosummary/sup3r.preprocessing.rasterizers.extended", "_autosummary/sup3r.preprocessing.rasterizers.extended.Rasterizer", "_autosummary/sup3r.preprocessing.samplers", "_autosummary/sup3r.preprocessing.samplers.base", "_autosummary/sup3r.preprocessing.samplers.base.Sampler", "_autosummary/sup3r.preprocessing.samplers.cc", "_autosummary/sup3r.preprocessing.samplers.cc.DualSamplerCC", "_autosummary/sup3r.preprocessing.samplers.dc", "_autosummary/sup3r.preprocessing.samplers.dc.SamplerDC", "_autosummary/sup3r.preprocessing.samplers.dual", "_autosummary/sup3r.preprocessing.samplers.dual.DualSampler", "_autosummary/sup3r.preprocessing.samplers.utilities", "_autosummary/sup3r.preprocessing.samplers.utilities.daily_time_sampler", "_autosummary/sup3r.preprocessing.samplers.utilities.nsrdb_reduce_daily_data", "_autosummary/sup3r.preprocessing.samplers.utilities.nsrdb_sub_daily_sampler", "_autosummary/sup3r.preprocessing.samplers.utilities.uniform_box_sampler", "_autosummary/sup3r.preprocessing.samplers.utilities.uniform_time_sampler", "_autosummary/sup3r.preprocessing.samplers.utilities.weighted_box_sampler", "_autosummary/sup3r.preprocessing.samplers.utilities.weighted_time_sampler", "_autosummary/sup3r.preprocessing.utilities", "_autosummary/sup3r.preprocessing.utilities.check_signatures", "_autosummary/sup3r.preprocessing.utilities.composite_info", "_autosummary/sup3r.preprocessing.utilities.composite_sig", "_autosummary/sup3r.preprocessing.utilities.compute_if_dask", "_autosummary/sup3r.preprocessing.utilities.contains_ellipsis", "_autosummary/sup3r.preprocessing.utilities.dims_array_tuple", "_autosummary/sup3r.preprocessing.utilities.expand_paths", "_autosummary/sup3r.preprocessing.utilities.get_class_kwargs", "_autosummary/sup3r.preprocessing.utilities.get_date_range_kwargs", "_autosummary/sup3r.preprocessing.utilities.get_input_handler_class", "_autosummary/sup3r.preprocessing.utilities.get_obj_params", "_autosummary/sup3r.preprocessing.utilities.get_source_type", "_autosummary/sup3r.preprocessing.utilities.is_type_of", "_autosummary/sup3r.preprocessing.utilities.log_args", "_autosummary/sup3r.preprocessing.utilities.lower_names", "_autosummary/sup3r.preprocessing.utilities.lowered", "_autosummary/sup3r.preprocessing.utilities.make_time_index_from_kws", "_autosummary/sup3r.preprocessing.utilities.numpy_if_tensor", "_autosummary/sup3r.preprocessing.utilities.ordered_array", "_autosummary/sup3r.preprocessing.utilities.ordered_dims", "_autosummary/sup3r.preprocessing.utilities.parse_ellipsis", "_autosummary/sup3r.preprocessing.utilities.parse_features", "_autosummary/sup3r.preprocessing.utilities.parse_keys", "_autosummary/sup3r.preprocessing.utilities.parse_to_list", "_autosummary/sup3r.qa", "_autosummary/sup3r.qa.qa", "_autosummary/sup3r.qa.qa.Sup3rQa", "_autosummary/sup3r.qa.qa_cli", "_autosummary/sup3r.qa.utilities", "_autosummary/sup3r.qa.utilities.continuous_dist", "_autosummary/sup3r.qa.utilities.direct_dist", "_autosummary/sup3r.qa.utilities.frequency_spectrum", "_autosummary/sup3r.qa.utilities.gradient_dist", "_autosummary/sup3r.qa.utilities.time_derivative_dist", "_autosummary/sup3r.qa.utilities.tke_frequency_spectrum", "_autosummary/sup3r.qa.utilities.tke_wavenumber_spectrum", "_autosummary/sup3r.qa.utilities.wavenumber_spectrum", "_autosummary/sup3r.solar", "_autosummary/sup3r.solar.solar", "_autosummary/sup3r.solar.solar.Solar", "_autosummary/sup3r.solar.solar_cli", "_autosummary/sup3r.solar.solar_cli.kickoff_local_job", "_autosummary/sup3r.solar.solar_cli.kickoff_slurm_job", "_autosummary/sup3r.utilities", "_autosummary/sup3r.utilities.ModuleName", "_autosummary/sup3r.utilities.cli", "_autosummary/sup3r.utilities.cli.BaseCLI", "_autosummary/sup3r.utilities.cli.SlurmManager", "_autosummary/sup3r.utilities.era_downloader", "_autosummary/sup3r.utilities.era_downloader.EraDownloader", "_autosummary/sup3r.utilities.interpolation", "_autosummary/sup3r.utilities.interpolation.Interpolator", "_autosummary/sup3r.utilities.loss_metrics", "_autosummary/sup3r.utilities.loss_metrics.CoarseMseLoss", "_autosummary/sup3r.utilities.loss_metrics.ExpLoss", "_autosummary/sup3r.utilities.loss_metrics.LowResLoss", "_autosummary/sup3r.utilities.loss_metrics.MaterialDerivativeLoss", "_autosummary/sup3r.utilities.loss_metrics.MmdLoss", "_autosummary/sup3r.utilities.loss_metrics.MmdMseLoss", "_autosummary/sup3r.utilities.loss_metrics.MseExpLoss", "_autosummary/sup3r.utilities.loss_metrics.SpatialExtremesLoss", "_autosummary/sup3r.utilities.loss_metrics.SpatialExtremesOnlyLoss", "_autosummary/sup3r.utilities.loss_metrics.SpatialFftOnlyLoss", "_autosummary/sup3r.utilities.loss_metrics.SpatiotemporalExtremesLoss", "_autosummary/sup3r.utilities.loss_metrics.SpatiotemporalFftOnlyLoss", "_autosummary/sup3r.utilities.loss_metrics.StExtremesFftLoss", "_autosummary/sup3r.utilities.loss_metrics.TemporalExtremesLoss", "_autosummary/sup3r.utilities.loss_metrics.TemporalExtremesOnlyLoss", "_autosummary/sup3r.utilities.loss_metrics.gaussian_kernel", "_autosummary/sup3r.utilities.pytest", "_autosummary/sup3r.utilities.pytest.helpers", "_autosummary/sup3r.utilities.pytest.helpers.BatchHandlerTesterCC", "_autosummary/sup3r.utilities.pytest.helpers.BatchHandlerTesterDC", "_autosummary/sup3r.utilities.pytest.helpers.BatchHandlerTesterFactory", "_autosummary/sup3r.utilities.pytest.helpers.DualSamplerTesterCC", "_autosummary/sup3r.utilities.pytest.helpers.DummyData", "_autosummary/sup3r.utilities.pytest.helpers.DummySampler", "_autosummary/sup3r.utilities.pytest.helpers.SamplerTester", "_autosummary/sup3r.utilities.pytest.helpers.SamplerTesterDC", "_autosummary/sup3r.utilities.pytest.helpers.make_collect_chunks", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_cs_ratio_files", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_dset", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_h5_chunks", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_nc_file", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_tif", "_autosummary/sup3r.utilities.pytest.helpers.test_sampler_factory", "_autosummary/sup3r.utilities.utilities", "_autosummary/sup3r.utilities.utilities.Timer", "_autosummary/sup3r.utilities.utilities.generate_random_string", "_autosummary/sup3r.utilities.utilities.nn_fill_array", "_autosummary/sup3r.utilities.utilities.pd_date_range", "_autosummary/sup3r.utilities.utilities.preprocess_datasets", "_autosummary/sup3r.utilities.utilities.safe_cast", "_autosummary/sup3r.utilities.utilities.safe_serialize", "_autosummary/sup3r.utilities.utilities.spatial_coarsening", "_autosummary/sup3r.utilities.utilities.temporal_coarsening", "_autosummary/sup3r.utilities.utilities.xr_open_mfdataset", "_cli/cli", "_cli/sup3r", "api", "examples/examples", "examples/sup3rcc", "examples/sup3rwind", "index", "misc/installation", "misc/installation_usage"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["_autosummary/sup3r.rst", "_autosummary/sup3r.batch.rst", "_autosummary/sup3r.batch.batch_cli.rst", "_autosummary/sup3r.bias.rst", "_autosummary/sup3r.bias.abstract.rst", "_autosummary/sup3r.bias.abstract.AbstractBiasCorrection.rst", "_autosummary/sup3r.bias.base.rst", "_autosummary/sup3r.bias.base.DataRetrievalBase.rst", "_autosummary/sup3r.bias.bias_calc.rst", "_autosummary/sup3r.bias.bias_calc.LinearCorrection.rst", "_autosummary/sup3r.bias.bias_calc.MonthlyLinearCorrection.rst", "_autosummary/sup3r.bias.bias_calc.MonthlyScalarCorrection.rst", "_autosummary/sup3r.bias.bias_calc.ScalarCorrection.rst", "_autosummary/sup3r.bias.bias_calc.SkillAssessment.rst", "_autosummary/sup3r.bias.bias_calc_cli.rst", "_autosummary/sup3r.bias.bias_calc_cli.kickoff_local_job.rst", "_autosummary/sup3r.bias.bias_calc_cli.kickoff_slurm_job.rst", "_autosummary/sup3r.bias.bias_calc_vortex.rst", "_autosummary/sup3r.bias.bias_calc_vortex.BiasCorrectUpdate.rst", "_autosummary/sup3r.bias.bias_calc_vortex.VortexMeanPrepper.rst", "_autosummary/sup3r.bias.bias_transforms.rst", "_autosummary/sup3r.bias.bias_transforms.global_linear_bc.rst", "_autosummary/sup3r.bias.bias_transforms.local_linear_bc.rst", "_autosummary/sup3r.bias.bias_transforms.local_presrat_bc.rst", "_autosummary/sup3r.bias.bias_transforms.local_qdm_bc.rst", "_autosummary/sup3r.bias.bias_transforms.monthly_local_linear_bc.rst", "_autosummary/sup3r.bias.mixins.rst", "_autosummary/sup3r.bias.mixins.FillAndSmoothMixin.rst", "_autosummary/sup3r.bias.mixins.ZeroRateMixin.rst", "_autosummary/sup3r.bias.presrat.rst", "_autosummary/sup3r.bias.presrat.PresRat.rst", "_autosummary/sup3r.bias.qdm.rst", "_autosummary/sup3r.bias.qdm.QuantileDeltaMappingCorrection.rst", "_autosummary/sup3r.bias.utilities.rst", "_autosummary/sup3r.bias.utilities.bias_correct_feature.rst", "_autosummary/sup3r.bias.utilities.bias_correct_features.rst", "_autosummary/sup3r.bias.utilities.lin_bc.rst", "_autosummary/sup3r.bias.utilities.qdm_bc.rst", "_autosummary/sup3r.cli.rst", "_autosummary/sup3r.models.rst", "_autosummary/sup3r.models.abstract.rst", "_autosummary/sup3r.models.abstract.AbstractInterface.rst", "_autosummary/sup3r.models.abstract.AbstractSingleModel.rst", "_autosummary/sup3r.models.abstract.TensorboardMixIn.rst", "_autosummary/sup3r.models.base.rst", "_autosummary/sup3r.models.base.Sup3rGan.rst", "_autosummary/sup3r.models.conditional.rst", "_autosummary/sup3r.models.conditional.Sup3rCondMom.rst", "_autosummary/sup3r.models.dc.rst", "_autosummary/sup3r.models.dc.Sup3rGanDC.rst", "_autosummary/sup3r.models.linear.rst", "_autosummary/sup3r.models.linear.LinearInterp.rst", "_autosummary/sup3r.models.multi_step.rst", "_autosummary/sup3r.models.multi_step.MultiStepGan.rst", "_autosummary/sup3r.models.multi_step.MultiStepSurfaceMetGan.rst", "_autosummary/sup3r.models.multi_step.SolarMultiStepGan.rst", "_autosummary/sup3r.models.solar_cc.rst", "_autosummary/sup3r.models.solar_cc.SolarCC.rst", "_autosummary/sup3r.models.surface.rst", "_autosummary/sup3r.models.surface.SurfaceSpatialMetModel.rst", "_autosummary/sup3r.models.utilities.rst", "_autosummary/sup3r.models.utilities.TrainingSession.rst", "_autosummary/sup3r.models.utilities.get_optimizer_class.rst", "_autosummary/sup3r.models.utilities.st_interp.rst", "_autosummary/sup3r.pipeline.rst", "_autosummary/sup3r.pipeline.forward_pass.rst", "_autosummary/sup3r.pipeline.forward_pass.ForwardPass.rst", "_autosummary/sup3r.pipeline.forward_pass_cli.rst", "_autosummary/sup3r.pipeline.forward_pass_cli.kickoff_local_job.rst", "_autosummary/sup3r.pipeline.forward_pass_cli.kickoff_slurm_job.rst", "_autosummary/sup3r.pipeline.pipeline_cli.rst", "_autosummary/sup3r.pipeline.slicer.rst", "_autosummary/sup3r.pipeline.slicer.ForwardPassSlicer.rst", "_autosummary/sup3r.pipeline.strategy.rst", "_autosummary/sup3r.pipeline.strategy.ForwardPassChunk.rst", "_autosummary/sup3r.pipeline.strategy.ForwardPassStrategy.rst", "_autosummary/sup3r.pipeline.utilities.rst", "_autosummary/sup3r.pipeline.utilities.get_chunk_slices.rst", "_autosummary/sup3r.pipeline.utilities.get_model.rst", "_autosummary/sup3r.postprocessing.rst", "_autosummary/sup3r.postprocessing.collectors.rst", "_autosummary/sup3r.postprocessing.collectors.base.rst", "_autosummary/sup3r.postprocessing.collectors.base.BaseCollector.rst", "_autosummary/sup3r.postprocessing.collectors.h5.rst", "_autosummary/sup3r.postprocessing.collectors.h5.CollectorH5.rst", "_autosummary/sup3r.postprocessing.collectors.nc.rst", "_autosummary/sup3r.postprocessing.collectors.nc.CollectorNC.rst", "_autosummary/sup3r.postprocessing.data_collect_cli.rst", "_autosummary/sup3r.postprocessing.data_collect_cli.kickoff_local_job.rst", "_autosummary/sup3r.postprocessing.data_collect_cli.kickoff_slurm_job.rst", "_autosummary/sup3r.postprocessing.writers.rst", "_autosummary/sup3r.postprocessing.writers.base.rst", "_autosummary/sup3r.postprocessing.writers.base.OutputHandler.rst", "_autosummary/sup3r.postprocessing.writers.base.OutputMixin.rst", "_autosummary/sup3r.postprocessing.writers.base.RexOutputs.rst", "_autosummary/sup3r.postprocessing.writers.h5.rst", "_autosummary/sup3r.postprocessing.writers.h5.OutputHandlerH5.rst", "_autosummary/sup3r.postprocessing.writers.nc.rst", "_autosummary/sup3r.postprocessing.writers.nc.OutputHandlerNC.rst", "_autosummary/sup3r.preprocessing.rst", "_autosummary/sup3r.preprocessing.accessor.rst", "_autosummary/sup3r.preprocessing.accessor.Sup3rX.rst", "_autosummary/sup3r.preprocessing.base.rst", "_autosummary/sup3r.preprocessing.base.Container.rst", "_autosummary/sup3r.preprocessing.base.Sup3rDataset.rst", "_autosummary/sup3r.preprocessing.base.Sup3rMeta.rst", "_autosummary/sup3r.preprocessing.batch_handlers.rst", "_autosummary/sup3r.preprocessing.batch_handlers.dc.rst", "_autosummary/sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandler.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerFactory.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SF.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.rst", "_autosummary/sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.rst", "_autosummary/sup3r.preprocessing.batch_queues.rst", "_autosummary/sup3r.preprocessing.batch_queues.abstract.rst", "_autosummary/sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.rst", "_autosummary/sup3r.preprocessing.batch_queues.base.rst", "_autosummary/sup3r.preprocessing.batch_queues.base.SingleBatchQueue.rst", "_autosummary/sup3r.preprocessing.batch_queues.conditional.rst", "_autosummary/sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.rst", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom1.rst", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.rst", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom2.rst", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.rst", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.rst", "_autosummary/sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.rst", "_autosummary/sup3r.preprocessing.batch_queues.dc.rst", "_autosummary/sup3r.preprocessing.batch_queues.dc.BatchQueueDC.rst", "_autosummary/sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.rst", "_autosummary/sup3r.preprocessing.batch_queues.dual.rst", "_autosummary/sup3r.preprocessing.batch_queues.dual.DualBatchQueue.rst", "_autosummary/sup3r.preprocessing.batch_queues.utilities.rst", "_autosummary/sup3r.preprocessing.batch_queues.utilities.smooth_data.rst", "_autosummary/sup3r.preprocessing.batch_queues.utilities.spatial_simple_enhancing.rst", "_autosummary/sup3r.preprocessing.batch_queues.utilities.temporal_simple_enhancing.rst", "_autosummary/sup3r.preprocessing.cachers.rst", "_autosummary/sup3r.preprocessing.cachers.base.rst", "_autosummary/sup3r.preprocessing.cachers.base.Cacher.rst", "_autosummary/sup3r.preprocessing.cachers.utilities.rst", "_autosummary/sup3r.preprocessing.collections.rst", "_autosummary/sup3r.preprocessing.collections.base.rst", "_autosummary/sup3r.preprocessing.collections.base.Collection.rst", "_autosummary/sup3r.preprocessing.collections.stats.rst", "_autosummary/sup3r.preprocessing.collections.stats.StatsCollection.rst", "_autosummary/sup3r.preprocessing.data_handlers.rst", "_autosummary/sup3r.preprocessing.data_handlers.base.rst", "_autosummary/sup3r.preprocessing.data_handlers.base.DailyDataHandler.rst", "_autosummary/sup3r.preprocessing.data_handlers.base.DataHandler.rst", "_autosummary/sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.rst", "_autosummary/sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.rst", "_autosummary/sup3r.preprocessing.data_handlers.exo.rst", "_autosummary/sup3r.preprocessing.data_handlers.exo.ExoData.rst", "_autosummary/sup3r.preprocessing.data_handlers.exo.ExoDataHandler.rst", "_autosummary/sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.rst", "_autosummary/sup3r.preprocessing.data_handlers.nc_cc.rst", "_autosummary/sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.rst", "_autosummary/sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.rst", "_autosummary/sup3r.preprocessing.derivers.rst", "_autosummary/sup3r.preprocessing.derivers.base.rst", "_autosummary/sup3r.preprocessing.derivers.base.BaseDeriver.rst", "_autosummary/sup3r.preprocessing.derivers.base.Deriver.rst", "_autosummary/sup3r.preprocessing.derivers.methods.rst", "_autosummary/sup3r.preprocessing.derivers.methods.ClearSkyRatio.rst", "_autosummary/sup3r.preprocessing.derivers.methods.ClearSkyRatioCC.rst", "_autosummary/sup3r.preprocessing.derivers.methods.CloudMask.rst", "_autosummary/sup3r.preprocessing.derivers.methods.DerivedFeature.rst", "_autosummary/sup3r.preprocessing.derivers.methods.PressureWRF.rst", "_autosummary/sup3r.preprocessing.derivers.methods.SurfaceRH.rst", "_autosummary/sup3r.preprocessing.derivers.methods.Sza.rst", "_autosummary/sup3r.preprocessing.derivers.methods.Tas.rst", "_autosummary/sup3r.preprocessing.derivers.methods.TasMax.rst", "_autosummary/sup3r.preprocessing.derivers.methods.TasMin.rst", "_autosummary/sup3r.preprocessing.derivers.methods.TempNCforCC.rst", "_autosummary/sup3r.preprocessing.derivers.methods.USolar.rst", "_autosummary/sup3r.preprocessing.derivers.methods.UWind.rst", "_autosummary/sup3r.preprocessing.derivers.methods.UWindPowerLaw.rst", "_autosummary/sup3r.preprocessing.derivers.methods.VSolar.rst", "_autosummary/sup3r.preprocessing.derivers.methods.VWind.rst", "_autosummary/sup3r.preprocessing.derivers.methods.VWindPowerLaw.rst", "_autosummary/sup3r.preprocessing.derivers.methods.Winddirection.rst", "_autosummary/sup3r.preprocessing.derivers.methods.Windspeed.rst", "_autosummary/sup3r.preprocessing.derivers.utilities.rst", "_autosummary/sup3r.preprocessing.derivers.utilities.SolarZenith.rst", "_autosummary/sup3r.preprocessing.derivers.utilities.invert_uv.rst", "_autosummary/sup3r.preprocessing.derivers.utilities.parse_feature.rst", "_autosummary/sup3r.preprocessing.derivers.utilities.transform_rotate_wind.rst", "_autosummary/sup3r.preprocessing.derivers.utilities.windspeed_log_law.rst", "_autosummary/sup3r.preprocessing.loaders.rst", "_autosummary/sup3r.preprocessing.loaders.Loader.rst", "_autosummary/sup3r.preprocessing.loaders.base.rst", "_autosummary/sup3r.preprocessing.loaders.base.BaseLoader.rst", "_autosummary/sup3r.preprocessing.loaders.h5.rst", "_autosummary/sup3r.preprocessing.loaders.h5.LoaderH5.rst", "_autosummary/sup3r.preprocessing.loaders.nc.rst", "_autosummary/sup3r.preprocessing.loaders.nc.LoaderNC.rst", "_autosummary/sup3r.preprocessing.loaders.utilities.rst", "_autosummary/sup3r.preprocessing.loaders.utilities.standardize_names.rst", "_autosummary/sup3r.preprocessing.loaders.utilities.standardize_values.rst", "_autosummary/sup3r.preprocessing.names.rst", "_autosummary/sup3r.preprocessing.names.Dimension.rst", "_autosummary/sup3r.preprocessing.rasterizers.rst", "_autosummary/sup3r.preprocessing.rasterizers.base.rst", "_autosummary/sup3r.preprocessing.rasterizers.base.BaseRasterizer.rst", "_autosummary/sup3r.preprocessing.rasterizers.dual.rst", "_autosummary/sup3r.preprocessing.rasterizers.dual.DualRasterizer.rst", "_autosummary/sup3r.preprocessing.rasterizers.exo.rst", "_autosummary/sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.rst", "_autosummary/sup3r.preprocessing.rasterizers.exo.ExoRasterizer.rst", "_autosummary/sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5.rst", "_autosummary/sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC.rst", "_autosummary/sup3r.preprocessing.rasterizers.exo.SzaRasterizer.rst", "_autosummary/sup3r.preprocessing.rasterizers.extended.rst", "_autosummary/sup3r.preprocessing.rasterizers.extended.Rasterizer.rst", "_autosummary/sup3r.preprocessing.samplers.rst", "_autosummary/sup3r.preprocessing.samplers.base.rst", "_autosummary/sup3r.preprocessing.samplers.base.Sampler.rst", "_autosummary/sup3r.preprocessing.samplers.cc.rst", "_autosummary/sup3r.preprocessing.samplers.cc.DualSamplerCC.rst", "_autosummary/sup3r.preprocessing.samplers.dc.rst", "_autosummary/sup3r.preprocessing.samplers.dc.SamplerDC.rst", "_autosummary/sup3r.preprocessing.samplers.dual.rst", "_autosummary/sup3r.preprocessing.samplers.dual.DualSampler.rst", "_autosummary/sup3r.preprocessing.samplers.utilities.rst", "_autosummary/sup3r.preprocessing.samplers.utilities.daily_time_sampler.rst", "_autosummary/sup3r.preprocessing.samplers.utilities.nsrdb_reduce_daily_data.rst", "_autosummary/sup3r.preprocessing.samplers.utilities.nsrdb_sub_daily_sampler.rst", "_autosummary/sup3r.preprocessing.samplers.utilities.uniform_box_sampler.rst", "_autosummary/sup3r.preprocessing.samplers.utilities.uniform_time_sampler.rst", "_autosummary/sup3r.preprocessing.samplers.utilities.weighted_box_sampler.rst", "_autosummary/sup3r.preprocessing.samplers.utilities.weighted_time_sampler.rst", "_autosummary/sup3r.preprocessing.utilities.rst", "_autosummary/sup3r.preprocessing.utilities.check_signatures.rst", "_autosummary/sup3r.preprocessing.utilities.composite_info.rst", "_autosummary/sup3r.preprocessing.utilities.composite_sig.rst", "_autosummary/sup3r.preprocessing.utilities.compute_if_dask.rst", "_autosummary/sup3r.preprocessing.utilities.contains_ellipsis.rst", "_autosummary/sup3r.preprocessing.utilities.dims_array_tuple.rst", "_autosummary/sup3r.preprocessing.utilities.expand_paths.rst", "_autosummary/sup3r.preprocessing.utilities.get_class_kwargs.rst", "_autosummary/sup3r.preprocessing.utilities.get_date_range_kwargs.rst", "_autosummary/sup3r.preprocessing.utilities.get_input_handler_class.rst", "_autosummary/sup3r.preprocessing.utilities.get_obj_params.rst", "_autosummary/sup3r.preprocessing.utilities.get_source_type.rst", "_autosummary/sup3r.preprocessing.utilities.is_type_of.rst", "_autosummary/sup3r.preprocessing.utilities.log_args.rst", "_autosummary/sup3r.preprocessing.utilities.lower_names.rst", "_autosummary/sup3r.preprocessing.utilities.lowered.rst", "_autosummary/sup3r.preprocessing.utilities.make_time_index_from_kws.rst", "_autosummary/sup3r.preprocessing.utilities.numpy_if_tensor.rst", "_autosummary/sup3r.preprocessing.utilities.ordered_array.rst", "_autosummary/sup3r.preprocessing.utilities.ordered_dims.rst", "_autosummary/sup3r.preprocessing.utilities.parse_ellipsis.rst", "_autosummary/sup3r.preprocessing.utilities.parse_features.rst", "_autosummary/sup3r.preprocessing.utilities.parse_keys.rst", "_autosummary/sup3r.preprocessing.utilities.parse_to_list.rst", "_autosummary/sup3r.qa.rst", "_autosummary/sup3r.qa.qa.rst", "_autosummary/sup3r.qa.qa.Sup3rQa.rst", "_autosummary/sup3r.qa.qa_cli.rst", "_autosummary/sup3r.qa.utilities.rst", "_autosummary/sup3r.qa.utilities.continuous_dist.rst", "_autosummary/sup3r.qa.utilities.direct_dist.rst", "_autosummary/sup3r.qa.utilities.frequency_spectrum.rst", "_autosummary/sup3r.qa.utilities.gradient_dist.rst", "_autosummary/sup3r.qa.utilities.time_derivative_dist.rst", "_autosummary/sup3r.qa.utilities.tke_frequency_spectrum.rst", "_autosummary/sup3r.qa.utilities.tke_wavenumber_spectrum.rst", "_autosummary/sup3r.qa.utilities.wavenumber_spectrum.rst", "_autosummary/sup3r.solar.rst", "_autosummary/sup3r.solar.solar.rst", "_autosummary/sup3r.solar.solar.Solar.rst", "_autosummary/sup3r.solar.solar_cli.rst", "_autosummary/sup3r.solar.solar_cli.kickoff_local_job.rst", "_autosummary/sup3r.solar.solar_cli.kickoff_slurm_job.rst", "_autosummary/sup3r.utilities.rst", "_autosummary/sup3r.utilities.ModuleName.rst", "_autosummary/sup3r.utilities.cli.rst", "_autosummary/sup3r.utilities.cli.BaseCLI.rst", "_autosummary/sup3r.utilities.cli.SlurmManager.rst", "_autosummary/sup3r.utilities.era_downloader.rst", "_autosummary/sup3r.utilities.era_downloader.EraDownloader.rst", "_autosummary/sup3r.utilities.interpolation.rst", "_autosummary/sup3r.utilities.interpolation.Interpolator.rst", "_autosummary/sup3r.utilities.loss_metrics.rst", "_autosummary/sup3r.utilities.loss_metrics.CoarseMseLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.ExpLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.LowResLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.MaterialDerivativeLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.MmdLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.MmdMseLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.MseExpLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.SpatialExtremesLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.SpatialExtremesOnlyLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.SpatialFftOnlyLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.SpatiotemporalExtremesLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.SpatiotemporalFftOnlyLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.StExtremesFftLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.TemporalExtremesLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.TemporalExtremesOnlyLoss.rst", "_autosummary/sup3r.utilities.loss_metrics.gaussian_kernel.rst", "_autosummary/sup3r.utilities.pytest.rst", "_autosummary/sup3r.utilities.pytest.helpers.rst", "_autosummary/sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.rst", "_autosummary/sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.rst", "_autosummary/sup3r.utilities.pytest.helpers.BatchHandlerTesterFactory.rst", "_autosummary/sup3r.utilities.pytest.helpers.DualSamplerTesterCC.rst", "_autosummary/sup3r.utilities.pytest.helpers.DummyData.rst", "_autosummary/sup3r.utilities.pytest.helpers.DummySampler.rst", "_autosummary/sup3r.utilities.pytest.helpers.SamplerTester.rst", "_autosummary/sup3r.utilities.pytest.helpers.SamplerTesterDC.rst", "_autosummary/sup3r.utilities.pytest.helpers.make_collect_chunks.rst", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_cs_ratio_files.rst", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_dset.rst", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_h5_chunks.rst", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_nc_file.rst", "_autosummary/sup3r.utilities.pytest.helpers.make_fake_tif.rst", "_autosummary/sup3r.utilities.pytest.helpers.test_sampler_factory.rst", "_autosummary/sup3r.utilities.utilities.rst", "_autosummary/sup3r.utilities.utilities.Timer.rst", "_autosummary/sup3r.utilities.utilities.generate_random_string.rst", "_autosummary/sup3r.utilities.utilities.nn_fill_array.rst", "_autosummary/sup3r.utilities.utilities.pd_date_range.rst", "_autosummary/sup3r.utilities.utilities.preprocess_datasets.rst", "_autosummary/sup3r.utilities.utilities.safe_cast.rst", "_autosummary/sup3r.utilities.utilities.safe_serialize.rst", "_autosummary/sup3r.utilities.utilities.spatial_coarsening.rst", "_autosummary/sup3r.utilities.utilities.temporal_coarsening.rst", "_autosummary/sup3r.utilities.utilities.xr_open_mfdataset.rst", "_cli/cli.rst", "_cli/sup3r.rst", "api.rst", "examples/examples.rst", "examples/sup3rcc.rst", "examples/sup3rwind.rst", "index.rst", "misc/installation.rst", "misc/installation_usage.rst"], "indexentries": {"--background": [[336, "cmdoption-sup3r-pipeline-background", false]], "--cancel": [[336, "cmdoption-sup3r-batch-cancel", false], [336, "cmdoption-sup3r-pipeline-cancel", false]], "--config_file": [[336, "cmdoption-sup3r-c", false]], "--delete": [[336, "cmdoption-sup3r-batch-delete", false]], "--dry-run": [[336, "cmdoption-sup3r-batch-dry-run", false]], "--monitor": [[336, "cmdoption-sup3r-pipeline-monitor", false]], "--monitor-background": [[336, "cmdoption-sup3r-batch-monitor-background", false]], "--verbose": [[336, "cmdoption-sup3r-batch-v", false], [336, "cmdoption-sup3r-bias-calc-v", false], [336, "cmdoption-sup3r-data-collect-v", false], [336, "cmdoption-sup3r-forward-pass-v", false], [336, "cmdoption-sup3r-pipeline-v", false], [336, "cmdoption-sup3r-qa-v", false], [336, "cmdoption-sup3r-solar-v", false], [336, "cmdoption-sup3r-v", false]], "--version": [[336, "cmdoption-sup3r-version", false]], "-c": [[336, "cmdoption-sup3r-c", false]], "-v": [[336, "cmdoption-sup3r-batch-v", false], [336, "cmdoption-sup3r-bias-calc-v", false], [336, "cmdoption-sup3r-data-collect-v", false], [336, "cmdoption-sup3r-forward-pass-v", false], [336, "cmdoption-sup3r-pipeline-v", false], [336, "cmdoption-sup3r-qa-v", false], [336, "cmdoption-sup3r-solar-v", false], [336, "cmdoption-sup3r-v", false]], "__add__() (abstractbatchqueue.batch method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.Batch.__add__", false]], "__add__() (batchhandler.batch method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.Batch.__add__", false]], "__add__() (batchhandlercc.batch method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.Batch.__add__", false]], "__add__() (batchhandlerdc.batch method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.Batch.__add__", false]], "__add__() (batchhandlermom1.batch method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.Batch.__add__", false]], "__add__() (batchhandlermom1.conditionalbatch method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.ConditionalBatch.__add__", false]], "__add__() (batchhandlermom1sf.batch method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.Batch.__add__", false]], "__add__() (batchhandlermom1sf.conditionalbatch method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.ConditionalBatch.__add__", false]], "__add__() (batchhandlermom2.batch method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.Batch.__add__", false]], "__add__() (batchhandlermom2.conditionalbatch method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.ConditionalBatch.__add__", false]], "__add__() (batchhandlermom2sep.batch method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.Batch.__add__", false]], "__add__() (batchhandlermom2sep.conditionalbatch method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.ConditionalBatch.__add__", false]], "__add__() (batchhandlermom2sepsf.batch method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.Batch.__add__", false]], "__add__() (batchhandlermom2sepsf.conditionalbatch method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.ConditionalBatch.__add__", false]], "__add__() (batchhandlertestercc.batch method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.Batch.__add__", false]], "__add__() (batchhandlertesterdc.batch method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.Batch.__add__", false]], "__add__() (batchqueuedc.batch method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.Batch.__add__", false]], "__add__() (conditionalbatchqueue.batch method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.Batch.__add__", false]], "__add__() (conditionalbatchqueue.conditionalbatch method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.ConditionalBatch.__add__", false]], "__add__() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.__add__", false]], "__add__() (dualbatchhandler.batch method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.Batch.__add__", false]], "__add__() (dualbatchqueue.batch method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.Batch.__add__", false]], "__add__() (modulename method)": [[282, "sup3r.utilities.ModuleName.__add__", false]], "__add__() (queuemom1.batch method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.Batch.__add__", false]], "__add__() (queuemom1.conditionalbatch method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.ConditionalBatch.__add__", false]], "__add__() (queuemom1sf.batch method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.Batch.__add__", false]], "__add__() (queuemom1sf.conditionalbatch method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.ConditionalBatch.__add__", false]], "__add__() (queuemom2.batch method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.Batch.__add__", false]], "__add__() (queuemom2.conditionalbatch method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.ConditionalBatch.__add__", false]], "__add__() (queuemom2sep.batch method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.Batch.__add__", false]], "__add__() (queuemom2sep.conditionalbatch method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.ConditionalBatch.__add__", false]], "__add__() (queuemom2sepsf.batch method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.Batch.__add__", false]], "__add__() (queuemom2sepsf.conditionalbatch method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.ConditionalBatch.__add__", false]], "__add__() (queuemom2sf.batch method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.Batch.__add__", false]], "__add__() (queuemom2sf.conditionalbatch method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.ConditionalBatch.__add__", false]], "__add__() (singlebatchqueue.batch method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.Batch.__add__", false]], "__add__() (valbatchqueuedc.batch method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.Batch.__add__", false]], "__call__() (coarsemseloss method)": [[291, "sup3r.utilities.loss_metrics.CoarseMseLoss.__call__", false]], "__call__() (exploss method)": [[292, "sup3r.utilities.loss_metrics.ExpLoss.__call__", false]], "__call__() (lowresloss method)": [[293, "sup3r.utilities.loss_metrics.LowResLoss.__call__", false]], "__call__() (materialderivativeloss method)": [[294, "sup3r.utilities.loss_metrics.MaterialDerivativeLoss.__call__", false]], "__call__() (mmdloss method)": [[295, "sup3r.utilities.loss_metrics.MmdLoss.__call__", false]], "__call__() (mmdmseloss method)": [[296, "sup3r.utilities.loss_metrics.MmdMseLoss.__call__", false]], "__call__() (mseexploss method)": [[297, "sup3r.utilities.loss_metrics.MseExpLoss.__call__", false]], "__call__() (spatialextremesloss method)": [[298, "sup3r.utilities.loss_metrics.SpatialExtremesLoss.__call__", false]], "__call__() (spatialextremesonlyloss method)": [[299, "sup3r.utilities.loss_metrics.SpatialExtremesOnlyLoss.__call__", false]], "__call__() (spatialfftonlyloss method)": [[300, "sup3r.utilities.loss_metrics.SpatialFftOnlyLoss.__call__", false]], "__call__() (spatiotemporalextremesloss method)": [[301, "sup3r.utilities.loss_metrics.SpatiotemporalExtremesLoss.__call__", false]], "__call__() (spatiotemporalfftonlyloss method)": [[302, "sup3r.utilities.loss_metrics.SpatiotemporalFftOnlyLoss.__call__", false]], "__call__() (stextremesfftloss method)": [[303, "sup3r.utilities.loss_metrics.StExtremesFftLoss.__call__", false]], "__call__() (sup3rmeta method)": [[105, "sup3r.preprocessing.base.Sup3rMeta.__call__", false]], "__call__() (temporalextremesloss method)": [[304, "sup3r.utilities.loss_metrics.TemporalExtremesLoss.__call__", false]], "__call__() (temporalextremesonlyloss method)": [[305, "sup3r.utilities.loss_metrics.TemporalExtremesOnlyLoss.__call__", false]], "__call__() (timer method)": [[325, "sup3r.utilities.utilities.Timer.__call__", false]], "__mul__() (abstractbatchqueue.batch method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.Batch.__mul__", false]], "__mul__() (batchhandler.batch method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.Batch.__mul__", false]], "__mul__() (batchhandlercc.batch method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.Batch.__mul__", false]], "__mul__() (batchhandlerdc.batch method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.Batch.__mul__", false]], "__mul__() (batchhandlermom1.batch method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.Batch.__mul__", false]], "__mul__() (batchhandlermom1.conditionalbatch method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.ConditionalBatch.__mul__", false]], "__mul__() (batchhandlermom1sf.batch method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.Batch.__mul__", false]], "__mul__() (batchhandlermom1sf.conditionalbatch method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.ConditionalBatch.__mul__", false]], "__mul__() (batchhandlermom2.batch method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.Batch.__mul__", false]], "__mul__() (batchhandlermom2.conditionalbatch method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.ConditionalBatch.__mul__", false]], "__mul__() (batchhandlermom2sep.batch method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.Batch.__mul__", false]], "__mul__() (batchhandlermom2sep.conditionalbatch method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.ConditionalBatch.__mul__", false]], "__mul__() (batchhandlermom2sepsf.batch method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.Batch.__mul__", false]], "__mul__() (batchhandlermom2sepsf.conditionalbatch method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.ConditionalBatch.__mul__", false]], "__mul__() (batchhandlertestercc.batch method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.Batch.__mul__", false]], "__mul__() (batchhandlertesterdc.batch method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.Batch.__mul__", false]], "__mul__() (batchqueuedc.batch method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.Batch.__mul__", false]], "__mul__() (conditionalbatchqueue.batch method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.Batch.__mul__", false]], "__mul__() (conditionalbatchqueue.conditionalbatch method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.ConditionalBatch.__mul__", false]], "__mul__() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.__mul__", false]], "__mul__() (dualbatchhandler.batch method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.Batch.__mul__", false]], "__mul__() (dualbatchqueue.batch method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.Batch.__mul__", false]], "__mul__() (modulename method)": [[282, "sup3r.utilities.ModuleName.__mul__", false]], "__mul__() (queuemom1.batch method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.Batch.__mul__", false]], "__mul__() (queuemom1.conditionalbatch method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.ConditionalBatch.__mul__", false]], "__mul__() (queuemom1sf.batch method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.Batch.__mul__", false]], "__mul__() (queuemom1sf.conditionalbatch method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.ConditionalBatch.__mul__", false]], "__mul__() (queuemom2.batch method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.Batch.__mul__", false]], "__mul__() (queuemom2.conditionalbatch method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.ConditionalBatch.__mul__", false]], "__mul__() (queuemom2sep.batch method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.Batch.__mul__", false]], "__mul__() (queuemom2sep.conditionalbatch method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.ConditionalBatch.__mul__", false]], "__mul__() (queuemom2sepsf.batch method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.Batch.__mul__", false]], "__mul__() (queuemom2sepsf.conditionalbatch method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.ConditionalBatch.__mul__", false]], "__mul__() (queuemom2sf.batch method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.Batch.__mul__", false]], "__mul__() (queuemom2sf.conditionalbatch method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.ConditionalBatch.__mul__", false]], "__mul__() (singlebatchqueue.batch method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.Batch.__mul__", false]], "__mul__() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.__mul__", false]], "__mul__() (valbatchqueuedc.batch method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.Batch.__mul__", false]], "abstractbatchqueue (class in sup3r.preprocessing.batch_queues.abstract)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue", false]], "abstractbatchqueue.batch (class in sup3r.preprocessing.batch_queues.abstract)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.Batch", false]], "abstractbiascorrection (class in sup3r.bias.abstract)": [[5, "sup3r.bias.abstract.AbstractBiasCorrection", false]], "abstractinterface (class in sup3r.models.abstract)": [[41, "sup3r.models.abstract.AbstractInterface", false]], "abstractsinglemodel (class in sup3r.models.abstract)": [[42, "sup3r.models.abstract.AbstractSingleModel", false]], "add_coord_meta() (cacher class method)": [[144, "sup3r.preprocessing.cachers.base.Cacher.add_coord_meta", false]], "add_dataset() (rexoutputs class method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.add_dataset", false]], "add_dims_to_data_vars() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.add_dims_to_data_vars", false]], "add_pressure() (eradownloader method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.add_pressure", false]], "add_status_cmd() (basecli class method)": [[284, "sup3r.utilities.cli.BaseCLI.add_status_cmd", false]], "adders (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.adders", false]], "all_names() (modulename class method)": [[282, "sup3r.utilities.ModuleName.all_names", false]], "all_vars_exist() (eradownloader class method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.all_vars_exist", false]], "as_array() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.as_array", false]], "assign() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.assign", false]], "attrs (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.attrs", false]], "base_loader (datahandlerh5solarcc attribute)": [[155, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.BASE_LOADER", false]], "base_loader (datahandlerh5windcc attribute)": [[156, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.BASE_LOADER", false]], "base_loader (loaderh5 attribute)": [[199, "sup3r.preprocessing.loaders.h5.LoaderH5.BASE_LOADER", false]], "base_loader() (baseloader method)": [[197, "sup3r.preprocessing.loaders.base.BaseLoader.BASE_LOADER", false]], "base_loader() (loadernc method)": [[201, "sup3r.preprocessing.loaders.nc.LoaderNC.BASE_LOADER", false]], "basecli (class in sup3r.utilities.cli)": [[284, "sup3r.utilities.cli.BaseCLI", false]], "basecollector (class in sup3r.postprocessing.collectors.base)": [[82, "sup3r.postprocessing.collectors.base.BaseCollector", false]], "basederiver (class in sup3r.preprocessing.derivers.base)": [[166, "sup3r.preprocessing.derivers.base.BaseDeriver", false]], "baseexorasterizer (class in sup3r.preprocessing.rasterizers.exo)": [[213, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer", false]], "baseloader (class in sup3r.preprocessing.loaders.base)": [[197, "sup3r.preprocessing.loaders.base.BaseLoader", false]], "baserasterizer (class in sup3r.preprocessing.rasterizers.base)": [[209, "sup3r.preprocessing.rasterizers.base.BaseRasterizer", false]], "batchhandler (class in sup3r.preprocessing.batch_handlers.factory)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler", false]], "batchhandler.batch (class in sup3r.preprocessing.batch_handlers.factory)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.Batch", false]], "batchhandlercc (class in sup3r.preprocessing.batch_handlers.factory)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC", false]], "batchhandlercc.batch (class in sup3r.preprocessing.batch_handlers.factory)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.Batch", false]], "batchhandlerdc (class in sup3r.preprocessing.batch_handlers.dc)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC", false]], "batchhandlerdc.batch (class in sup3r.preprocessing.batch_handlers.dc)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.Batch", false]], "batchhandlerfactory() (in module sup3r.preprocessing.batch_handlers.factory)": [[112, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerFactory", false]], "batchhandlermom1 (class in sup3r.preprocessing.batch_handlers.factory)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1", false]], "batchhandlermom1.batch (class in sup3r.preprocessing.batch_handlers.factory)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.Batch", false]], "batchhandlermom1.conditionalbatch (class in sup3r.preprocessing.batch_handlers.factory)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.ConditionalBatch", false]], "batchhandlermom1sf (class in sup3r.preprocessing.batch_handlers.factory)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF", false]], "batchhandlermom1sf.batch (class in sup3r.preprocessing.batch_handlers.factory)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.Batch", false]], "batchhandlermom1sf.conditionalbatch (class in sup3r.preprocessing.batch_handlers.factory)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.ConditionalBatch", false]], "batchhandlermom2 (class in sup3r.preprocessing.batch_handlers.factory)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2", false]], "batchhandlermom2.batch (class in sup3r.preprocessing.batch_handlers.factory)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.Batch", false]], "batchhandlermom2.conditionalbatch (class in sup3r.preprocessing.batch_handlers.factory)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.ConditionalBatch", false]], "batchhandlermom2sep (class in sup3r.preprocessing.batch_handlers.factory)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep", false]], "batchhandlermom2sep.batch (class in sup3r.preprocessing.batch_handlers.factory)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.Batch", false]], "batchhandlermom2sep.conditionalbatch (class in sup3r.preprocessing.batch_handlers.factory)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.ConditionalBatch", false]], "batchhandlermom2sepsf (class in sup3r.preprocessing.batch_handlers.factory)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF", false]], "batchhandlermom2sepsf.batch (class in sup3r.preprocessing.batch_handlers.factory)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.Batch", false]], "batchhandlermom2sepsf.conditionalbatch (class in sup3r.preprocessing.batch_handlers.factory)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.ConditionalBatch", false]], "batchhandlermom2sf (in module sup3r.preprocessing.batch_handlers.factory)": [[116, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SF", false]], "batchhandlertestercc (class in sup3r.utilities.pytest.helpers)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC", false]], "batchhandlertestercc.batch (class in sup3r.utilities.pytest.helpers)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.Batch", false]], "batchhandlertesterdc (class in sup3r.utilities.pytest.helpers)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC", false]], "batchhandlertesterdc.batch (class in sup3r.utilities.pytest.helpers)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.Batch", false]], "batchhandlertesterfactory() (in module sup3r.utilities.pytest.helpers)": [[311, "sup3r.utilities.pytest.helpers.BatchHandlerTesterFactory", false]], "batchqueuedc (class in sup3r.preprocessing.batch_queues.dc)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC", false]], "batchqueuedc.batch (class in sup3r.preprocessing.batch_queues.dc)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.Batch", false]], "bias_correct_feature() (in module sup3r.bias.utilities)": [[34, "sup3r.bias.utilities.bias_correct_feature", false]], "bias_correct_features() (in module sup3r.bias.utilities)": [[35, "sup3r.bias.utilities.bias_correct_features", false]], "bias_correct_input_handler() (sup3rqa method)": [[264, "sup3r.qa.qa.Sup3rQa.bias_correct_input_handler", false]], "biascorrectupdate (class in sup3r.bias.bias_calc_vortex)": [[18, "sup3r.bias.bias_calc_vortex.BiasCorrectUpdate", false]], "cache_data() (cacher method)": [[144, "sup3r.preprocessing.cachers.base.Cacher.cache_data", false]], "cache_file (baseexorasterizer property)": [[213, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.cache_file", false]], "cache_file (exorasterizer property)": [[214, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.cache_file", false]], "cache_file (exorasterizerh5 property)": [[215, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5.cache_file", false]], "cache_file (exorasterizernc property)": [[216, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC.cache_file", false]], "cache_file (szarasterizer property)": [[217, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.cache_file", false]], "cache_files (exodatahandler property)": [[159, "sup3r.preprocessing.data_handlers.exo.ExoDataHandler.cache_files", false]], "cacher (class in sup3r.preprocessing.cachers.base)": [[144, "sup3r.preprocessing.cachers.base.Cacher", false]], "calc_k_factor() (presrat class method)": [[30, "sup3r.bias.presrat.PresRat.calc_k_factor", false]], "calc_loss() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.calc_loss", false]], "calc_loss() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.calc_loss", false]], "calc_loss() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.calc_loss", false]], "calc_loss() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.calc_loss", false]], "calc_loss_cond_mom() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.calc_loss_cond_mom", false]], "calc_loss_disc() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.calc_loss_disc", false]], "calc_loss_disc() (sup3rgan static method)": [[45, "sup3r.models.base.Sup3rGan.calc_loss_disc", false]], "calc_loss_disc() (sup3rgandc static method)": [[49, "sup3r.models.dc.Sup3rGanDC.calc_loss_disc", false]], "calc_loss_gen_advers() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.calc_loss_gen_advers", false]], "calc_loss_gen_advers() (sup3rgan static method)": [[45, "sup3r.models.base.Sup3rGan.calc_loss_gen_advers", false]], "calc_loss_gen_advers() (sup3rgandc static method)": [[49, "sup3r.models.dc.Sup3rGanDC.calc_loss_gen_advers", false]], "calc_loss_gen_content() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.calc_loss_gen_content", false]], "calc_loss_gen_content() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.calc_loss_gen_content", false]], "calc_loss_gen_content() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.calc_loss_gen_content", false]], "calc_tau_fut() (presrat class method)": [[30, "sup3r.bias.presrat.PresRat.calc_tau_fut", false]], "calc_val_loss() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.calc_val_loss", false]], "calc_val_loss() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.calc_val_loss", false]], "calc_val_loss() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.calc_val_loss", false]], "calc_val_loss() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.calc_val_loss", false]], "calc_val_loss_gen() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.calc_val_loss_gen", false]], "calc_val_loss_gen_content() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.calc_val_loss_gen_content", false]], "call() (coarsemseloss method)": [[291, "sup3r.utilities.loss_metrics.CoarseMseLoss.call", false]], "call() (exploss method)": [[292, "sup3r.utilities.loss_metrics.ExpLoss.call", false]], "call() (lowresloss method)": [[293, "sup3r.utilities.loss_metrics.LowResLoss.call", false]], "call() (materialderivativeloss method)": [[294, "sup3r.utilities.loss_metrics.MaterialDerivativeLoss.call", false]], "call() (mmdloss method)": [[295, "sup3r.utilities.loss_metrics.MmdLoss.call", false]], "call() (mmdmseloss method)": [[296, "sup3r.utilities.loss_metrics.MmdMseLoss.call", false]], "call() (mseexploss method)": [[297, "sup3r.utilities.loss_metrics.MseExpLoss.call", false]], "call() (spatialextremesloss method)": [[298, "sup3r.utilities.loss_metrics.SpatialExtremesLoss.call", false]], "call() (spatialextremesonlyloss method)": [[299, "sup3r.utilities.loss_metrics.SpatialExtremesOnlyLoss.call", false]], "call() (spatialfftonlyloss method)": [[300, "sup3r.utilities.loss_metrics.SpatialFftOnlyLoss.call", false]], "call() (spatiotemporalextremesloss method)": [[301, "sup3r.utilities.loss_metrics.SpatiotemporalExtremesLoss.call", false]], "call() (spatiotemporalfftonlyloss method)": [[302, "sup3r.utilities.loss_metrics.SpatiotemporalFftOnlyLoss.call", false]], "call() (stextremesfftloss method)": [[303, "sup3r.utilities.loss_metrics.StExtremesFftLoss.call", false]], "call() (temporalextremesloss method)": [[304, "sup3r.utilities.loss_metrics.TemporalExtremesLoss.call", false]], "call() (temporalextremesonlyloss method)": [[305, "sup3r.utilities.loss_metrics.TemporalExtremesOnlyLoss.call", false]], "capitalize() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.capitalize", false]], "capitalize() (modulename method)": [[282, "sup3r.utilities.ModuleName.capitalize", false]], "casefold() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.casefold", false]], "casefold() (modulename method)": [[282, "sup3r.utilities.ModuleName.casefold", false]], "center() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.center", false]], "center() (modulename method)": [[282, "sup3r.utilities.ModuleName.center", false]], "change_qos() (slurmmanager method)": [[285, "sup3r.utilities.cli.SlurmManager.change_qos", false]], "check_batch_handler_attrs() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.check_batch_handler_attrs", false]], "check_batch_handler_attrs() (sup3rgan static method)": [[45, "sup3r.models.base.Sup3rGan.check_batch_handler_attrs", false]], "check_batch_handler_attrs() (sup3rgandc static method)": [[49, "sup3r.models.dc.Sup3rGanDC.check_batch_handler_attrs", false]], "check_boundary_slice() (forwardpassslicer method)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.check_boundary_slice", false]], "check_enhancement_factors() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.check_enhancement_factors", false]], "check_enhancement_factors() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.check_enhancement_factors", false]], "check_enhancement_factors() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.check_enhancement_factors", false]], "check_enhancement_factors() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.check_enhancement_factors", false]], "check_enhancement_factors() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.check_enhancement_factors", false]], "check_enhancement_factors() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.check_enhancement_factors", false]], "check_enhancement_factors() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.check_enhancement_factors", false]], "check_enhancement_factors() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.check_enhancement_factors", false]], "check_enhancement_factors() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.check_enhancement_factors", false]], "check_enhancement_factors() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.check_enhancement_factors", false]], "check_enhancement_factors() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.check_enhancement_factors", false]], "check_enhancement_factors() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.check_enhancement_factors", false]], "check_enhancement_factors() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.check_enhancement_factors", false]], "check_enhancement_factors() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.check_enhancement_factors", false]], "check_features() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.check_features", false]], "check_features() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.check_features", false]], "check_features() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.check_features", false]], "check_features() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.check_features", false]], "check_features() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.check_features", false]], "check_features() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.check_features", false]], "check_features() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.check_features", false]], "check_features() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.check_features", false]], "check_features() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.check_features", false]], "check_features() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.check_features", false]], "check_features() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.check_features", false]], "check_features() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.check_features", false]], "check_features() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.check_features", false]], "check_features() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.check_features", false]], "check_features() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.check_features", false]], "check_features() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.check_features", false]], "check_features() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.check_features", false]], "check_features() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.check_features", false]], "check_features() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.check_features", false]], "check_features() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.check_features", false]], "check_features() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.check_features", false]], "check_features() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.check_features", false]], "check_features() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.check_features", false]], "check_for_consistent_shapes() (dualsampler method)": [[228, "sup3r.preprocessing.samplers.dual.DualSampler.check_for_consistent_shapes", false]], "check_for_consistent_shapes() (dualsamplercc method)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.check_for_consistent_shapes", false]], "check_module_name() (basecli class method)": [[284, "sup3r.utilities.cli.BaseCLI.check_module_name", false]], "check_registry() (basederiver method)": [[166, "sup3r.preprocessing.derivers.base.BaseDeriver.check_registry", false]], "check_registry() (dailydatahandler method)": [[153, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.check_registry", false]], "check_registry() (datahandler method)": [[154, "sup3r.preprocessing.data_handlers.base.DataHandler.check_registry", false]], "check_registry() (datahandlerh5solarcc method)": [[155, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.check_registry", false]], "check_registry() (datahandlerh5windcc method)": [[156, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.check_registry", false]], "check_registry() (datahandlerncforcc method)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.check_registry", false]], "check_registry() (datahandlerncforccwithpowerlaw method)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.check_registry", false]], "check_registry() (deriver method)": [[167, "sup3r.preprocessing.derivers.base.Deriver.check_registry", false]], "check_regridded_lr_data() (dualrasterizer method)": [[211, "sup3r.preprocessing.rasterizers.dual.DualRasterizer.check_regridded_lr_data", false]], "check_shared_attr() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.check_shared_attr", false]], "check_shared_attr() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.check_shared_attr", false]], "check_shared_attr() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.check_shared_attr", false]], "check_shared_attr() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.check_shared_attr", false]], "check_shared_attr() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.check_shared_attr", false]], "check_shared_attr() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.check_shared_attr", false]], "check_shared_attr() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.check_shared_attr", false]], "check_shared_attr() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.check_shared_attr", false]], "check_shared_attr() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.check_shared_attr", false]], "check_shared_attr() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.check_shared_attr", false]], "check_shared_attr() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.check_shared_attr", false]], "check_shared_attr() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.check_shared_attr", false]], "check_shared_attr() (collection method)": [[148, "sup3r.preprocessing.collections.base.Collection.check_shared_attr", false]], "check_shared_attr() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.check_shared_attr", false]], "check_shared_attr() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.check_shared_attr", false]], "check_shared_attr() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.check_shared_attr", false]], "check_shared_attr() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.check_shared_attr", false]], "check_shared_attr() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.check_shared_attr", false]], "check_shared_attr() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.check_shared_attr", false]], "check_shared_attr() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.check_shared_attr", false]], "check_shared_attr() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.check_shared_attr", false]], "check_shared_attr() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.check_shared_attr", false]], "check_shared_attr() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.check_shared_attr", false]], "check_shared_attr() (statscollection method)": [[150, "sup3r.preprocessing.collections.stats.StatsCollection.check_shared_attr", false]], "check_shared_attr() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.check_shared_attr", false]], "check_signatures() (in module sup3r.preprocessing.utilities)": [[238, "sup3r.preprocessing.utilities.check_signatures", false]], "check_status() (slurmmanager method)": [[285, "sup3r.utilities.cli.SlurmManager.check_status", false]], "check_status_using_job_id() (slurmmanager method)": [[285, "sup3r.utilities.cli.SlurmManager.check_status_using_job_id", false]], "check_target_and_shape() (baserasterizer method)": [[209, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.check_target_and_shape", false]], "check_target_and_shape() (rasterizer method)": [[219, "sup3r.preprocessing.rasterizers.extended.Rasterizer.check_target_and_shape", false]], "chunk_finished() (forwardpassstrategy method)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.chunk_finished", false]], "chunk_lookup (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.chunk_lookup", false]], "chunk_masked() (forwardpassstrategy method)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.chunk_masked", false]], "chunks (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.chunks", false]], "clear() (exodata method)": [[158, "sup3r.preprocessing.data_handlers.exo.ExoData.clear", false]], "clear() (singleexodatastep method)": [[160, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.clear", false]], "clearsky_ratio (solar property)": [[277, "sup3r.solar.solar.Solar.clearsky_ratio", false]], "clearskyratio (class in sup3r.preprocessing.derivers.methods)": [[169, "sup3r.preprocessing.derivers.methods.ClearSkyRatio", false]], "clearskyratiocc (class in sup3r.preprocessing.derivers.methods)": [[170, "sup3r.preprocessing.derivers.methods.ClearSkyRatioCC", false]], "close() (rexoutputs method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.close", false]], "close() (solar method)": [[277, "sup3r.solar.solar.Solar.close", false]], "close() (sup3rqa method)": [[264, "sup3r.qa.qa.Sup3rQa.close", false]], "cloud_mask (solar property)": [[277, "sup3r.solar.solar.Solar.cloud_mask", false]], "cloudmask (class in sup3r.preprocessing.derivers.methods)": [[171, "sup3r.preprocessing.derivers.methods.CloudMask", false]], "coarsemseloss (class in sup3r.utilities.loss_metrics)": [[291, "sup3r.utilities.loss_metrics.CoarseMseLoss", false]], "coarsen() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.coarsen", false]], "coarsen_data() (sup3rqa method)": [[264, "sup3r.qa.qa.Sup3rQa.coarsen_data", false]], "collect() (basecollector class method)": [[82, "sup3r.postprocessing.collectors.base.BaseCollector.collect", false]], "collect() (collectorh5 class method)": [[84, "sup3r.postprocessing.collectors.h5.CollectorH5.collect", false]], "collect() (collectornc class method)": [[86, "sup3r.postprocessing.collectors.nc.CollectorNC.collect", false]], "collect_feature() (collectorh5 method)": [[84, "sup3r.postprocessing.collectors.h5.CollectorH5.collect_feature", false]], "collection (class in sup3r.preprocessing.collections.base)": [[148, "sup3r.preprocessing.collections.base.Collection", false]], "collectorh5 (class in sup3r.postprocessing.collectors.h5)": [[84, "sup3r.postprocessing.collectors.h5.CollectorH5", false]], "collectornc (class in sup3r.postprocessing.collectors.nc)": [[86, "sup3r.postprocessing.collectors.nc.CollectorNC", false]], "compare_dists() (dataretrievalbase static method)": [[7, "sup3r.bias.base.DataRetrievalBase.compare_dists", false]], "compare_dists() (linearcorrection static method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.compare_dists", false]], "compare_dists() (monthlylinearcorrection static method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.compare_dists", false]], "compare_dists() (monthlyscalarcorrection static method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.compare_dists", false]], "compare_dists() (presrat static method)": [[30, "sup3r.bias.presrat.PresRat.compare_dists", false]], "compare_dists() (quantiledeltamappingcorrection static method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.compare_dists", false]], "compare_dists() (scalarcorrection static method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.compare_dists", false]], "compare_dists() (skillassessment static method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.compare_dists", false]], "composite_info() (in module sup3r.preprocessing.utilities)": [[239, "sup3r.preprocessing.utilities.composite_info", false]], "composite_sig() (in module sup3r.preprocessing.utilities)": [[240, "sup3r.preprocessing.utilities.composite_sig", false]], "compute() (clearskyratio class method)": [[169, "sup3r.preprocessing.derivers.methods.ClearSkyRatio.compute", false]], "compute() (clearskyratiocc class method)": [[170, "sup3r.preprocessing.derivers.methods.ClearSkyRatioCC.compute", false]], "compute() (cloudmask class method)": [[171, "sup3r.preprocessing.derivers.methods.CloudMask.compute", false]], "compute() (derivedfeature class method)": [[172, "sup3r.preprocessing.derivers.methods.DerivedFeature.compute", false]], "compute() (pressurewrf class method)": [[173, "sup3r.preprocessing.derivers.methods.PressureWRF.compute", false]], "compute() (sup3rdataset method)": [[104, "sup3r.preprocessing.base.Sup3rDataset.compute", false]], "compute() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.compute", false]], "compute() (surfacerh class method)": [[174, "sup3r.preprocessing.derivers.methods.SurfaceRH.compute", false]], "compute() (sza class method)": [[175, "sup3r.preprocessing.derivers.methods.Sza.compute", false]], "compute() (tas class method)": [[176, "sup3r.preprocessing.derivers.methods.Tas.compute", false]], "compute() (tasmax class method)": [[177, "sup3r.preprocessing.derivers.methods.TasMax.compute", false]], "compute() (tasmin class method)": [[178, "sup3r.preprocessing.derivers.methods.TasMin.compute", false]], "compute() (tempncforcc class method)": [[179, "sup3r.preprocessing.derivers.methods.TempNCforCC.compute", false]], "compute() (usolar class method)": [[180, "sup3r.preprocessing.derivers.methods.USolar.compute", false]], "compute() (uwind class method)": [[181, "sup3r.preprocessing.derivers.methods.UWind.compute", false]], "compute() (uwindpowerlaw class method)": [[182, "sup3r.preprocessing.derivers.methods.UWindPowerLaw.compute", false]], "compute() (vsolar class method)": [[183, "sup3r.preprocessing.derivers.methods.VSolar.compute", false]], "compute() (vwind class method)": [[184, "sup3r.preprocessing.derivers.methods.VWind.compute", false]], "compute() (vwindpowerlaw class method)": [[185, "sup3r.preprocessing.derivers.methods.VWindPowerLaw.compute", false]], "compute() (winddirection class method)": [[186, "sup3r.preprocessing.derivers.methods.Winddirection.compute", false]], "compute() (windspeed class method)": [[187, "sup3r.preprocessing.derivers.methods.Windspeed.compute", false]], "compute_if_dask() (in module sup3r.preprocessing.utilities)": [[241, "sup3r.preprocessing.utilities.compute_if_dask", false]], "conditionalbatchqueue (class in sup3r.preprocessing.batch_queues.conditional)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue", false]], "conditionalbatchqueue.batch (class in sup3r.preprocessing.batch_queues.conditional)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.Batch", false]], "conditionalbatchqueue.conditionalbatch (class in sup3r.preprocessing.batch_queues.conditional)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.ConditionalBatch", false]], "container (class in sup3r.preprocessing.base)": [[103, "sup3r.preprocessing.base.Container", false]], "container_weights (abstractbatchqueue property)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.container_weights", false]], "container_weights (batchhandler property)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.container_weights", false]], "container_weights (batchhandlercc property)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.container_weights", false]], "container_weights (batchhandlerdc property)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.container_weights", false]], "container_weights (batchhandlermom1 property)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.container_weights", false]], "container_weights (batchhandlermom1sf property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.container_weights", false]], "container_weights (batchhandlermom2 property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.container_weights", false]], "container_weights (batchhandlermom2sep property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.container_weights", false]], "container_weights (batchhandlermom2sepsf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.container_weights", false]], "container_weights (batchhandlertestercc property)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.container_weights", false]], "container_weights (batchhandlertesterdc property)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.container_weights", false]], "container_weights (batchqueuedc property)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.container_weights", false]], "container_weights (collection property)": [[148, "sup3r.preprocessing.collections.base.Collection.container_weights", false]], "container_weights (conditionalbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.container_weights", false]], "container_weights (dualbatchhandler property)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.container_weights", false]], "container_weights (dualbatchqueue property)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.container_weights", false]], "container_weights (queuemom1 property)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.container_weights", false]], "container_weights (queuemom1sf property)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.container_weights", false]], "container_weights (queuemom2 property)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.container_weights", false]], "container_weights (queuemom2sep property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.container_weights", false]], "container_weights (queuemom2sepsf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.container_weights", false]], "container_weights (queuemom2sf property)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.container_weights", false]], "container_weights (singlebatchqueue property)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.container_weights", false]], "container_weights (statscollection property)": [[150, "sup3r.preprocessing.collections.stats.StatsCollection.container_weights", false]], "container_weights (valbatchqueuedc property)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.container_weights", false]], "contains_ellipsis() (in module sup3r.preprocessing.utilities)": [[242, "sup3r.preprocessing.utilities.contains_ellipsis", false]], "continuous_dist() (in module sup3r.qa.utilities)": [[267, "sup3r.qa.utilities.continuous_dist", false]], "convert_all_tifs() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.convert_all_tifs", false]], "convert_month_height_tif() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.convert_month_height_tif", false]], "convert_month_tif() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.convert_month_tif", false]], "convert_z() (eradownloader method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.convert_z", false]], "coordinates (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.coordinates", false]], "coords (baseexorasterizer property)": [[213, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.coords", false]], "coords (exorasterizer property)": [[214, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.coords", false]], "coords (exorasterizerh5 property)": [[215, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5.coords", false]], "coords (exorasterizernc property)": [[216, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC.coords", false]], "coords (szarasterizer property)": [[217, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.coords", false]], "coords_2d() (dimension class method)": [[206, "sup3r.preprocessing.names.Dimension.coords_2d", false]], "coords_3d() (dimension class method)": [[206, "sup3r.preprocessing.names.Dimension.coords_3d", false]], "coords_4d() (dimension class method)": [[206, "sup3r.preprocessing.names.Dimension.coords_4d", false]], "coords_4d_pres() (dimension class method)": [[206, "sup3r.preprocessing.names.Dimension.coords_4d_pres", false]], "copy() (exodata method)": [[158, "sup3r.preprocessing.data_handlers.exo.ExoData.copy", false]], "copy() (singleexodatastep method)": [[160, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.copy", false]], "count() (abstractbatchqueue.batch method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.Batch.count", false]], "count() (batchhandler.batch method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.Batch.count", false]], "count() (batchhandlercc.batch method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.Batch.count", false]], "count() (batchhandlerdc.batch method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.Batch.count", false]], "count() (batchhandlermom1.batch method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.Batch.count", false]], "count() (batchhandlermom1.conditionalbatch method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.ConditionalBatch.count", false]], "count() (batchhandlermom1sf.batch method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.Batch.count", false]], "count() (batchhandlermom1sf.conditionalbatch method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.ConditionalBatch.count", false]], "count() (batchhandlermom2.batch method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.Batch.count", false]], "count() (batchhandlermom2.conditionalbatch method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.ConditionalBatch.count", false]], "count() (batchhandlermom2sep.batch method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.Batch.count", false]], "count() (batchhandlermom2sep.conditionalbatch method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.ConditionalBatch.count", false]], "count() (batchhandlermom2sepsf.batch method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.Batch.count", false]], "count() (batchhandlermom2sepsf.conditionalbatch method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.ConditionalBatch.count", false]], "count() (batchhandlertestercc.batch method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.Batch.count", false]], "count() (batchhandlertesterdc.batch method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.Batch.count", false]], "count() (batchqueuedc.batch method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.Batch.count", false]], "count() (conditionalbatchqueue.batch method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.Batch.count", false]], "count() (conditionalbatchqueue.conditionalbatch method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.ConditionalBatch.count", false]], "count() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.count", false]], "count() (dualbatchhandler.batch method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.Batch.count", false]], "count() (dualbatchqueue.batch method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.Batch.count", false]], "count() (modulename method)": [[282, "sup3r.utilities.ModuleName.count", false]], "count() (queuemom1.batch method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.Batch.count", false]], "count() (queuemom1.conditionalbatch method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.ConditionalBatch.count", false]], "count() (queuemom1sf.batch method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.Batch.count", false]], "count() (queuemom1sf.conditionalbatch method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.ConditionalBatch.count", false]], "count() (queuemom2.batch method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.Batch.count", false]], "count() (queuemom2.conditionalbatch method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.ConditionalBatch.count", false]], "count() (queuemom2sep.batch method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.Batch.count", false]], "count() (queuemom2sep.conditionalbatch method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.ConditionalBatch.count", false]], "count() (queuemom2sepsf.batch method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.Batch.count", false]], "count() (queuemom2sepsf.conditionalbatch method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.ConditionalBatch.count", false]], "count() (queuemom2sf.batch method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.Batch.count", false]], "count() (queuemom2sf.conditionalbatch method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.ConditionalBatch.count", false]], "count() (singlebatchqueue.batch method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.Batch.count", false]], "count() (valbatchqueuedc.batch method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.Batch.count", false]], "daily_time_sampler() (in module sup3r.preprocessing.samplers.utilities)": [[230, "sup3r.preprocessing.samplers.utilities.daily_time_sampler", false]], "dailydatahandler (class in sup3r.preprocessing.data_handlers.base)": [[153, "sup3r.preprocessing.data_handlers.base.DailyDataHandler", false]], "data (abstractbatchqueue property)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.data", false]], "data (basederiver property)": [[166, "sup3r.preprocessing.derivers.base.BaseDeriver.data", false]], "data (baseexorasterizer property)": [[213, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.data", false]], "data (baseloader property)": [[197, "sup3r.preprocessing.loaders.base.BaseLoader.data", false]], "data (baserasterizer property)": [[209, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.data", false]], "data (batchhandler property)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.data", false]], "data (batchhandlercc property)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.data", false]], "data (batchhandlerdc property)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.data", false]], "data (batchhandlermom1 property)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.data", false]], "data (batchhandlermom1sf property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.data", false]], "data (batchhandlermom2 property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.data", false]], "data (batchhandlermom2sep property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.data", false]], "data (batchhandlermom2sepsf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.data", false]], "data (batchhandlertestercc property)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.data", false]], "data (batchhandlertesterdc property)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.data", false]], "data (batchqueuedc property)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.data", false]], "data (cacher property)": [[144, "sup3r.preprocessing.cachers.base.Cacher.data", false]], "data (collection property)": [[148, "sup3r.preprocessing.collections.base.Collection.data", false]], "data (conditionalbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.data", false]], "data (container property)": [[103, "sup3r.preprocessing.base.Container.data", false]], "data (dailydatahandler property)": [[153, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.data", false]], "data (datahandler property)": [[154, "sup3r.preprocessing.data_handlers.base.DataHandler.data", false]], "data (datahandlerh5solarcc property)": [[155, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.data", false]], "data (datahandlerh5windcc property)": [[156, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.data", false]], "data (datahandlerncforcc property)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.data", false]], "data (datahandlerncforccwithpowerlaw property)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.data", false]], "data (deriver property)": [[167, "sup3r.preprocessing.derivers.base.Deriver.data", false]], "data (dualbatchhandler property)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.data", false]], "data (dualbatchqueue property)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.data", false]], "data (dualrasterizer property)": [[211, "sup3r.preprocessing.rasterizers.dual.DualRasterizer.data", false]], "data (dualsampler property)": [[228, "sup3r.preprocessing.samplers.dual.DualSampler.data", false]], "data (dualsamplercc property)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.data", false]], "data (dummydata property)": [[313, "sup3r.utilities.pytest.helpers.DummyData.data", false]], "data (dummysampler property)": [[314, "sup3r.utilities.pytest.helpers.DummySampler.data", false]], "data (exorasterizer property)": [[214, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.data", false]], "data (exorasterizerh5 property)": [[215, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5.data", false]], "data (exorasterizernc property)": [[216, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC.data", false]], "data (loaderh5 property)": [[199, "sup3r.preprocessing.loaders.h5.LoaderH5.data", false]], "data (loadernc property)": [[201, "sup3r.preprocessing.loaders.nc.LoaderNC.data", false]], "data (queuemom1 property)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.data", false]], "data (queuemom1sf property)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.data", false]], "data (queuemom2 property)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.data", false]], "data (queuemom2sep property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.data", false]], "data (queuemom2sepsf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.data", false]], "data (queuemom2sf property)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.data", false]], "data (rasterizer property)": [[219, "sup3r.preprocessing.rasterizers.extended.Rasterizer.data", false]], "data (sampler property)": [[222, "sup3r.preprocessing.samplers.base.Sampler.data", false]], "data (samplerdc property)": [[226, "sup3r.preprocessing.samplers.dc.SamplerDC.data", false]], "data (samplertester property)": [[315, "sup3r.utilities.pytest.helpers.SamplerTester.data", false]], "data (singlebatchqueue property)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.data", false]], "data (statscollection property)": [[150, "sup3r.preprocessing.collections.stats.StatsCollection.data", false]], "data (szarasterizer property)": [[217, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.data", false]], "data (valbatchqueuedc property)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.data", false]], "data_version (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.data_version", false]], "datahandler (class in sup3r.preprocessing.data_handlers.base)": [[154, "sup3r.preprocessing.data_handlers.base.DataHandler", false]], "datahandlerh5solarcc (class in sup3r.preprocessing.data_handlers.base)": [[155, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC", false]], "datahandlerh5windcc (class in sup3r.preprocessing.data_handlers.base)": [[156, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC", false]], "datahandlerncforcc (class in sup3r.preprocessing.data_handlers.nc_cc)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC", false]], "datahandlerncforccwithpowerlaw (class in sup3r.preprocessing.data_handlers.nc_cc)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw", false]], "dataretrievalbase (class in sup3r.bias.base)": [[7, "sup3r.bias.base.DataRetrievalBase", false]], "datasets (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.datasets", false]], "daylight_hours (solarcc attribute)": [[57, "sup3r.models.solar_cc.SolarCC.DAYLIGHT_HOURS", false]], "days (eradownloader property)": [[287, "sup3r.utilities.era_downloader.EraDownloader.days", false]], "derive() (basederiver method)": [[166, "sup3r.preprocessing.derivers.base.BaseDeriver.derive", false]], "derive() (dailydatahandler method)": [[153, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.derive", false]], "derive() (datahandler method)": [[154, "sup3r.preprocessing.data_handlers.base.DataHandler.derive", false]], "derive() (datahandlerh5solarcc method)": [[155, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.derive", false]], "derive() (datahandlerh5windcc method)": [[156, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.derive", false]], "derive() (datahandlerncforcc method)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.derive", false]], "derive() (datahandlerncforccwithpowerlaw method)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.derive", false]], "derive() (deriver method)": [[167, "sup3r.preprocessing.derivers.base.Deriver.derive", false]], "derivedfeature (class in sup3r.preprocessing.derivers.methods)": [[172, "sup3r.preprocessing.derivers.methods.DerivedFeature", false]], "deriver (class in sup3r.preprocessing.derivers.base)": [[167, "sup3r.preprocessing.derivers.base.Deriver", false]], "df_str_decode() (rexoutputs static method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.df_str_decode", false]], "dhi (solar property)": [[277, "sup3r.solar.solar.Solar.dhi", false]], "dict_to_tensorboard() (abstractsinglemodel method)": [[42, "sup3r.models.abstract.AbstractSingleModel.dict_to_tensorboard", false]], "dict_to_tensorboard() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.dict_to_tensorboard", false]], "dict_to_tensorboard() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.dict_to_tensorboard", false]], "dict_to_tensorboard() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.dict_to_tensorboard", false]], "dict_to_tensorboard() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.dict_to_tensorboard", false]], "dict_to_tensorboard() (tensorboardmixin method)": [[43, "sup3r.models.abstract.TensorboardMixIn.dict_to_tensorboard", false]], "dimension (class in sup3r.preprocessing.names)": [[206, "sup3r.preprocessing.names.Dimension", false]], "dims_2d() (dimension class method)": [[206, "sup3r.preprocessing.names.Dimension.dims_2d", false]], "dims_3d() (dimension class method)": [[206, "sup3r.preprocessing.names.Dimension.dims_3d", false]], "dims_3d_bc() (dimension class method)": [[206, "sup3r.preprocessing.names.Dimension.dims_3d_bc", false]], "dims_4d() (dimension class method)": [[206, "sup3r.preprocessing.names.Dimension.dims_4d", false]], "dims_4d_bc() (dimension class method)": [[206, "sup3r.preprocessing.names.Dimension.dims_4d_bc", false]], "dims_4d_pres() (dimension class method)": [[206, "sup3r.preprocessing.names.Dimension.dims_4d_pres", false]], "dims_array_tuple() (in module sup3r.preprocessing.utilities)": [[243, "sup3r.preprocessing.utilities.dims_array_tuple", false]], "direct_dist() (in module sup3r.qa.utilities)": [[268, "sup3r.qa.utilities.direct_dist", false]], "discriminate() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.discriminate", false]], "discriminate() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.discriminate", false]], "discriminate() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.discriminate", false]], "discriminator (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.discriminator", false]], "discriminator (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.discriminator", false]], "discriminator (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.discriminator", false]], "discriminator_weights (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.discriminator_weights", false]], "discriminator_weights (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.discriminator_weights", false]], "discriminator_weights (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.discriminator_weights", false]], "dist (solar property)": [[277, "sup3r.solar.solar.Solar.dist", false]], "distance_upper_bound (dataretrievalbase property)": [[7, "sup3r.bias.base.DataRetrievalBase.distance_upper_bound", false]], "distance_upper_bound (linearcorrection property)": [[9, "sup3r.bias.bias_calc.LinearCorrection.distance_upper_bound", false]], "distance_upper_bound (monthlylinearcorrection property)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.distance_upper_bound", false]], "distance_upper_bound (monthlyscalarcorrection property)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.distance_upper_bound", false]], "distance_upper_bound (presrat property)": [[30, "sup3r.bias.presrat.PresRat.distance_upper_bound", false]], "distance_upper_bound (quantiledeltamappingcorrection property)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.distance_upper_bound", false]], "distance_upper_bound (scalarcorrection property)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.distance_upper_bound", false]], "distance_upper_bound (skillassessment property)": [[13, "sup3r.bias.bias_calc.SkillAssessment.distance_upper_bound", false]], "dni (solar property)": [[277, "sup3r.solar.solar.Solar.dni", false]], "do_level_interpolation() (basederiver method)": [[166, "sup3r.preprocessing.derivers.base.BaseDeriver.do_level_interpolation", false]], "do_level_interpolation() (dailydatahandler method)": [[153, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.do_level_interpolation", false]], "do_level_interpolation() (datahandler method)": [[154, "sup3r.preprocessing.data_handlers.base.DataHandler.do_level_interpolation", false]], "do_level_interpolation() (datahandlerh5solarcc method)": [[155, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.do_level_interpolation", false]], "do_level_interpolation() (datahandlerh5windcc method)": [[156, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.do_level_interpolation", false]], "do_level_interpolation() (datahandlerncforcc method)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.do_level_interpolation", false]], "do_level_interpolation() (datahandlerncforccwithpowerlaw method)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.do_level_interpolation", false]], "do_level_interpolation() (deriver method)": [[167, "sup3r.preprocessing.derivers.base.Deriver.do_level_interpolation", false]], "download_file() (eradownloader class method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.download_file", false]], "download_process_combine() (eradownloader method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.download_process_combine", false]], "downscale_arr() (surfacespatialmetmodel class method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.downscale_arr", false]], "downscale_pres() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.downscale_pres", false]], "downscale_rh() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.downscale_rh", false]], "downscale_temp() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.downscale_temp", false]], "dsets (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.dsets", false]], "dtype (sup3rdataset property)": [[104, "sup3r.preprocessing.base.Sup3rDataset.dtype", false]], "dtype (sup3rx property)": [[101, "sup3r.preprocessing.accessor.Sup3rX.dtype", false]], "dtypes (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.dtypes", false]], "dualbatchhandler (class in sup3r.preprocessing.batch_handlers.factory)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler", false]], "dualbatchhandler.batch (class in sup3r.preprocessing.batch_handlers.factory)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.Batch", false]], "dualbatchqueue (class in sup3r.preprocessing.batch_queues.dual)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue", false]], "dualbatchqueue.batch (class in sup3r.preprocessing.batch_queues.dual)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.Batch", false]], "dualrasterizer (class in sup3r.preprocessing.rasterizers.dual)": [[211, "sup3r.preprocessing.rasterizers.dual.DualRasterizer", false]], "dualsampler (class in sup3r.preprocessing.samplers.dual)": [[228, "sup3r.preprocessing.samplers.dual.DualSampler", false]], "dualsamplercc (class in sup3r.preprocessing.samplers.cc)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC", false]], "dualsamplertestercc (in module sup3r.utilities.pytest.helpers)": [[312, "sup3r.utilities.pytest.helpers.DualSamplerTesterCC", false]], "dummydata (class in sup3r.utilities.pytest.helpers)": [[313, "sup3r.utilities.pytest.helpers.DummyData", false]], "dummysampler (class in sup3r.utilities.pytest.helpers)": [[314, "sup3r.utilities.pytest.helpers.DummySampler", false]], "early_stop() (abstractsinglemodel static method)": [[42, "sup3r.models.abstract.AbstractSingleModel.early_stop", false]], "early_stop() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.early_stop", false]], "early_stop() (sup3rcondmom static method)": [[47, "sup3r.models.conditional.Sup3rCondMom.early_stop", false]], "early_stop() (sup3rgan static method)": [[45, "sup3r.models.base.Sup3rGan.early_stop", false]], "early_stop() (sup3rgandc static method)": [[49, "sup3r.models.dc.Sup3rGanDC.early_stop", false]], "elapsed (timer property)": [[325, "sup3r.utilities.utilities.Timer.elapsed", false]], "elapsed_str (timer property)": [[325, "sup3r.utilities.utilities.Timer.elapsed_str", false]], "encode() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.encode", false]], "encode() (modulename method)": [[282, "sup3r.utilities.ModuleName.encode", false]], "endswith() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.endswith", false]], "endswith() (modulename method)": [[282, "sup3r.utilities.ModuleName.endswith", false]], "enforce_limits() (outputhandler static method)": [[92, "sup3r.postprocessing.writers.base.OutputHandler.enforce_limits", false]], "enforce_limits() (outputhandlerh5 static method)": [[96, "sup3r.postprocessing.writers.h5.OutputHandlerH5.enforce_limits", false]], "enforce_limits() (outputhandlernc static method)": [[98, "sup3r.postprocessing.writers.nc.OutputHandlerNC.enforce_limits", false]], "enqueue_batch() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.enqueue_batch", false]], "enqueue_batch() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.enqueue_batch", false]], "enqueue_batch() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.enqueue_batch", false]], "enqueue_batch() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.enqueue_batch", false]], "enqueue_batch() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.enqueue_batch", false]], "enqueue_batch() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.enqueue_batch", false]], "enqueue_batch() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.enqueue_batch", false]], "enqueue_batch() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.enqueue_batch", false]], "enqueue_batch() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.enqueue_batch", false]], "enqueue_batch() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.enqueue_batch", false]], "enqueue_batch() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.enqueue_batch", false]], "enqueue_batch() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.enqueue_batch", false]], "enqueue_batch() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.enqueue_batch", false]], "enqueue_batch() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.enqueue_batch", false]], "enqueue_batch() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.enqueue_batch", false]], "enqueue_batch() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.enqueue_batch", false]], "enqueue_batch() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.enqueue_batch", false]], "enqueue_batch() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.enqueue_batch", false]], "enqueue_batch() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.enqueue_batch", false]], "enqueue_batch() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.enqueue_batch", false]], "enqueue_batch() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.enqueue_batch", false]], "enqueue_batch() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.enqueue_batch", false]], "enqueue_batch() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.enqueue_batch", false]], "enqueue_batches() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.enqueue_batches", false]], "enqueue_batches() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.enqueue_batches", false]], "enqueue_batches() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.enqueue_batches", false]], "enqueue_batches() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.enqueue_batches", false]], "enqueue_batches() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.enqueue_batches", false]], "enqueue_batches() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.enqueue_batches", false]], "enqueue_batches() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.enqueue_batches", false]], "enqueue_batches() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.enqueue_batches", false]], "enqueue_batches() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.enqueue_batches", false]], "enqueue_batches() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.enqueue_batches", false]], "enqueue_batches() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.enqueue_batches", false]], "enqueue_batches() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.enqueue_batches", false]], "enqueue_batches() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.enqueue_batches", false]], "enqueue_batches() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.enqueue_batches", false]], "enqueue_batches() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.enqueue_batches", false]], "enqueue_batches() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.enqueue_batches", false]], "enqueue_batches() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.enqueue_batches", false]], "enqueue_batches() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.enqueue_batches", false]], "enqueue_batches() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.enqueue_batches", false]], "enqueue_batches() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.enqueue_batches", false]], "enqueue_batches() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.enqueue_batches", false]], "enqueue_batches() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.enqueue_batches", false]], "enqueue_batches() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.enqueue_batches", false]], "eradownloader (class in sup3r.utilities.era_downloader)": [[287, "sup3r.utilities.era_downloader.EraDownloader", false]], "exodata (class in sup3r.preprocessing.data_handlers.exo)": [[158, "sup3r.preprocessing.data_handlers.exo.ExoData", false]], "exodatahandler (class in sup3r.preprocessing.data_handlers.exo)": [[159, "sup3r.preprocessing.data_handlers.exo.ExoDataHandler", false]], "exorasterizer (class in sup3r.preprocessing.rasterizers.exo)": [[214, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer", false]], "exorasterizerh5 (class in sup3r.preprocessing.rasterizers.exo)": [[215, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5", false]], "exorasterizernc (class in sup3r.preprocessing.rasterizers.exo)": [[216, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC", false]], "expand_paths() (in module sup3r.preprocessing.utilities)": [[244, "sup3r.preprocessing.utilities.expand_paths", false]], "expandtabs() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.expandtabs", false]], "expandtabs() (modulename method)": [[282, "sup3r.utilities.ModuleName.expandtabs", false]], "exploss (class in sup3r.utilities.loss_metrics)": [[292, "sup3r.utilities.loss_metrics.ExpLoss", false]], "export() (sup3rqa method)": [[264, "sup3r.qa.qa.Sup3rQa.export", false]], "extra_padding (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.extra_padding", false]], "feature_inds_other (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.feature_inds_other", false]], "feature_inds_pres (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.feature_inds_pres", false]], "feature_inds_rh (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.feature_inds_rh", false]], "feature_inds_temp (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.feature_inds_temp", false]], "features (abstractbatchqueue property)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.features", false]], "features (batchhandler property)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.features", false]], "features (batchhandlercc property)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.features", false]], "features (batchhandlerdc property)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.features", false]], "features (batchhandlermom1 property)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.features", false]], "features (batchhandlermom1sf property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.features", false]], "features (batchhandlermom2 property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.features", false]], "features (batchhandlermom2sep property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.features", false]], "features (batchhandlermom2sepsf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.features", false]], "features (batchhandlertestercc property)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.features", false]], "features (batchhandlertesterdc property)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.features", false]], "features (batchqueuedc property)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.features", false]], "features (collection property)": [[148, "sup3r.preprocessing.collections.base.Collection.features", false]], "features (conditionalbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.features", false]], "features (dualbatchhandler property)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.features", false]], "features (dualbatchqueue property)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.features", false]], "features (queuemom1 property)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.features", false]], "features (queuemom1sf property)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.features", false]], "features (queuemom2 property)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.features", false]], "features (queuemom2sep property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.features", false]], "features (queuemom2sepsf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.features", false]], "features (queuemom2sf property)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.features", false]], "features (singlebatchqueue property)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.features", false]], "features (statscollection property)": [[150, "sup3r.preprocessing.collections.stats.StatsCollection.features", false]], "features (sup3rdataset property)": [[104, "sup3r.preprocessing.base.Sup3rDataset.features", false]], "features (sup3rqa property)": [[264, "sup3r.qa.qa.Sup3rQa.features", false]], "features (sup3rx property)": [[101, "sup3r.preprocessing.accessor.Sup3rX.features", false]], "features (valbatchqueuedc property)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.features", false]], "file_paths (baseloader property)": [[197, "sup3r.preprocessing.loaders.base.BaseLoader.file_paths", false]], "file_paths (loaderh5 property)": [[199, "sup3r.preprocessing.loaders.h5.LoaderH5.file_paths", false]], "file_paths (loadernc property)": [[201, "sup3r.preprocessing.loaders.nc.LoaderNC.file_paths", false]], "fill_and_smooth() (fillandsmoothmixin method)": [[27, "sup3r.bias.mixins.FillAndSmoothMixin.fill_and_smooth", false]], "fill_and_smooth() (linearcorrection method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.fill_and_smooth", false]], "fill_and_smooth() (monthlylinearcorrection method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.fill_and_smooth", false]], "fill_and_smooth() (monthlyscalarcorrection method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.fill_and_smooth", false]], "fill_and_smooth() (presrat method)": [[30, "sup3r.bias.presrat.PresRat.fill_and_smooth", false]], "fill_and_smooth() (quantiledeltamappingcorrection method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.fill_and_smooth", false]], "fill_and_smooth() (scalarcorrection method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.fill_and_smooth", false]], "fill_and_smooth() (skillassessment method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.fill_and_smooth", false]], "fillandsmoothmixin (class in sup3r.bias.mixins)": [[27, "sup3r.bias.mixins.FillAndSmoothMixin", false]], "find() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.find", false]], "find() (modulename method)": [[282, "sup3r.utilities.ModuleName.find", false]], "finish_epoch() (abstractsinglemodel method)": [[42, "sup3r.models.abstract.AbstractSingleModel.finish_epoch", false]], "finish_epoch() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.finish_epoch", false]], "finish_epoch() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.finish_epoch", false]], "finish_epoch() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.finish_epoch", false]], "finish_epoch() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.finish_epoch", false]], "fix_downscaled_bias() (surfacespatialmetmodel class method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.fix_downscaled_bias", false]], "flat_2d() (dimension class method)": [[206, "sup3r.preprocessing.names.Dimension.flat_2d", false]], "flatten() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.flatten", false]], "flattened (sup3rx property)": [[101, "sup3r.preprocessing.accessor.Sup3rX.flattened", false]], "format() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.format", false]], "format() (modulename method)": [[282, "sup3r.utilities.ModuleName.format", false]], "format_map() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.format_map", false]], "format_map() (modulename method)": [[282, "sup3r.utilities.ModuleName.format_map", false]], "format_walltime() (slurmmanager static method)": [[285, "sup3r.utilities.cli.SlurmManager.format_walltime", false]], "forwardpass (class in sup3r.pipeline.forward_pass)": [[66, "sup3r.pipeline.forward_pass.ForwardPass", false]], "forwardpasschunk (class in sup3r.pipeline.strategy)": [[74, "sup3r.pipeline.strategy.ForwardPassChunk", false]], "forwardpassslicer (class in sup3r.pipeline.slicer)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer", false]], "forwardpassstrategy (class in sup3r.pipeline.strategy)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy", false]], "frequency_spectrum() (in module sup3r.qa.utilities)": [[269, "sup3r.qa.utilities.frequency_spectrum", false]], "from_config() (basecli class method)": [[284, "sup3r.utilities.cli.BaseCLI.from_config", false]], "from_config() (coarsemseloss class method)": [[291, "sup3r.utilities.loss_metrics.CoarseMseLoss.from_config", false]], "from_config() (exploss class method)": [[292, "sup3r.utilities.loss_metrics.ExpLoss.from_config", false]], "from_config() (lowresloss class method)": [[293, "sup3r.utilities.loss_metrics.LowResLoss.from_config", false]], "from_config() (materialderivativeloss class method)": [[294, "sup3r.utilities.loss_metrics.MaterialDerivativeLoss.from_config", false]], "from_config() (mmdloss class method)": [[295, "sup3r.utilities.loss_metrics.MmdLoss.from_config", false]], "from_config() (mmdmseloss class method)": [[296, "sup3r.utilities.loss_metrics.MmdMseLoss.from_config", false]], "from_config() (mseexploss class method)": [[297, "sup3r.utilities.loss_metrics.MseExpLoss.from_config", false]], "from_config() (spatialextremesloss class method)": [[298, "sup3r.utilities.loss_metrics.SpatialExtremesLoss.from_config", false]], "from_config() (spatialextremesonlyloss class method)": [[299, "sup3r.utilities.loss_metrics.SpatialExtremesOnlyLoss.from_config", false]], "from_config() (spatialfftonlyloss class method)": [[300, "sup3r.utilities.loss_metrics.SpatialFftOnlyLoss.from_config", false]], "from_config() (spatiotemporalextremesloss class method)": [[301, "sup3r.utilities.loss_metrics.SpatiotemporalExtremesLoss.from_config", false]], "from_config() (spatiotemporalfftonlyloss class method)": [[302, "sup3r.utilities.loss_metrics.SpatiotemporalFftOnlyLoss.from_config", false]], "from_config() (stextremesfftloss class method)": [[303, "sup3r.utilities.loss_metrics.StExtremesFftLoss.from_config", false]], "from_config() (temporalextremesloss class method)": [[304, "sup3r.utilities.loss_metrics.TemporalExtremesLoss.from_config", false]], "from_config() (temporalextremesonlyloss class method)": [[305, "sup3r.utilities.loss_metrics.TemporalExtremesOnlyLoss.from_config", false]], "from_config_preflight() (basecli class method)": [[284, "sup3r.utilities.cli.BaseCLI.from_config_preflight", false]], "fromkeys() (exodata method)": [[158, "sup3r.preprocessing.data_handlers.exo.ExoData.fromkeys", false]], "fromkeys() (singleexodatastep method)": [[160, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.fromkeys", false]], "full_version_record (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.full_version_record", false]], "fwp_mask (forwardpassstrategy property)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.fwp_mask", false]], "gaussian_kernel() (in module sup3r.utilities.loss_metrics)": [[306, "sup3r.utilities.loss_metrics.gaussian_kernel", false]], "generate() (abstractinterface method)": [[41, "sup3r.models.abstract.AbstractInterface.generate", false]], "generate() (abstractsinglemodel method)": [[42, "sup3r.models.abstract.AbstractSingleModel.generate", false]], "generate() (linearinterp method)": [[51, "sup3r.models.linear.LinearInterp.generate", false]], "generate() (multistepgan method)": [[53, "sup3r.models.multi_step.MultiStepGan.generate", false]], "generate() (multistepsurfacemetgan method)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.generate", false]], "generate() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.generate", false]], "generate() (solarmultistepgan method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.generate", false]], "generate() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.generate", false]], "generate() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.generate", false]], "generate() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.generate", false]], "generate() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.generate", false]], "generate_random_string() (in module sup3r.utilities.utilities)": [[326, "sup3r.utilities.utilities.generate_random_string", false]], "generator (abstractsinglemodel property)": [[42, "sup3r.models.abstract.AbstractSingleModel.generator", false]], "generator (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.generator", false]], "generator (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.generator", false]], "generator (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.generator", false]], "generator (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.generator", false]], "generator_weights (abstractsinglemodel property)": [[42, "sup3r.models.abstract.AbstractSingleModel.generator_weights", false]], "generator_weights (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.generator_weights", false]], "generator_weights (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.generator_weights", false]], "generator_weights (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.generator_weights", false]], "generator_weights (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.generator_weights", false]], "get() (exodata method)": [[158, "sup3r.preprocessing.data_handlers.exo.ExoData.get", false]], "get() (singleexodatastep method)": [[160, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.get", false]], "get_all_data() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.get_all_data", false]], "get_all_step_data() (exodatahandler method)": [[159, "sup3r.preprocessing.data_handlers.exo.ExoDataHandler.get_all_step_data", false]], "get_attrs() (rexoutputs method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.get_attrs", false]], "get_base_data() (dataretrievalbase class method)": [[7, "sup3r.bias.base.DataRetrievalBase.get_base_data", false]], "get_base_data() (linearcorrection class method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.get_base_data", false]], "get_base_data() (monthlylinearcorrection class method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.get_base_data", false]], "get_base_data() (monthlyscalarcorrection class method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.get_base_data", false]], "get_base_data() (presrat class method)": [[30, "sup3r.bias.presrat.PresRat.get_base_data", false]], "get_base_data() (quantiledeltamappingcorrection class method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.get_base_data", false]], "get_base_data() (scalarcorrection class method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.get_base_data", false]], "get_base_data() (skillassessment class method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.get_base_data", false]], "get_base_gid() (dataretrievalbase method)": [[7, "sup3r.bias.base.DataRetrievalBase.get_base_gid", false]], "get_base_gid() (linearcorrection method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.get_base_gid", false]], "get_base_gid() (monthlylinearcorrection method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.get_base_gid", false]], "get_base_gid() (monthlyscalarcorrection method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.get_base_gid", false]], "get_base_gid() (presrat method)": [[30, "sup3r.bias.presrat.PresRat.get_base_gid", false]], "get_base_gid() (quantiledeltamappingcorrection method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.get_base_gid", false]], "get_base_gid() (scalarcorrection method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.get_base_gid", false]], "get_base_gid() (skillassessment method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.get_base_gid", false]], "get_batch() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.get_batch", false]], "get_batch() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.get_batch", false]], "get_batch() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.get_batch", false]], "get_batch() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.get_batch", false]], "get_batch() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.get_batch", false]], "get_batch() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.get_batch", false]], "get_batch() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.get_batch", false]], "get_batch() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.get_batch", false]], "get_batch() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.get_batch", false]], "get_batch() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.get_batch", false]], "get_batch() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.get_batch", false]], "get_batch() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.get_batch", false]], "get_batch() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.get_batch", false]], "get_batch() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.get_batch", false]], "get_batch() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.get_batch", false]], "get_batch() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.get_batch", false]], "get_batch() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.get_batch", false]], "get_batch() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.get_batch", false]], "get_batch() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.get_batch", false]], "get_batch() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.get_batch", false]], "get_batch() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.get_batch", false]], "get_batch() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.get_batch", false]], "get_batch() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.get_batch", false]], "get_bc_factors() (biascorrectupdate class method)": [[18, "sup3r.bias.bias_calc_vortex.BiasCorrectUpdate.get_bc_factors", false]], "get_bias_data() (dataretrievalbase method)": [[7, "sup3r.bias.base.DataRetrievalBase.get_bias_data", false]], "get_bias_data() (linearcorrection method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.get_bias_data", false]], "get_bias_data() (monthlylinearcorrection method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.get_bias_data", false]], "get_bias_data() (monthlyscalarcorrection method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.get_bias_data", false]], "get_bias_data() (presrat method)": [[30, "sup3r.bias.presrat.PresRat.get_bias_data", false]], "get_bias_data() (quantiledeltamappingcorrection method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.get_bias_data", false]], "get_bias_data() (scalarcorrection method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.get_bias_data", false]], "get_bias_data() (skillassessment method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.get_bias_data", false]], "get_bias_gid() (dataretrievalbase method)": [[7, "sup3r.bias.base.DataRetrievalBase.get_bias_gid", false]], "get_bias_gid() (linearcorrection method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.get_bias_gid", false]], "get_bias_gid() (monthlylinearcorrection method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.get_bias_gid", false]], "get_bias_gid() (monthlyscalarcorrection method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.get_bias_gid", false]], "get_bias_gid() (presrat method)": [[30, "sup3r.bias.presrat.PresRat.get_bias_gid", false]], "get_bias_gid() (quantiledeltamappingcorrection method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.get_bias_gid", false]], "get_bias_gid() (scalarcorrection method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.get_bias_gid", false]], "get_bias_gid() (skillassessment method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.get_bias_gid", false]], "get_cds_client() (eradownloader static method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.get_cds_client", false]], "get_chunk() (exodata method)": [[158, "sup3r.preprocessing.data_handlers.exo.ExoData.get_chunk", false]], "get_chunk_indices() (basecollector static method)": [[82, "sup3r.postprocessing.collectors.base.BaseCollector.get_chunk_indices", false]], "get_chunk_indices() (collectorh5 static method)": [[84, "sup3r.postprocessing.collectors.h5.CollectorH5.get_chunk_indices", false]], "get_chunk_indices() (collectornc static method)": [[86, "sup3r.postprocessing.collectors.nc.CollectorNC.get_chunk_indices", false]], "get_chunk_indices() (forwardpassslicer method)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.get_chunk_indices", false]], "get_chunk_indices() (forwardpassstrategy method)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.get_chunk_indices", false]], "get_chunk_slices() (cacher static method)": [[144, "sup3r.preprocessing.cachers.base.Cacher.get_chunk_slices", false]], "get_chunk_slices() (in module sup3r.pipeline.utilities)": [[77, "sup3r.pipeline.utilities.get_chunk_slices", false]], "get_chunksizes() (cacher class method)": [[144, "sup3r.preprocessing.cachers.base.Cacher.get_chunksizes", false]], "get_class_kwargs() (in module sup3r.preprocessing.utilities)": [[245, "sup3r.preprocessing.utilities.get_class_kwargs", false]], "get_clearsky_ghi() (datahandlerncforcc method)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.get_clearsky_ghi", false]], "get_clearsky_ghi() (datahandlerncforccwithpowerlaw method)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.get_clearsky_ghi", false]], "get_closest_row_col() (baserasterizer method)": [[209, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.get_closest_row_col", false]], "get_closest_row_col() (rasterizer method)": [[219, "sup3r.preprocessing.rasterizers.extended.Rasterizer.get_closest_row_col", false]], "get_collection_attrs() (collectorh5 method)": [[84, "sup3r.postprocessing.collectors.h5.CollectorH5.get_collection_attrs", false]], "get_combine_type_data() (exodata method)": [[158, "sup3r.preprocessing.data_handlers.exo.ExoData.get_combine_type_data", false]], "get_config() (coarsemseloss method)": [[291, "sup3r.utilities.loss_metrics.CoarseMseLoss.get_config", false]], "get_config() (exploss method)": [[292, "sup3r.utilities.loss_metrics.ExpLoss.get_config", false]], "get_config() (lowresloss method)": [[293, "sup3r.utilities.loss_metrics.LowResLoss.get_config", false]], "get_config() (materialderivativeloss method)": [[294, "sup3r.utilities.loss_metrics.MaterialDerivativeLoss.get_config", false]], "get_config() (mmdloss method)": [[295, "sup3r.utilities.loss_metrics.MmdLoss.get_config", false]], "get_config() (mmdmseloss method)": [[296, "sup3r.utilities.loss_metrics.MmdMseLoss.get_config", false]], "get_config() (mseexploss method)": [[297, "sup3r.utilities.loss_metrics.MseExpLoss.get_config", false]], "get_config() (rexoutputs method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.get_config", false]], "get_config() (spatialextremesloss method)": [[298, "sup3r.utilities.loss_metrics.SpatialExtremesLoss.get_config", false]], "get_config() (spatialextremesonlyloss method)": [[299, "sup3r.utilities.loss_metrics.SpatialExtremesOnlyLoss.get_config", false]], "get_config() (spatialfftonlyloss method)": [[300, "sup3r.utilities.loss_metrics.SpatialFftOnlyLoss.get_config", false]], "get_config() (spatiotemporalextremesloss method)": [[301, "sup3r.utilities.loss_metrics.SpatiotemporalExtremesLoss.get_config", false]], "get_config() (spatiotemporalfftonlyloss method)": [[302, "sup3r.utilities.loss_metrics.SpatiotemporalFftOnlyLoss.get_config", false]], "get_config() (stextremesfftloss method)": [[303, "sup3r.utilities.loss_metrics.StExtremesFftLoss.get_config", false]], "get_config() (temporalextremesloss method)": [[304, "sup3r.utilities.loss_metrics.TemporalExtremesLoss.get_config", false]], "get_config() (temporalextremesonlyloss method)": [[305, "sup3r.utilities.loss_metrics.TemporalExtremesOnlyLoss.get_config", false]], "get_container_index() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.get_container_index", false]], "get_container_index() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.get_container_index", false]], "get_container_index() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.get_container_index", false]], "get_container_index() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.get_container_index", false]], "get_container_index() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.get_container_index", false]], "get_container_index() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.get_container_index", false]], "get_container_index() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.get_container_index", false]], "get_container_index() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.get_container_index", false]], "get_container_index() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.get_container_index", false]], "get_container_index() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.get_container_index", false]], "get_container_index() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.get_container_index", false]], "get_container_index() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.get_container_index", false]], "get_container_index() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.get_container_index", false]], "get_container_index() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.get_container_index", false]], "get_container_index() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.get_container_index", false]], "get_container_index() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.get_container_index", false]], "get_container_index() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.get_container_index", false]], "get_container_index() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.get_container_index", false]], "get_container_index() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.get_container_index", false]], "get_container_index() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.get_container_index", false]], "get_container_index() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.get_container_index", false]], "get_container_index() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.get_container_index", false]], "get_container_index() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.get_container_index", false]], "get_coordinate_indices() (collectorh5 method)": [[84, "sup3r.postprocessing.collectors.h5.CollectorH5.get_coordinate_indices", false]], "get_cropped_slices() (forwardpassslicer static method)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.get_cropped_slices", false]], "get_data() (baseexorasterizer method)": [[213, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.get_data", false]], "get_data() (collectorh5 method)": [[84, "sup3r.postprocessing.collectors.h5.CollectorH5.get_data", false]], "get_data() (exorasterizer method)": [[214, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.get_data", false]], "get_data() (exorasterizerh5 method)": [[215, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5.get_data", false]], "get_data() (exorasterizernc method)": [[216, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC.get_data", false]], "get_data() (szarasterizer method)": [[217, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.get_data", false]], "get_data_pair() (dataretrievalbase method)": [[7, "sup3r.bias.base.DataRetrievalBase.get_data_pair", false]], "get_data_pair() (linearcorrection method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.get_data_pair", false]], "get_data_pair() (monthlylinearcorrection method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.get_data_pair", false]], "get_data_pair() (monthlyscalarcorrection method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.get_data_pair", false]], "get_data_pair() (presrat method)": [[30, "sup3r.bias.presrat.PresRat.get_data_pair", false]], "get_data_pair() (quantiledeltamappingcorrection method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.get_data_pair", false]], "get_data_pair() (scalarcorrection method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.get_data_pair", false]], "get_data_pair() (skillassessment method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.get_data_pair", false]], "get_date_range_kwargs() (in module sup3r.preprocessing.utilities)": [[246, "sup3r.preprocessing.utilities.get_date_range_kwargs", false]], "get_distance_upper_bound() (baseexorasterizer method)": [[213, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.get_distance_upper_bound", false]], "get_distance_upper_bound() (exorasterizer method)": [[214, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.get_distance_upper_bound", false]], "get_distance_upper_bound() (exorasterizerh5 method)": [[215, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5.get_distance_upper_bound", false]], "get_distance_upper_bound() (exorasterizernc method)": [[216, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC.get_distance_upper_bound", false]], "get_distance_upper_bound() (szarasterizer method)": [[217, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.get_distance_upper_bound", false]], "get_dset_attrs() (basecollector static method)": [[82, "sup3r.postprocessing.collectors.base.BaseCollector.get_dset_attrs", false]], "get_dset_attrs() (collectorh5 static method)": [[84, "sup3r.postprocessing.collectors.h5.CollectorH5.get_dset_attrs", false]], "get_dset_attrs() (collectornc static method)": [[86, "sup3r.postprocessing.collectors.nc.CollectorNC.get_dset_attrs", false]], "get_dset_attrs() (outputhandler static method)": [[92, "sup3r.postprocessing.writers.base.OutputHandler.get_dset_attrs", false]], "get_dset_attrs() (outputhandlerh5 static method)": [[96, "sup3r.postprocessing.writers.h5.OutputHandlerH5.get_dset_attrs", false]], "get_dset_attrs() (outputhandlernc static method)": [[98, "sup3r.postprocessing.writers.nc.OutputHandlerNC.get_dset_attrs", false]], "get_dset_attrs() (outputmixin static method)": [[93, "sup3r.postprocessing.writers.base.OutputMixin.get_dset_attrs", false]], "get_dset_out() (sup3rqa method)": [[264, "sup3r.qa.qa.Sup3rQa.get_dset_out", false]], "get_dset_properties() (rexoutputs method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.get_dset_properties", false]], "get_exo_cache_files() (forwardpassstrategy method)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.get_exo_cache_files", false]], "get_exo_kwargs() (forwardpassstrategy method)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.get_exo_kwargs", false]], "get_exo_rasterizer() (exodatahandler method)": [[159, "sup3r.preprocessing.data_handlers.exo.ExoDataHandler.get_exo_rasterizer", false]], "get_exo_steps() (exodatahandler class method)": [[159, "sup3r.preprocessing.data_handlers.exo.ExoDataHandler.get_exo_steps", false]], "get_features() (dualsampler method)": [[228, "sup3r.preprocessing.samplers.dual.DualSampler.get_features", false]], "get_features() (dualsamplercc method)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.get_features", false]], "get_flist_chunks() (collectorh5 method)": [[84, "sup3r.postprocessing.collectors.h5.CollectorH5.get_flist_chunks", false]], "get_height_files() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.get_height_files", false]], "get_high_res_exo_input() (abstractsinglemodel method)": [[42, "sup3r.models.abstract.AbstractSingleModel.get_high_res_exo_input", false]], "get_high_res_exo_input() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.get_high_res_exo_input", false]], "get_high_res_exo_input() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.get_high_res_exo_input", false]], "get_high_res_exo_input() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.get_high_res_exo_input", false]], "get_high_res_exo_input() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.get_high_res_exo_input", false]], "get_hours() (eradownloader method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.get_hours", false]], "get_hr_slices() (forwardpassslicer static method)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.get_hr_slices", false]], "get_input_chunk() (forwardpass method)": [[66, "sup3r.pipeline.forward_pass.ForwardPass.get_input_chunk", false]], "get_input_file() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.get_input_file", false]], "get_input_handler_class() (in module sup3r.preprocessing.utilities)": [[247, "sup3r.preprocessing.utilities.get_input_handler_class", false]], "get_inputs() (basederiver method)": [[166, "sup3r.preprocessing.derivers.base.BaseDeriver.get_inputs", false]], "get_inputs() (dailydatahandler method)": [[153, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.get_inputs", false]], "get_inputs() (datahandler method)": [[154, "sup3r.preprocessing.data_handlers.base.DataHandler.get_inputs", false]], "get_inputs() (datahandlerh5solarcc method)": [[155, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.get_inputs", false]], "get_inputs() (datahandlerh5windcc method)": [[156, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.get_inputs", false]], "get_inputs() (datahandlerncforcc method)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.get_inputs", false]], "get_inputs() (datahandlerncforccwithpowerlaw method)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.get_inputs", false]], "get_inputs() (deriver method)": [[167, "sup3r.preprocessing.derivers.base.Deriver.get_inputs", false]], "get_lat_lon() (baserasterizer method)": [[209, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.get_lat_lon", false]], "get_lat_lon() (outputhandler class method)": [[92, "sup3r.postprocessing.writers.base.OutputHandler.get_lat_lon", false]], "get_lat_lon() (outputhandlerh5 class method)": [[96, "sup3r.postprocessing.writers.h5.OutputHandlerH5.get_lat_lon", false]], "get_lat_lon() (outputhandlernc class method)": [[98, "sup3r.postprocessing.writers.nc.OutputHandlerNC.get_lat_lon", false]], "get_lat_lon() (rasterizer method)": [[219, "sup3r.preprocessing.rasterizers.extended.Rasterizer.get_lat_lon", false]], "get_lat_lon() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.get_lat_lon", false]], "get_level_masks() (interpolator class method)": [[289, "sup3r.utilities.interpolation.Interpolator.get_level_masks", false]], "get_linear_correction() (linearcorrection static method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.get_linear_correction", false]], "get_linear_correction() (monthlylinearcorrection static method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.get_linear_correction", false]], "get_linear_correction() (monthlyscalarcorrection static method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.get_linear_correction", false]], "get_linear_correction() (scalarcorrection static method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.get_linear_correction", false]], "get_linear_correction() (skillassessment static method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.get_linear_correction", false]], "get_loss_fun() (abstractsinglemodel static method)": [[42, "sup3r.models.abstract.AbstractSingleModel.get_loss_fun", false]], "get_loss_fun() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.get_loss_fun", false]], "get_loss_fun() (sup3rcondmom static method)": [[47, "sup3r.models.conditional.Sup3rCondMom.get_loss_fun", false]], "get_loss_fun() (sup3rgan static method)": [[45, "sup3r.models.base.Sup3rGan.get_loss_fun", false]], "get_loss_fun() (sup3rgandc static method)": [[49, "sup3r.models.dc.Sup3rGanDC.get_loss_fun", false]], "get_means() (statscollection method)": [[150, "sup3r.preprocessing.collections.stats.StatsCollection.get_means", false]], "get_meta_arr() (rexoutputs method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.get_meta_arr", false]], "get_middle_days() (dualsamplercc static method)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.get_middle_days", false]], "get_model() (in module sup3r.pipeline.utilities)": [[78, "sup3r.pipeline.utilities.get_model", false]], "get_model_step_exo() (exodata method)": [[158, "sup3r.preprocessing.data_handlers.exo.ExoData.get_model_step_exo", false]], "get_month() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.get_month", false]], "get_monthly_file() (eradownloader method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.get_monthly_file", false]], "get_multi_level_data() (basederiver method)": [[166, "sup3r.preprocessing.derivers.base.BaseDeriver.get_multi_level_data", false]], "get_multi_level_data() (dailydatahandler method)": [[153, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.get_multi_level_data", false]], "get_multi_level_data() (datahandler method)": [[154, "sup3r.preprocessing.data_handlers.base.DataHandler.get_multi_level_data", false]], "get_multi_level_data() (datahandlerh5solarcc method)": [[155, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.get_multi_level_data", false]], "get_multi_level_data() (datahandlerh5windcc method)": [[156, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.get_multi_level_data", false]], "get_multi_level_data() (datahandlerncforcc method)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.get_multi_level_data", false]], "get_multi_level_data() (datahandlerncforccwithpowerlaw method)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.get_multi_level_data", false]], "get_multi_level_data() (deriver method)": [[167, "sup3r.preprocessing.derivers.base.Deriver.get_multi_level_data", false]], "get_node_cmd() (basecollector class method)": [[82, "sup3r.postprocessing.collectors.base.BaseCollector.get_node_cmd", false]], "get_node_cmd() (collectorh5 class method)": [[84, "sup3r.postprocessing.collectors.h5.CollectorH5.get_node_cmd", false]], "get_node_cmd() (collectornc class method)": [[86, "sup3r.postprocessing.collectors.nc.CollectorNC.get_node_cmd", false]], "get_node_cmd() (dataretrievalbase class method)": [[7, "sup3r.bias.base.DataRetrievalBase.get_node_cmd", false]], "get_node_cmd() (forwardpass class method)": [[66, "sup3r.pipeline.forward_pass.ForwardPass.get_node_cmd", false]], "get_node_cmd() (linearcorrection class method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.get_node_cmd", false]], "get_node_cmd() (monthlylinearcorrection class method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.get_node_cmd", false]], "get_node_cmd() (monthlyscalarcorrection class method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.get_node_cmd", false]], "get_node_cmd() (presrat class method)": [[30, "sup3r.bias.presrat.PresRat.get_node_cmd", false]], "get_node_cmd() (quantiledeltamappingcorrection class method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.get_node_cmd", false]], "get_node_cmd() (scalarcorrection class method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.get_node_cmd", false]], "get_node_cmd() (skillassessment class method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.get_node_cmd", false]], "get_node_cmd() (solar class method)": [[277, "sup3r.solar.solar.Solar.get_node_cmd", false]], "get_node_cmd() (sup3rqa class method)": [[264, "sup3r.qa.qa.Sup3rQa.get_node_cmd", false]], "get_nsrdb_data() (solar method)": [[277, "sup3r.solar.solar.Solar.get_nsrdb_data", false]], "get_obj_params() (in module sup3r.preprocessing.utilities)": [[248, "sup3r.preprocessing.utilities.get_obj_params", false]], "get_optimizer_class() (in module sup3r.models.utilities)": [[62, "sup3r.models.utilities.get_optimizer_class", false]], "get_optimizer_config() (abstractsinglemodel static method)": [[42, "sup3r.models.abstract.AbstractSingleModel.get_optimizer_config", false]], "get_optimizer_config() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.get_optimizer_config", false]], "get_optimizer_config() (sup3rcondmom static method)": [[47, "sup3r.models.conditional.Sup3rCondMom.get_optimizer_config", false]], "get_optimizer_config() (sup3rgan static method)": [[45, "sup3r.models.base.Sup3rGan.get_optimizer_config", false]], "get_optimizer_config() (sup3rgandc static method)": [[49, "sup3r.models.dc.Sup3rGanDC.get_optimizer_config", false]], "get_optimizer_state() (abstractsinglemodel class method)": [[42, "sup3r.models.abstract.AbstractSingleModel.get_optimizer_state", false]], "get_optimizer_state() (solarcc class method)": [[57, "sup3r.models.solar_cc.SolarCC.get_optimizer_state", false]], "get_optimizer_state() (sup3rcondmom class method)": [[47, "sup3r.models.conditional.Sup3rCondMom.get_optimizer_state", false]], "get_optimizer_state() (sup3rgan class method)": [[45, "sup3r.models.base.Sup3rGan.get_optimizer_state", false]], "get_optimizer_state() (sup3rgandc class method)": [[49, "sup3r.models.dc.Sup3rGanDC.get_optimizer_state", false]], "get_output_file() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.get_output_file", false]], "get_pad_width() (forwardpassslicer method)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.get_pad_width", false]], "get_padded_slices() (forwardpassslicer static method)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.get_padded_slices", false]], "get_qdm_params() (presrat static method)": [[30, "sup3r.bias.presrat.PresRat.get_qdm_params", false]], "get_qdm_params() (quantiledeltamappingcorrection static method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.get_qdm_params", false]], "get_queue() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.get_queue", false]], "get_queue() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.get_queue", false]], "get_queue() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.get_queue", false]], "get_queue() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.get_queue", false]], "get_queue() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.get_queue", false]], "get_queue() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.get_queue", false]], "get_queue() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.get_queue", false]], "get_queue() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.get_queue", false]], "get_queue() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.get_queue", false]], "get_queue() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.get_queue", false]], "get_queue() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.get_queue", false]], "get_queue() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.get_queue", false]], "get_queue() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.get_queue", false]], "get_queue() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.get_queue", false]], "get_queue() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.get_queue", false]], "get_queue() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.get_queue", false]], "get_queue() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.get_queue", false]], "get_queue() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.get_queue", false]], "get_queue() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.get_queue", false]], "get_queue() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.get_queue", false]], "get_queue() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.get_queue", false]], "get_queue() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.get_queue", false]], "get_queue() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.get_queue", false]], "get_random_container() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.get_random_container", false]], "get_random_container() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.get_random_container", false]], "get_random_container() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.get_random_container", false]], "get_random_container() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.get_random_container", false]], "get_random_container() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.get_random_container", false]], "get_random_container() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.get_random_container", false]], "get_random_container() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.get_random_container", false]], "get_random_container() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.get_random_container", false]], "get_random_container() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.get_random_container", false]], "get_random_container() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.get_random_container", false]], "get_random_container() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.get_random_container", false]], "get_random_container() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.get_random_container", false]], "get_random_container() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.get_random_container", false]], "get_random_container() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.get_random_container", false]], "get_random_container() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.get_random_container", false]], "get_random_container() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.get_random_container", false]], "get_random_container() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.get_random_container", false]], "get_random_container() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.get_random_container", false]], "get_random_container() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.get_random_container", false]], "get_random_container() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.get_random_container", false]], "get_random_container() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.get_random_container", false]], "get_random_container() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.get_random_container", false]], "get_random_container() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.get_random_container", false]], "get_raster_index() (baserasterizer method)": [[209, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.get_raster_index", false]], "get_raster_index() (rasterizer method)": [[219, "sup3r.preprocessing.rasterizers.extended.Rasterizer.get_raster_index", false]], "get_regridder() (dualrasterizer method)": [[211, "sup3r.preprocessing.rasterizers.dual.DualRasterizer.get_regridder", false]], "get_renamed_features() (outputhandler class method)": [[92, "sup3r.postprocessing.writers.base.OutputHandler.get_renamed_features", false]], "get_renamed_features() (outputhandlerh5 class method)": [[96, "sup3r.postprocessing.writers.h5.OutputHandlerH5.get_renamed_features", false]], "get_renamed_features() (outputhandlernc class method)": [[98, "sup3r.postprocessing.writers.nc.OutputHandlerNC.get_renamed_features", false]], "get_s_enhance_from_layers() (abstractinterface method)": [[41, "sup3r.models.abstract.AbstractInterface.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (linearinterp method)": [[51, "sup3r.models.linear.LinearInterp.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (multistepgan method)": [[53, "sup3r.models.multi_step.MultiStepGan.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (multistepsurfacemetgan method)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (solarmultistepgan method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.get_s_enhance_from_layers", false]], "get_s_enhance_from_layers() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.get_s_enhance_from_layers", false]], "get_sam_df() (rexoutputs method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.get_SAM_df", false]], "get_sample_index() (dualsampler method)": [[228, "sup3r.preprocessing.samplers.dual.DualSampler.get_sample_index", false]], "get_sample_index() (dualsamplercc method)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.get_sample_index", false]], "get_sample_index() (dummysampler method)": [[314, "sup3r.utilities.pytest.helpers.DummySampler.get_sample_index", false]], "get_sample_index() (sampler method)": [[222, "sup3r.preprocessing.samplers.base.Sampler.get_sample_index", false]], "get_sample_index() (samplerdc method)": [[226, "sup3r.preprocessing.samplers.dc.SamplerDC.get_sample_index", false]], "get_sample_index() (samplertester method)": [[315, "sup3r.utilities.pytest.helpers.SamplerTester.get_sample_index", false]], "get_scale_factor() (rexoutputs method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.get_scale_factor", false]], "get_single_grad() (abstractsinglemodel method)": [[42, "sup3r.models.abstract.AbstractSingleModel.get_single_grad", false]], "get_single_grad() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.get_single_grad", false]], "get_single_grad() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.get_single_grad", false]], "get_single_grad() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.get_single_grad", false]], "get_single_grad() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.get_single_grad", false]], "get_single_level_data() (basederiver method)": [[166, "sup3r.preprocessing.derivers.base.BaseDeriver.get_single_level_data", false]], "get_single_level_data() (dailydatahandler method)": [[153, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.get_single_level_data", false]], "get_single_level_data() (datahandler method)": [[154, "sup3r.preprocessing.data_handlers.base.DataHandler.get_single_level_data", false]], "get_single_level_data() (datahandlerh5solarcc method)": [[155, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.get_single_level_data", false]], "get_single_level_data() (datahandlerh5windcc method)": [[156, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.get_single_level_data", false]], "get_single_level_data() (datahandlerncforcc method)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.get_single_level_data", false]], "get_single_level_data() (datahandlerncforccwithpowerlaw method)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.get_single_level_data", false]], "get_single_level_data() (deriver method)": [[167, "sup3r.preprocessing.derivers.base.Deriver.get_single_level_data", false]], "get_single_step_data() (exodatahandler method)": [[159, "sup3r.preprocessing.data_handlers.exo.ExoDataHandler.get_single_step_data", false]], "get_slices() (collectorh5 class method)": [[84, "sup3r.postprocessing.collectors.h5.CollectorH5.get_slices", false]], "get_source_type() (in module sup3r.preprocessing.utilities)": [[249, "sup3r.preprocessing.utilities.get_source_type", false]], "get_spatial_slices() (forwardpassslicer method)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.get_spatial_slices", false]], "get_stds() (statscollection method)": [[150, "sup3r.preprocessing.collections.stats.StatsCollection.get_stds", false]], "get_sup3r_fps() (solar static method)": [[277, "sup3r.solar.solar.Solar.get_sup3r_fps", false]], "get_t_enhance_from_layers() (abstractinterface method)": [[41, "sup3r.models.abstract.AbstractInterface.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (linearinterp method)": [[51, "sup3r.models.linear.LinearInterp.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (multistepgan method)": [[53, "sup3r.models.multi_step.MultiStepGan.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (multistepsurfacemetgan method)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (solarmultistepgan method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.get_t_enhance_from_layers", false]], "get_t_enhance_from_layers() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.get_t_enhance_from_layers", false]], "get_target_and_masked_meta() (collectorh5 method)": [[84, "sup3r.postprocessing.collectors.h5.CollectorH5.get_target_and_masked_meta", false]], "get_time_dim_name() (basecollector static method)": [[82, "sup3r.postprocessing.collectors.base.BaseCollector.get_time_dim_name", false]], "get_time_dim_name() (collectorh5 static method)": [[84, "sup3r.postprocessing.collectors.h5.CollectorH5.get_time_dim_name", false]], "get_time_dim_name() (collectornc static method)": [[86, "sup3r.postprocessing.collectors.nc.CollectorNC.get_time_dim_name", false]], "get_time_dim_name() (outputhandler static method)": [[92, "sup3r.postprocessing.writers.base.OutputHandler.get_time_dim_name", false]], "get_time_dim_name() (outputhandlerh5 static method)": [[96, "sup3r.postprocessing.writers.h5.OutputHandlerH5.get_time_dim_name", false]], "get_time_dim_name() (outputhandlernc static method)": [[98, "sup3r.postprocessing.writers.nc.OutputHandlerNC.get_time_dim_name", false]], "get_time_dim_name() (outputmixin static method)": [[93, "sup3r.postprocessing.writers.base.OutputMixin.get_time_dim_name", false]], "get_time_slice() (datahandlerncforcc method)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.get_time_slice", false]], "get_time_slice() (datahandlerncforccwithpowerlaw method)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.get_time_slice", false]], "get_time_slices() (forwardpassslicer method)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.get_time_slices", false]], "get_times() (outputhandler static method)": [[92, "sup3r.postprocessing.writers.base.OutputHandler.get_times", false]], "get_times() (outputhandlerh5 static method)": [[96, "sup3r.postprocessing.writers.h5.OutputHandlerH5.get_times", false]], "get_times() (outputhandlernc static method)": [[98, "sup3r.postprocessing.writers.nc.OutputHandlerNC.get_times", false]], "get_tmp_file() (eradownloader class method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.get_tmp_file", false]], "get_unique_chunk_files() (collectorh5 method)": [[84, "sup3r.postprocessing.collectors.h5.CollectorH5.get_unique_chunk_files", false]], "get_units() (rexoutputs method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.get_units", false]], "get_weight_update_fraction() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.get_weight_update_fraction", false]], "get_weight_update_fraction() (sup3rgan static method)": [[45, "sup3r.models.base.Sup3rGan.get_weight_update_fraction", false]], "get_weight_update_fraction() (sup3rgandc static method)": [[49, "sup3r.models.dc.Sup3rGanDC.get_weight_update_fraction", false]], "get_zenith() (solarzenith static method)": [[189, "sup3r.preprocessing.derivers.utilities.SolarZenith.get_zenith", false]], "ghi (solar property)": [[277, "sup3r.solar.solar.Solar.ghi", false]], "global_attrs (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.global_attrs", false]], "global_attrs (vortexmeanprepper property)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.global_attrs", false]], "global_linear_bc() (in module sup3r.bias.bias_transforms)": [[21, "sup3r.bias.bias_transforms.global_linear_bc", false]], "gradient_dist() (in module sup3r.qa.utilities)": [[270, "sup3r.qa.utilities.gradient_dist", false]], "grid_shape (baserasterizer property)": [[209, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.grid_shape", false]], "grid_shape (rasterizer property)": [[219, "sup3r.preprocessing.rasterizers.extended.Rasterizer.grid_shape", false]], "grid_shape (sup3rx property)": [[101, "sup3r.preprocessing.accessor.Sup3rX.grid_shape", false]], "group_spatial_chunks() (collectornc method)": [[86, "sup3r.postprocessing.collectors.nc.CollectorNC.group_spatial_chunks", false]], "groups (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.groups", false]], "h5 (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.h5", false]], "has_interp_variables() (basederiver method)": [[166, "sup3r.preprocessing.derivers.base.BaseDeriver.has_interp_variables", false]], "has_interp_variables() (dailydatahandler method)": [[153, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.has_interp_variables", false]], "has_interp_variables() (datahandler method)": [[154, "sup3r.preprocessing.data_handlers.base.DataHandler.has_interp_variables", false]], "has_interp_variables() (datahandlerh5solarcc method)": [[155, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.has_interp_variables", false]], "has_interp_variables() (datahandlerh5windcc method)": [[156, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.has_interp_variables", false]], "has_interp_variables() (datahandlerncforcc method)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.has_interp_variables", false]], "has_interp_variables() (datahandlerncforccwithpowerlaw method)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.has_interp_variables", false]], "has_interp_variables() (deriver method)": [[167, "sup3r.preprocessing.derivers.base.Deriver.has_interp_variables", false]], "high_res (abstractbatchqueue.batch attribute)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.Batch.high_res", false]], "high_res (batchhandler.batch attribute)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.Batch.high_res", false]], "high_res (batchhandlercc.batch attribute)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.Batch.high_res", false]], "high_res (batchhandlerdc.batch attribute)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.Batch.high_res", false]], "high_res (batchhandlermom1.batch attribute)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.Batch.high_res", false]], "high_res (batchhandlermom1.conditionalbatch attribute)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.ConditionalBatch.high_res", false]], "high_res (batchhandlermom1sf.batch attribute)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.Batch.high_res", false]], "high_res (batchhandlermom1sf.conditionalbatch attribute)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.ConditionalBatch.high_res", false]], "high_res (batchhandlermom2.batch attribute)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.Batch.high_res", false]], "high_res (batchhandlermom2.conditionalbatch attribute)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.ConditionalBatch.high_res", false]], "high_res (batchhandlermom2sep.batch attribute)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.Batch.high_res", false]], "high_res (batchhandlermom2sep.conditionalbatch attribute)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.ConditionalBatch.high_res", false]], "high_res (batchhandlermom2sepsf.batch attribute)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.Batch.high_res", false]], "high_res (batchhandlermom2sepsf.conditionalbatch attribute)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.ConditionalBatch.high_res", false]], "high_res (batchhandlertestercc.batch attribute)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.Batch.high_res", false]], "high_res (batchhandlertesterdc.batch attribute)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.Batch.high_res", false]], "high_res (batchqueuedc.batch attribute)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.Batch.high_res", false]], "high_res (conditionalbatchqueue.batch attribute)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.Batch.high_res", false]], "high_res (conditionalbatchqueue.conditionalbatch attribute)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.ConditionalBatch.high_res", false]], "high_res (dualbatchhandler.batch attribute)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.Batch.high_res", false]], "high_res (dualbatchqueue.batch attribute)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.Batch.high_res", false]], "high_res (queuemom1.batch attribute)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.Batch.high_res", false]], "high_res (queuemom1.conditionalbatch attribute)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.ConditionalBatch.high_res", false]], "high_res (queuemom1sf.batch attribute)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.Batch.high_res", false]], "high_res (queuemom1sf.conditionalbatch attribute)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.ConditionalBatch.high_res", false]], "high_res (queuemom2.batch attribute)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.Batch.high_res", false]], "high_res (queuemom2.conditionalbatch attribute)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.ConditionalBatch.high_res", false]], "high_res (queuemom2sep.batch attribute)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.Batch.high_res", false]], "high_res (queuemom2sep.conditionalbatch attribute)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.ConditionalBatch.high_res", false]], "high_res (queuemom2sepsf.batch attribute)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.Batch.high_res", false]], "high_res (queuemom2sepsf.conditionalbatch attribute)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.ConditionalBatch.high_res", false]], "high_res (queuemom2sf.batch attribute)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.Batch.high_res", false]], "high_res (queuemom2sf.conditionalbatch attribute)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.ConditionalBatch.high_res", false]], "high_res (singlebatchqueue.batch attribute)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.Batch.high_res", false]], "high_res (valbatchqueuedc.batch attribute)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.Batch.high_res", false]], "history (abstractsinglemodel property)": [[42, "sup3r.models.abstract.AbstractSingleModel.history", false]], "history (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.history", false]], "history (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.history", false]], "history (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.history", false]], "history (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.history", false]], "hold() (slurmmanager method)": [[285, "sup3r.utilities.cli.SlurmManager.hold", false]], "hr_crop_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.hr_crop_slices", false]], "hr_exo_features (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.hr_exo_features", false]], "hr_exo_features (dualsampler property)": [[228, "sup3r.preprocessing.samplers.dual.DualSampler.hr_exo_features", false]], "hr_exo_features (dualsamplercc property)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.hr_exo_features", false]], "hr_exo_features (dummysampler property)": [[314, "sup3r.utilities.pytest.helpers.DummySampler.hr_exo_features", false]], "hr_exo_features (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.hr_exo_features", false]], "hr_exo_features (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.hr_exo_features", false]], "hr_exo_features (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.hr_exo_features", false]], "hr_exo_features (sampler property)": [[222, "sup3r.preprocessing.samplers.base.Sampler.hr_exo_features", false]], "hr_exo_features (samplerdc property)": [[226, "sup3r.preprocessing.samplers.dc.SamplerDC.hr_exo_features", false]], "hr_exo_features (samplertester property)": [[315, "sup3r.utilities.pytest.helpers.SamplerTester.hr_exo_features", false]], "hr_exo_features (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.hr_exo_features", false]], "hr_exo_features (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.hr_exo_features", false]], "hr_exo_features (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.hr_exo_features", false]], "hr_exo_features (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.hr_exo_features", false]], "hr_exo_features (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.hr_exo_features", false]], "hr_exo_features (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.hr_exo_features", false]], "hr_features (dualsampler property)": [[228, "sup3r.preprocessing.samplers.dual.DualSampler.hr_features", false]], "hr_features (dualsamplercc property)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.hr_features", false]], "hr_features (dummysampler property)": [[314, "sup3r.utilities.pytest.helpers.DummySampler.hr_features", false]], "hr_features (sampler property)": [[222, "sup3r.preprocessing.samplers.base.Sampler.hr_features", false]], "hr_features (samplerdc property)": [[226, "sup3r.preprocessing.samplers.dc.SamplerDC.hr_features", false]], "hr_features (samplertester property)": [[315, "sup3r.utilities.pytest.helpers.SamplerTester.hr_features", false]], "hr_features_ind (dualsampler property)": [[228, "sup3r.preprocessing.samplers.dual.DualSampler.hr_features_ind", false]], "hr_features_ind (dualsamplercc property)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.hr_features_ind", false]], "hr_features_ind (dummysampler property)": [[314, "sup3r.utilities.pytest.helpers.DummySampler.hr_features_ind", false]], "hr_features_ind (sampler property)": [[222, "sup3r.preprocessing.samplers.base.Sampler.hr_features_ind", false]], "hr_features_ind (samplerdc property)": [[226, "sup3r.preprocessing.samplers.dc.SamplerDC.hr_features_ind", false]], "hr_features_ind (samplertester property)": [[315, "sup3r.utilities.pytest.helpers.SamplerTester.hr_features_ind", false]], "hr_lat_lon (baseexorasterizer property)": [[213, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.hr_lat_lon", false]], "hr_lat_lon (exorasterizer property)": [[214, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.hr_lat_lon", false]], "hr_lat_lon (exorasterizerh5 property)": [[215, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5.hr_lat_lon", false]], "hr_lat_lon (exorasterizernc property)": [[216, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC.hr_lat_lon", false]], "hr_lat_lon (forwardpassstrategy property)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.hr_lat_lon", false]], "hr_lat_lon (szarasterizer property)": [[217, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.hr_lat_lon", false]], "hr_out_features (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.hr_out_features", false]], "hr_out_features (dualsampler property)": [[228, "sup3r.preprocessing.samplers.dual.DualSampler.hr_out_features", false]], "hr_out_features (dualsamplercc property)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.hr_out_features", false]], "hr_out_features (dummysampler property)": [[314, "sup3r.utilities.pytest.helpers.DummySampler.hr_out_features", false]], "hr_out_features (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.hr_out_features", false]], "hr_out_features (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.hr_out_features", false]], "hr_out_features (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.hr_out_features", false]], "hr_out_features (sampler property)": [[222, "sup3r.preprocessing.samplers.base.Sampler.hr_out_features", false]], "hr_out_features (samplerdc property)": [[226, "sup3r.preprocessing.samplers.dc.SamplerDC.hr_out_features", false]], "hr_out_features (samplertester property)": [[315, "sup3r.utilities.pytest.helpers.SamplerTester.hr_out_features", false]], "hr_out_features (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.hr_out_features", false]], "hr_out_features (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.hr_out_features", false]], "hr_out_features (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.hr_out_features", false]], "hr_out_features (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.hr_out_features", false]], "hr_out_features (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.hr_out_features", false]], "hr_out_features (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.hr_out_features", false]], "hr_sample_shape (dualsampler property)": [[228, "sup3r.preprocessing.samplers.dual.DualSampler.hr_sample_shape", false]], "hr_sample_shape (dualsamplercc property)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.hr_sample_shape", false]], "hr_sample_shape (dummysampler property)": [[314, "sup3r.utilities.pytest.helpers.DummySampler.hr_sample_shape", false]], "hr_sample_shape (sampler property)": [[222, "sup3r.preprocessing.samplers.base.Sampler.hr_sample_shape", false]], "hr_sample_shape (samplerdc property)": [[226, "sup3r.preprocessing.samplers.dc.SamplerDC.hr_sample_shape", false]], "hr_sample_shape (samplertester property)": [[315, "sup3r.utilities.pytest.helpers.SamplerTester.hr_sample_shape", false]], "hr_shape (abstractbatchqueue property)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.hr_shape", false]], "hr_shape (baseexorasterizer property)": [[213, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.hr_shape", false]], "hr_shape (batchhandler property)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.hr_shape", false]], "hr_shape (batchhandlercc property)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.hr_shape", false]], "hr_shape (batchhandlerdc property)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.hr_shape", false]], "hr_shape (batchhandlermom1 property)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.hr_shape", false]], "hr_shape (batchhandlermom1sf property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.hr_shape", false]], "hr_shape (batchhandlermom2 property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.hr_shape", false]], "hr_shape (batchhandlermom2sep property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.hr_shape", false]], "hr_shape (batchhandlermom2sepsf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.hr_shape", false]], "hr_shape (batchhandlertestercc property)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.hr_shape", false]], "hr_shape (batchhandlertesterdc property)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.hr_shape", false]], "hr_shape (batchqueuedc property)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.hr_shape", false]], "hr_shape (conditionalbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.hr_shape", false]], "hr_shape (dualbatchhandler property)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.hr_shape", false]], "hr_shape (dualbatchqueue property)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.hr_shape", false]], "hr_shape (exorasterizer property)": [[214, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.hr_shape", false]], "hr_shape (exorasterizerh5 property)": [[215, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5.hr_shape", false]], "hr_shape (exorasterizernc property)": [[216, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC.hr_shape", false]], "hr_shape (queuemom1 property)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.hr_shape", false]], "hr_shape (queuemom1sf property)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.hr_shape", false]], "hr_shape (queuemom2 property)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.hr_shape", false]], "hr_shape (queuemom2sep property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.hr_shape", false]], "hr_shape (queuemom2sepsf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.hr_shape", false]], "hr_shape (queuemom2sf property)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.hr_shape", false]], "hr_shape (singlebatchqueue property)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.hr_shape", false]], "hr_shape (szarasterizer property)": [[217, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.hr_shape", false]], "hr_shape (valbatchqueuedc property)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.hr_shape", false]], "hr_time_index (baseexorasterizer property)": [[213, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.hr_time_index", false]], "hr_time_index (exorasterizer property)": [[214, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.hr_time_index", false]], "hr_time_index (exorasterizerh5 property)": [[215, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5.hr_time_index", false]], "hr_time_index (exorasterizernc property)": [[216, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC.hr_time_index", false]], "hr_time_index (szarasterizer property)": [[217, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.hr_time_index", false]], "idf_solar (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.idf_solar", false]], "idf_wind (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.idf_wind", false]], "idf_wind_out (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.idf_wind_out", false]], "idnn (solar property)": [[277, "sup3r.solar.solar.Solar.idnn", false]], "in_features (vortexmeanprepper property)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.in_features", false]], "index() (abstractbatchqueue.batch method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.Batch.index", false]], "index() (batchhandler.batch method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.Batch.index", false]], "index() (batchhandlercc.batch method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.Batch.index", false]], "index() (batchhandlerdc.batch method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.Batch.index", false]], "index() (batchhandlermom1.batch method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.Batch.index", false]], "index() (batchhandlermom1.conditionalbatch method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.ConditionalBatch.index", false]], "index() (batchhandlermom1sf.batch method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.Batch.index", false]], "index() (batchhandlermom1sf.conditionalbatch method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.ConditionalBatch.index", false]], "index() (batchhandlermom2.batch method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.Batch.index", false]], "index() (batchhandlermom2.conditionalbatch method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.ConditionalBatch.index", false]], "index() (batchhandlermom2sep.batch method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.Batch.index", false]], "index() (batchhandlermom2sep.conditionalbatch method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.ConditionalBatch.index", false]], "index() (batchhandlermom2sepsf.batch method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.Batch.index", false]], "index() (batchhandlermom2sepsf.conditionalbatch method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.ConditionalBatch.index", false]], "index() (batchhandlertestercc.batch method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.Batch.index", false]], "index() (batchhandlertesterdc.batch method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.Batch.index", false]], "index() (batchqueuedc.batch method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.Batch.index", false]], "index() (conditionalbatchqueue.batch method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.Batch.index", false]], "index() (conditionalbatchqueue.conditionalbatch method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.ConditionalBatch.index", false]], "index() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.index", false]], "index() (dualbatchhandler.batch method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.Batch.index", false]], "index() (dualbatchqueue.batch method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.Batch.index", false]], "index() (modulename method)": [[282, "sup3r.utilities.ModuleName.index", false]], "index() (queuemom1.batch method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.Batch.index", false]], "index() (queuemom1.conditionalbatch method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.ConditionalBatch.index", false]], "index() (queuemom1sf.batch method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.Batch.index", false]], "index() (queuemom1sf.conditionalbatch method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.ConditionalBatch.index", false]], "index() (queuemom2.batch method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.Batch.index", false]], "index() (queuemom2.conditionalbatch method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.ConditionalBatch.index", false]], "index() (queuemom2sep.batch method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.Batch.index", false]], "index() (queuemom2sep.conditionalbatch method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.ConditionalBatch.index", false]], "index() (queuemom2sepsf.batch method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.Batch.index", false]], "index() (queuemom2sepsf.conditionalbatch method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.ConditionalBatch.index", false]], "index() (queuemom2sf.batch method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.Batch.index", false]], "index() (queuemom2sf.conditionalbatch method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.ConditionalBatch.index", false]], "index() (singlebatchqueue.batch method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.Batch.index", false]], "index() (valbatchqueuedc.batch method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.Batch.index", false]], "init_chunk() (forwardpassstrategy method)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.init_chunk", false]], "init_h5() (rexoutputs class method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.init_h5", false]], "init_input_handler() (forwardpassstrategy method)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.init_input_handler", false]], "init_optimizer() (abstractsinglemodel static method)": [[42, "sup3r.models.abstract.AbstractSingleModel.init_optimizer", false]], "init_optimizer() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.init_optimizer", false]], "init_optimizer() (sup3rcondmom static method)": [[47, "sup3r.models.conditional.Sup3rCondMom.init_optimizer", false]], "init_optimizer() (sup3rgan static method)": [[45, "sup3r.models.base.Sup3rGan.init_optimizer", false]], "init_optimizer() (sup3rgandc static method)": [[49, "sup3r.models.dc.Sup3rGanDC.init_optimizer", false]], "init_samplers() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.init_samplers", false]], "init_samplers() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.init_samplers", false]], "init_samplers() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.init_samplers", false]], "init_samplers() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.init_samplers", false]], "init_samplers() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.init_samplers", false]], "init_samplers() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.init_samplers", false]], "init_samplers() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.init_samplers", false]], "init_samplers() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.init_samplers", false]], "init_samplers() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.init_samplers", false]], "init_samplers() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.init_samplers", false]], "init_samplers() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.init_samplers", false]], "init_weights() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.init_weights", false]], "init_weights() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.init_weights", false]], "init_weights() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.init_weights", false]], "input_dims (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.input_dims", false]], "input_dims (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.input_dims", false]], "input_dims (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.input_dims", false]], "input_dims (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.input_dims", false]], "input_dims (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.input_dims", false]], "input_dims (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.input_dims", false]], "input_dims (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.input_dims", false]], "input_dims (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.input_dims", false]], "input_dims (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.input_dims", false]], "input_dims (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.input_dims", false]], "input_files (vortexmeanprepper property)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.input_files", false]], "input_resolution (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.input_resolution", false]], "input_resolution (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.input_resolution", false]], "input_resolution (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.input_resolution", false]], "input_resolution (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.input_resolution", false]], "input_resolution (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.input_resolution", false]], "input_resolution (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.input_resolution", false]], "input_resolution (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.input_resolution", false]], "input_resolution (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.input_resolution", false]], "input_resolution (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.input_resolution", false]], "input_resolution (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.input_resolution", false]], "interp() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.interp", false]], "interp_to_level() (interpolator class method)": [[289, "sup3r.utilities.interpolation.Interpolator.interp_to_level", false]], "interpolate_na() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.interpolate_na", false]], "interpolator (class in sup3r.utilities.interpolation)": [[289, "sup3r.utilities.interpolation.Interpolator", false]], "invert_uv() (in module sup3r.preprocessing.derivers.utilities)": [[190, "sup3r.preprocessing.derivers.utilities.invert_uv", false]], "invert_uv_features() (outputhandler class method)": [[92, "sup3r.postprocessing.writers.base.OutputHandler.invert_uv_features", false]], "invert_uv_features() (outputhandlerh5 class method)": [[96, "sup3r.postprocessing.writers.h5.OutputHandlerH5.invert_uv_features", false]], "invert_uv_features() (outputhandlernc class method)": [[98, "sup3r.postprocessing.writers.nc.OutputHandlerNC.invert_uv_features", false]], "invert_uv_single_pair() (outputhandler static method)": [[92, "sup3r.postprocessing.writers.base.OutputHandler.invert_uv_single_pair", false]], "invert_uv_single_pair() (outputhandlerh5 static method)": [[96, "sup3r.postprocessing.writers.h5.OutputHandlerH5.invert_uv_single_pair", false]], "invert_uv_single_pair() (outputhandlernc static method)": [[98, "sup3r.postprocessing.writers.nc.OutputHandlerNC.invert_uv_single_pair", false]], "is_4d (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.is_4d", false]], "is_4d (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.is_4d", false]], "is_4d (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.is_4d", false]], "is_4d (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.is_4d", false]], "is_4d (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.is_4d", false]], "is_4d (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.is_4d", false]], "is_4d (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.is_4d", false]], "is_4d (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.is_4d", false]], "is_4d (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.is_4d", false]], "is_4d (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.is_4d", false]], "is_5d (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.is_5d", false]], "is_5d (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.is_5d", false]], "is_5d (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.is_5d", false]], "is_5d (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.is_5d", false]], "is_5d (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.is_5d", false]], "is_5d (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.is_5d", false]], "is_5d (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.is_5d", false]], "is_5d (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.is_5d", false]], "is_5d (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.is_5d", false]], "is_5d (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.is_5d", false]], "is_hsds_file() (rexoutputs static method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.is_hsds_file", false]], "is_increasing_lons() (outputhandler static method)": [[92, "sup3r.postprocessing.writers.base.OutputHandler.is_increasing_lons", false]], "is_increasing_lons() (outputhandlerh5 static method)": [[96, "sup3r.postprocessing.writers.h5.OutputHandlerH5.is_increasing_lons", false]], "is_increasing_lons() (outputhandlernc static method)": [[98, "sup3r.postprocessing.writers.nc.OutputHandlerNC.is_increasing_lons", false]], "is_s3_file() (rexoutputs static method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.is_s3_file", false]], "is_type_of() (in module sup3r.preprocessing.utilities)": [[250, "sup3r.preprocessing.utilities.is_type_of", false]], "isalnum() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.isalnum", false]], "isalnum() (modulename method)": [[282, "sup3r.utilities.ModuleName.isalnum", false]], "isalpha() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.isalpha", false]], "isalpha() (modulename method)": [[282, "sup3r.utilities.ModuleName.isalpha", false]], "isascii() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.isascii", false]], "isascii() (modulename method)": [[282, "sup3r.utilities.ModuleName.isascii", false]], "isdecimal() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.isdecimal", false]], "isdecimal() (modulename method)": [[282, "sup3r.utilities.ModuleName.isdecimal", false]], "isdigit() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.isdigit", false]], "isdigit() (modulename method)": [[282, "sup3r.utilities.ModuleName.isdigit", false]], "isel() (sup3rdataset method)": [[104, "sup3r.preprocessing.base.Sup3rDataset.isel", false]], "isel() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.isel", false]], "isidentifier() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.isidentifier", false]], "isidentifier() (modulename method)": [[282, "sup3r.utilities.ModuleName.isidentifier", false]], "islower() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.islower", false]], "islower() (modulename method)": [[282, "sup3r.utilities.ModuleName.islower", false]], "isnumeric() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.isnumeric", false]], "isnumeric() (modulename method)": [[282, "sup3r.utilities.ModuleName.isnumeric", false]], "isprintable() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.isprintable", false]], "isprintable() (modulename method)": [[282, "sup3r.utilities.ModuleName.isprintable", false]], "isspace() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.isspace", false]], "isspace() (modulename method)": [[282, "sup3r.utilities.ModuleName.isspace", false]], "istitle() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.istitle", false]], "istitle() (modulename method)": [[282, "sup3r.utilities.ModuleName.istitle", false]], "isupper() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.isupper", false]], "isupper() (modulename method)": [[282, "sup3r.utilities.ModuleName.isupper", false]], "items() (exodata method)": [[158, "sup3r.preprocessing.data_handlers.exo.ExoData.items", false]], "items() (singleexodatastep method)": [[160, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.items", false]], "join() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.join", false]], "join() (modulename method)": [[282, "sup3r.utilities.ModuleName.join", false]], "keys() (exodata method)": [[158, "sup3r.preprocessing.data_handlers.exo.ExoData.keys", false]], "keys() (singleexodatastep method)": [[160, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.keys", false]], "kickoff_local_job() (basecli class method)": [[284, "sup3r.utilities.cli.BaseCLI.kickoff_local_job", false]], "kickoff_local_job() (in module sup3r.bias.bias_calc_cli)": [[15, "sup3r.bias.bias_calc_cli.kickoff_local_job", false]], "kickoff_local_job() (in module sup3r.pipeline.forward_pass_cli)": [[68, "sup3r.pipeline.forward_pass_cli.kickoff_local_job", false]], "kickoff_local_job() (in module sup3r.postprocessing.data_collect_cli)": [[88, "sup3r.postprocessing.data_collect_cli.kickoff_local_job", false]], "kickoff_local_job() (in module sup3r.solar.solar_cli)": [[279, "sup3r.solar.solar_cli.kickoff_local_job", false]], "kickoff_slurm_job() (basecli class method)": [[284, "sup3r.utilities.cli.BaseCLI.kickoff_slurm_job", false]], "kickoff_slurm_job() (in module sup3r.bias.bias_calc_cli)": [[16, "sup3r.bias.bias_calc_cli.kickoff_slurm_job", false]], "kickoff_slurm_job() (in module sup3r.pipeline.forward_pass_cli)": [[69, "sup3r.pipeline.forward_pass_cli.kickoff_slurm_job", false]], "kickoff_slurm_job() (in module sup3r.postprocessing.data_collect_cli)": [[89, "sup3r.postprocessing.data_collect_cli.kickoff_slurm_job", false]], "kickoff_slurm_job() (in module sup3r.solar.solar_cli)": [[280, "sup3r.solar.solar_cli.kickoff_slurm_job", false]], "lat_lon (baserasterizer property)": [[209, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.lat_lon", false]], "lat_lon (rasterizer property)": [[219, "sup3r.preprocessing.rasterizers.extended.Rasterizer.lat_lon", false]], "lat_lon (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.lat_lon", false]], "lat_lon (sup3rx property)": [[101, "sup3r.preprocessing.accessor.Sup3rX.lat_lon", false]], "level_file (eradownloader property)": [[287, "sup3r.utilities.era_downloader.EraDownloader.level_file", false]], "lin_bc() (in module sup3r.bias.utilities)": [[36, "sup3r.bias.utilities.lin_bc", false]], "linearcorrection (class in sup3r.bias.bias_calc)": [[9, "sup3r.bias.bias_calc.LinearCorrection", false]], "linearinterp (class in sup3r.models.linear)": [[51, "sup3r.models.linear.LinearInterp", false]], "ljust() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.ljust", false]], "ljust() (modulename method)": [[282, "sup3r.utilities.ModuleName.ljust", false]], "load() (abstractinterface class method)": [[41, "sup3r.models.abstract.AbstractInterface.load", false]], "load() (linearinterp class method)": [[51, "sup3r.models.linear.LinearInterp.load", false]], "load() (multistepgan class method)": [[53, "sup3r.models.multi_step.MultiStepGan.load", false]], "load() (multistepsurfacemetgan class method)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.load", false]], "load() (solarcc class method)": [[57, "sup3r.models.solar_cc.SolarCC.load", false]], "load() (solarmultistepgan class method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.load", false]], "load() (sup3rcondmom class method)": [[47, "sup3r.models.conditional.Sup3rCondMom.load", false]], "load() (sup3rgan class method)": [[45, "sup3r.models.base.Sup3rGan.load", false]], "load() (sup3rgandc class method)": [[49, "sup3r.models.dc.Sup3rGanDC.load", false]], "load() (surfacespatialmetmodel class method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.load", false]], "load_exo_data() (forwardpassstrategy method)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.load_exo_data", false]], "load_network() (abstractsinglemodel method)": [[42, "sup3r.models.abstract.AbstractSingleModel.load_network", false]], "load_network() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.load_network", false]], "load_network() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.load_network", false]], "load_network() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.load_network", false]], "load_network() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.load_network", false]], "load_saved_params() (abstractsinglemodel static method)": [[42, "sup3r.models.abstract.AbstractSingleModel.load_saved_params", false]], "load_saved_params() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.load_saved_params", false]], "load_saved_params() (sup3rcondmom static method)": [[47, "sup3r.models.conditional.Sup3rCondMom.load_saved_params", false]], "load_saved_params() (sup3rgan static method)": [[45, "sup3r.models.base.Sup3rGan.load_saved_params", false]], "load_saved_params() (sup3rgandc static method)": [[49, "sup3r.models.dc.Sup3rGanDC.load_saved_params", false]], "loaded (sup3rdataset property)": [[104, "sup3r.preprocessing.base.Sup3rDataset.loaded", false]], "loaded (sup3rx property)": [[101, "sup3r.preprocessing.accessor.Sup3rX.loaded", false]], "loader (class in sup3r.preprocessing.loaders)": [[195, "sup3r.preprocessing.loaders.Loader", false]], "loaderh5 (class in sup3r.preprocessing.loaders.h5)": [[199, "sup3r.preprocessing.loaders.h5.LoaderH5", false]], "loadernc (class in sup3r.preprocessing.loaders.nc)": [[201, "sup3r.preprocessing.loaders.nc.LoaderNC", false]], "local_linear_bc() (in module sup3r.bias.bias_transforms)": [[22, "sup3r.bias.bias_transforms.local_linear_bc", false]], "local_presrat_bc() (in module sup3r.bias.bias_transforms)": [[23, "sup3r.bias.bias_transforms.local_presrat_bc", false]], "local_qdm_bc() (in module sup3r.bias.bias_transforms)": [[24, "sup3r.bias.bias_transforms.local_qdm_bc", false]], "log_args() (in module sup3r.preprocessing.utilities)": [[251, "sup3r.preprocessing.utilities.log_args", false]], "log_loss_details() (abstractsinglemodel static method)": [[42, "sup3r.models.abstract.AbstractSingleModel.log_loss_details", false]], "log_loss_details() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.log_loss_details", false]], "log_loss_details() (sup3rcondmom static method)": [[47, "sup3r.models.conditional.Sup3rCondMom.log_loss_details", false]], "log_loss_details() (sup3rgan static method)": [[45, "sup3r.models.base.Sup3rGan.log_loss_details", false]], "log_loss_details() (sup3rgandc static method)": [[49, "sup3r.models.dc.Sup3rGanDC.log_loss_details", false]], "log_queue_info() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.log_queue_info", false]], "log_queue_info() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.log_queue_info", false]], "log_queue_info() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.log_queue_info", false]], "log_queue_info() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.log_queue_info", false]], "log_queue_info() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.log_queue_info", false]], "log_queue_info() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.log_queue_info", false]], "log_queue_info() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.log_queue_info", false]], "log_queue_info() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.log_queue_info", false]], "log_queue_info() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.log_queue_info", false]], "log_queue_info() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.log_queue_info", false]], "log_queue_info() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.log_queue_info", false]], "log_queue_info() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.log_queue_info", false]], "log_queue_info() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.log_queue_info", false]], "log_queue_info() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.log_queue_info", false]], "log_queue_info() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.log_queue_info", false]], "log_queue_info() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.log_queue_info", false]], "log_queue_info() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.log_queue_info", false]], "log_queue_info() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.log_queue_info", false]], "log_queue_info() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.log_queue_info", false]], "log_queue_info() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.log_queue_info", false]], "log_queue_info() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.log_queue_info", false]], "log_queue_info() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.log_queue_info", false]], "log_queue_info() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.log_queue_info", false]], "low_res (abstractbatchqueue.batch attribute)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.Batch.low_res", false]], "low_res (batchhandler.batch attribute)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.Batch.low_res", false]], "low_res (batchhandlercc.batch attribute)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.Batch.low_res", false]], "low_res (batchhandlerdc.batch attribute)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.Batch.low_res", false]], "low_res (batchhandlermom1.batch attribute)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.Batch.low_res", false]], "low_res (batchhandlermom1.conditionalbatch attribute)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.ConditionalBatch.low_res", false]], "low_res (batchhandlermom1sf.batch attribute)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.Batch.low_res", false]], "low_res (batchhandlermom1sf.conditionalbatch attribute)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.ConditionalBatch.low_res", false]], "low_res (batchhandlermom2.batch attribute)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.Batch.low_res", false]], "low_res (batchhandlermom2.conditionalbatch attribute)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.ConditionalBatch.low_res", false]], "low_res (batchhandlermom2sep.batch attribute)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.Batch.low_res", false]], "low_res (batchhandlermom2sep.conditionalbatch attribute)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.ConditionalBatch.low_res", false]], "low_res (batchhandlermom2sepsf.batch attribute)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.Batch.low_res", false]], "low_res (batchhandlermom2sepsf.conditionalbatch attribute)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.ConditionalBatch.low_res", false]], "low_res (batchhandlertestercc.batch attribute)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.Batch.low_res", false]], "low_res (batchhandlertesterdc.batch attribute)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.Batch.low_res", false]], "low_res (batchqueuedc.batch attribute)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.Batch.low_res", false]], "low_res (conditionalbatchqueue.batch attribute)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.Batch.low_res", false]], "low_res (conditionalbatchqueue.conditionalbatch attribute)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.ConditionalBatch.low_res", false]], "low_res (dualbatchhandler.batch attribute)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.Batch.low_res", false]], "low_res (dualbatchqueue.batch attribute)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.Batch.low_res", false]], "low_res (queuemom1.batch attribute)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.Batch.low_res", false]], "low_res (queuemom1.conditionalbatch attribute)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.ConditionalBatch.low_res", false]], "low_res (queuemom1sf.batch attribute)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.Batch.low_res", false]], "low_res (queuemom1sf.conditionalbatch attribute)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.ConditionalBatch.low_res", false]], "low_res (queuemom2.batch attribute)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.Batch.low_res", false]], "low_res (queuemom2.conditionalbatch attribute)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.ConditionalBatch.low_res", false]], "low_res (queuemom2sep.batch attribute)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.Batch.low_res", false]], "low_res (queuemom2sep.conditionalbatch attribute)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.ConditionalBatch.low_res", false]], "low_res (queuemom2sepsf.batch attribute)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.Batch.low_res", false]], "low_res (queuemom2sepsf.conditionalbatch attribute)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.ConditionalBatch.low_res", false]], "low_res (queuemom2sf.batch attribute)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.Batch.low_res", false]], "low_res (queuemom2sf.conditionalbatch attribute)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.ConditionalBatch.low_res", false]], "low_res (singlebatchqueue.batch attribute)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.Batch.low_res", false]], "low_res (valbatchqueuedc.batch attribute)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.Batch.low_res", false]], "lower() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.lower", false]], "lower() (modulename method)": [[282, "sup3r.utilities.ModuleName.lower", false]], "lower_names() (in module sup3r.preprocessing.utilities)": [[252, "sup3r.preprocessing.utilities.lower_names", false]], "lowered() (in module sup3r.preprocessing.utilities)": [[253, "sup3r.preprocessing.utilities.lowered", false]], "lowresloss (class in sup3r.utilities.loss_metrics)": [[293, "sup3r.utilities.loss_metrics.LowResLoss", false]], "lr_features (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.lr_features", false]], "lr_features (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.lr_features", false]], "lr_features (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.lr_features", false]], "lr_features (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.lr_features", false]], "lr_features (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.lr_features", false]], "lr_features (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.lr_features", false]], "lr_features (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.lr_features", false]], "lr_features (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.lr_features", false]], "lr_features (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.lr_features", false]], "lr_features (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.lr_features", false]], "lr_only_features (dualsampler property)": [[228, "sup3r.preprocessing.samplers.dual.DualSampler.lr_only_features", false]], "lr_only_features (dualsamplercc property)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.lr_only_features", false]], "lr_only_features (dummysampler property)": [[314, "sup3r.utilities.pytest.helpers.DummySampler.lr_only_features", false]], "lr_only_features (sampler property)": [[222, "sup3r.preprocessing.samplers.base.Sampler.lr_only_features", false]], "lr_only_features (samplerdc property)": [[226, "sup3r.preprocessing.samplers.dc.SamplerDC.lr_only_features", false]], "lr_only_features (samplertester property)": [[315, "sup3r.utilities.pytest.helpers.SamplerTester.lr_only_features", false]], "lr_shape (abstractbatchqueue property)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.lr_shape", false]], "lr_shape (baseexorasterizer property)": [[213, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.lr_shape", false]], "lr_shape (batchhandler property)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.lr_shape", false]], "lr_shape (batchhandlercc property)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.lr_shape", false]], "lr_shape (batchhandlerdc property)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.lr_shape", false]], "lr_shape (batchhandlermom1 property)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.lr_shape", false]], "lr_shape (batchhandlermom1sf property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.lr_shape", false]], "lr_shape (batchhandlermom2 property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.lr_shape", false]], "lr_shape (batchhandlermom2sep property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.lr_shape", false]], "lr_shape (batchhandlermom2sepsf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.lr_shape", false]], "lr_shape (batchhandlertestercc property)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.lr_shape", false]], "lr_shape (batchhandlertesterdc property)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.lr_shape", false]], "lr_shape (batchqueuedc property)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.lr_shape", false]], "lr_shape (conditionalbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.lr_shape", false]], "lr_shape (dualbatchhandler property)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.lr_shape", false]], "lr_shape (dualbatchqueue property)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.lr_shape", false]], "lr_shape (exorasterizer property)": [[214, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.lr_shape", false]], "lr_shape (exorasterizerh5 property)": [[215, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5.lr_shape", false]], "lr_shape (exorasterizernc property)": [[216, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC.lr_shape", false]], "lr_shape (queuemom1 property)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.lr_shape", false]], "lr_shape (queuemom1sf property)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.lr_shape", false]], "lr_shape (queuemom2 property)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.lr_shape", false]], "lr_shape (queuemom2sep property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.lr_shape", false]], "lr_shape (queuemom2sepsf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.lr_shape", false]], "lr_shape (queuemom2sf property)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.lr_shape", false]], "lr_shape (singlebatchqueue property)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.lr_shape", false]], "lr_shape (szarasterizer property)": [[217, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.lr_shape", false]], "lr_shape (valbatchqueuedc property)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.lr_shape", false]], "lstrip() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.lstrip", false]], "lstrip() (modulename method)": [[282, "sup3r.utilities.ModuleName.lstrip", false]], "make_collect_chunks() (in module sup3r.utilities.pytest.helpers)": [[317, "sup3r.utilities.pytest.helpers.make_collect_chunks", false]], "make_fake_cs_ratio_files() (in module sup3r.utilities.pytest.helpers)": [[318, "sup3r.utilities.pytest.helpers.make_fake_cs_ratio_files", false]], "make_fake_dset() (in module sup3r.utilities.pytest.helpers)": [[319, "sup3r.utilities.pytest.helpers.make_fake_dset", false]], "make_fake_h5_chunks() (in module sup3r.utilities.pytest.helpers)": [[320, "sup3r.utilities.pytest.helpers.make_fake_h5_chunks", false]], "make_fake_nc_file() (in module sup3r.utilities.pytest.helpers)": [[321, "sup3r.utilities.pytest.helpers.make_fake_nc_file", false]], "make_fake_tif() (in module sup3r.utilities.pytest.helpers)": [[322, "sup3r.utilities.pytest.helpers.make_fake_tif", false]], "make_mask() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.make_mask", false]], "make_mask() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.make_mask", false]], "make_mask() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.make_mask", false]], "make_mask() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.make_mask", false]], "make_mask() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.make_mask", false]], "make_mask() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.make_mask", false]], "make_mask() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.make_mask", false]], "make_mask() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.make_mask", false]], "make_mask() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.make_mask", false]], "make_mask() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.make_mask", false]], "make_mask() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.make_mask", false]], "make_mask() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.make_mask", false]], "make_output() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.make_output", false]], "make_output() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.make_output", false]], "make_output() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.make_output", false]], "make_output() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.make_output", false]], "make_output() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.make_output", false]], "make_output() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.make_output", false]], "make_output() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.make_output", false]], "make_output() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.make_output", false]], "make_output() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.make_output", false]], "make_output() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.make_output", false]], "make_output() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.make_output", false]], "make_output() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.make_output", false]], "make_path() (slurmmanager static method)": [[285, "sup3r.utilities.cli.SlurmManager.make_path", false]], "make_sh() (slurmmanager static method)": [[285, "sup3r.utilities.cli.SlurmManager.make_sh", false]], "make_time_index_from_kws() (in module sup3r.preprocessing.utilities)": [[254, "sup3r.preprocessing.utilities.make_time_index_from_kws", false]], "make_yearly_file() (eradownloader class method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.make_yearly_file", false]], "make_yearly_var_file() (eradownloader class method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.make_yearly_var_file", false]], "maketrans() (dimension static method)": [[206, "sup3r.preprocessing.names.Dimension.maketrans", false]], "maketrans() (modulename static method)": [[282, "sup3r.utilities.ModuleName.maketrans", false]], "map_new_name() (basederiver method)": [[166, "sup3r.preprocessing.derivers.base.BaseDeriver.map_new_name", false]], "map_new_name() (dailydatahandler method)": [[153, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.map_new_name", false]], "map_new_name() (datahandler method)": [[154, "sup3r.preprocessing.data_handlers.base.DataHandler.map_new_name", false]], "map_new_name() (datahandlerh5solarcc method)": [[155, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.map_new_name", false]], "map_new_name() (datahandlerh5windcc method)": [[156, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.map_new_name", false]], "map_new_name() (datahandlerncforcc method)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.map_new_name", false]], "map_new_name() (datahandlerncforccwithpowerlaw method)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.map_new_name", false]], "map_new_name() (deriver method)": [[167, "sup3r.preprocessing.derivers.base.Deriver.map_new_name", false]], "mask (batchhandlermom1.conditionalbatch attribute)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.ConditionalBatch.mask", false]], "mask (batchhandlermom1sf.conditionalbatch attribute)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.ConditionalBatch.mask", false]], "mask (batchhandlermom2.conditionalbatch attribute)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.ConditionalBatch.mask", false]], "mask (batchhandlermom2sep.conditionalbatch attribute)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.ConditionalBatch.mask", false]], "mask (batchhandlermom2sepsf.conditionalbatch attribute)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.ConditionalBatch.mask", false]], "mask (conditionalbatchqueue.conditionalbatch attribute)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.ConditionalBatch.mask", false]], "mask (queuemom1.conditionalbatch attribute)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.ConditionalBatch.mask", false]], "mask (queuemom1sf.conditionalbatch attribute)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.ConditionalBatch.mask", false]], "mask (queuemom2.conditionalbatch attribute)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.ConditionalBatch.mask", false]], "mask (queuemom2sep.conditionalbatch attribute)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.ConditionalBatch.mask", false]], "mask (queuemom2sepsf.conditionalbatch attribute)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.ConditionalBatch.mask", false]], "mask (queuemom2sf.conditionalbatch attribute)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.ConditionalBatch.mask", false]], "mask (vortexmeanprepper property)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.mask", false]], "materialderivativeloss (class in sup3r.utilities.loss_metrics)": [[294, "sup3r.utilities.loss_metrics.MaterialDerivativeLoss", false]], "mean() (sup3rdataset method)": [[104, "sup3r.preprocessing.base.Sup3rDataset.mean", false]], "mean() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.mean", false]], "means (abstractsinglemodel property)": [[42, "sup3r.models.abstract.AbstractSingleModel.means", false]], "means (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.means", false]], "means (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.means", false]], "means (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.means", false]], "means (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.means", false]], "means (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.means", false]], "means (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.means", false]], "means (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.means", false]], "meta (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.meta", false]], "meta (dataretrievalbase property)": [[7, "sup3r.bias.base.DataRetrievalBase.meta", false]], "meta (forwardpass property)": [[66, "sup3r.pipeline.forward_pass.ForwardPass.meta", false]], "meta (forwardpassstrategy property)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.meta", false]], "meta (linearcorrection property)": [[9, "sup3r.bias.bias_calc.LinearCorrection.meta", false]], "meta (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.meta", false]], "meta (monthlylinearcorrection property)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.meta", false]], "meta (monthlyscalarcorrection property)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.meta", false]], "meta (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.meta", false]], "meta (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.meta", false]], "meta (presrat property)": [[30, "sup3r.bias.presrat.PresRat.meta", false]], "meta (quantiledeltamappingcorrection property)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.meta", false]], "meta (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.meta", false]], "meta (scalarcorrection property)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.meta", false]], "meta (skillassessment property)": [[13, "sup3r.bias.bias_calc.SkillAssessment.meta", false]], "meta (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.meta", false]], "meta (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.meta", false]], "meta (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.meta", false]], "meta (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.meta", false]], "meta (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.meta", false]], "meta (sup3rx property)": [[101, "sup3r.preprocessing.accessor.Sup3rX.meta", false]], "meta (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.meta", false]], "meta (vortexmeanprepper property)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.meta", false]], "mmdloss (class in sup3r.utilities.loss_metrics)": [[295, "sup3r.utilities.loss_metrics.MmdLoss", false]], "mmdmseloss (class in sup3r.utilities.loss_metrics)": [[296, "sup3r.utilities.loss_metrics.MmdMseLoss", false]], "model_params (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.model_params", false]], "model_params (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.model_params", false]], "model_params (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.model_params", false]], "model_params (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.model_params", false]], "model_params (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.model_params", false]], "model_params (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.model_params", false]], "model_params (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.model_params", false]], "model_params (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.model_params", false]], "model_params (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.model_params", false]], "model_params (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.model_params", false]], "models (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.models", false]], "models (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.models", false]], "models (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.models", false]], "module": [[0, "module-sup3r", false], [1, "module-sup3r.batch", false], [2, "module-sup3r.batch.batch_cli", false], [3, "module-sup3r.bias", false], [4, "module-sup3r.bias.abstract", false], [6, "module-sup3r.bias.base", false], [8, "module-sup3r.bias.bias_calc", false], [14, "module-sup3r.bias.bias_calc_cli", false], [17, "module-sup3r.bias.bias_calc_vortex", false], [20, "module-sup3r.bias.bias_transforms", false], [26, "module-sup3r.bias.mixins", false], [29, "module-sup3r.bias.presrat", false], [31, "module-sup3r.bias.qdm", false], [33, "module-sup3r.bias.utilities", false], [38, "module-sup3r.cli", false], [39, "module-sup3r.models", false], [40, "module-sup3r.models.abstract", false], [44, "module-sup3r.models.base", false], [46, "module-sup3r.models.conditional", false], [48, "module-sup3r.models.dc", false], [50, "module-sup3r.models.linear", false], [52, "module-sup3r.models.multi_step", false], [56, "module-sup3r.models.solar_cc", false], [58, "module-sup3r.models.surface", false], [60, "module-sup3r.models.utilities", false], [64, "module-sup3r.pipeline", false], [65, "module-sup3r.pipeline.forward_pass", false], [67, "module-sup3r.pipeline.forward_pass_cli", false], [70, "module-sup3r.pipeline.pipeline_cli", false], [71, "module-sup3r.pipeline.slicer", false], [73, "module-sup3r.pipeline.strategy", false], [76, "module-sup3r.pipeline.utilities", false], [79, "module-sup3r.postprocessing", false], [80, "module-sup3r.postprocessing.collectors", false], [81, "module-sup3r.postprocessing.collectors.base", false], [83, "module-sup3r.postprocessing.collectors.h5", false], [85, "module-sup3r.postprocessing.collectors.nc", false], [87, "module-sup3r.postprocessing.data_collect_cli", false], [90, "module-sup3r.postprocessing.writers", false], [91, "module-sup3r.postprocessing.writers.base", false], [95, "module-sup3r.postprocessing.writers.h5", false], [97, "module-sup3r.postprocessing.writers.nc", false], [99, "module-sup3r.preprocessing", false], [100, "module-sup3r.preprocessing.accessor", false], [102, "module-sup3r.preprocessing.base", false], [106, "module-sup3r.preprocessing.batch_handlers", false], [107, "module-sup3r.preprocessing.batch_handlers.dc", false], [109, "module-sup3r.preprocessing.batch_handlers.factory", false], [120, "module-sup3r.preprocessing.batch_queues", false], [121, "module-sup3r.preprocessing.batch_queues.abstract", false], [123, "module-sup3r.preprocessing.batch_queues.base", false], [125, "module-sup3r.preprocessing.batch_queues.conditional", false], [133, "module-sup3r.preprocessing.batch_queues.dc", false], [136, "module-sup3r.preprocessing.batch_queues.dual", false], [138, "module-sup3r.preprocessing.batch_queues.utilities", false], [142, "module-sup3r.preprocessing.cachers", false], [143, "module-sup3r.preprocessing.cachers.base", false], [145, "module-sup3r.preprocessing.cachers.utilities", false], [146, "module-sup3r.preprocessing.collections", false], [147, "module-sup3r.preprocessing.collections.base", false], [149, "module-sup3r.preprocessing.collections.stats", false], [151, "module-sup3r.preprocessing.data_handlers", false], [152, "module-sup3r.preprocessing.data_handlers.base", false], [157, "module-sup3r.preprocessing.data_handlers.exo", false], [161, "module-sup3r.preprocessing.data_handlers.nc_cc", false], [164, "module-sup3r.preprocessing.derivers", false], [165, "module-sup3r.preprocessing.derivers.base", false], [168, "module-sup3r.preprocessing.derivers.methods", false], [188, "module-sup3r.preprocessing.derivers.utilities", false], [194, "module-sup3r.preprocessing.loaders", false], [196, "module-sup3r.preprocessing.loaders.base", false], [198, "module-sup3r.preprocessing.loaders.h5", false], [200, "module-sup3r.preprocessing.loaders.nc", false], [202, "module-sup3r.preprocessing.loaders.utilities", false], [205, "module-sup3r.preprocessing.names", false], [207, "module-sup3r.preprocessing.rasterizers", false], [208, "module-sup3r.preprocessing.rasterizers.base", false], [210, "module-sup3r.preprocessing.rasterizers.dual", false], [212, "module-sup3r.preprocessing.rasterizers.exo", false], [218, "module-sup3r.preprocessing.rasterizers.extended", false], [220, "module-sup3r.preprocessing.samplers", false], [221, "module-sup3r.preprocessing.samplers.base", false], [223, "module-sup3r.preprocessing.samplers.cc", false], [225, "module-sup3r.preprocessing.samplers.dc", false], [227, "module-sup3r.preprocessing.samplers.dual", false], [229, "module-sup3r.preprocessing.samplers.utilities", false], [237, "module-sup3r.preprocessing.utilities", false], [262, "module-sup3r.qa", false], [263, "module-sup3r.qa.qa", false], [265, "module-sup3r.qa.qa_cli", false], [266, "module-sup3r.qa.utilities", false], [275, "module-sup3r.solar", false], [276, "module-sup3r.solar.solar", false], [278, "module-sup3r.solar.solar_cli", false], [281, "module-sup3r.utilities", false], [283, "module-sup3r.utilities.cli", false], [286, "module-sup3r.utilities.era_downloader", false], [288, "module-sup3r.utilities.interpolation", false], [290, "module-sup3r.utilities.loss_metrics", false], [307, "module-sup3r.utilities.pytest", false], [308, "module-sup3r.utilities.pytest.helpers", false], [324, "module-sup3r.utilities.utilities", false]], "modulename (class in sup3r.utilities)": [[282, "sup3r.utilities.ModuleName", false]], "monthly_file (eradownloader property)": [[287, "sup3r.utilities.era_downloader.EraDownloader.monthly_file", false]], "monthly_local_linear_bc() (in module sup3r.bias.bias_transforms)": [[25, "sup3r.bias.bias_transforms.monthly_local_linear_bc", false]], "monthlylinearcorrection (class in sup3r.bias.bias_calc)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection", false]], "monthlyscalarcorrection (class in sup3r.bias.bias_calc)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection", false]], "mro() (sup3rmeta method)": [[105, "sup3r.preprocessing.base.Sup3rMeta.mro", false]], "mseexploss (class in sup3r.utilities.loss_metrics)": [[297, "sup3r.utilities.loss_metrics.MseExpLoss", false]], "multistepgan (class in sup3r.models.multi_step)": [[53, "sup3r.models.multi_step.MultiStepGan", false]], "multistepsurfacemetgan (class in sup3r.models.multi_step)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan", false]], "n_chunks (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.n_chunks", false]], "n_spatial_chunks (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.n_spatial_chunks", false]], "n_time_chunks (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.n_time_chunks", false]], "name (sup3rx property)": [[101, "sup3r.preprocessing.accessor.Sup3rX.name", false]], "nn (baseexorasterizer property)": [[213, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.nn", false]], "nn (exorasterizer property)": [[214, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.nn", false]], "nn (exorasterizerh5 property)": [[215, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5.nn", false]], "nn (exorasterizernc property)": [[216, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC.nn", false]], "nn (szarasterizer property)": [[217, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.nn", false]], "nn_fill_array() (in module sup3r.utilities.utilities)": [[327, "sup3r.utilities.utilities.nn_fill_array", false]], "no_overlap() (basederiver method)": [[166, "sup3r.preprocessing.derivers.base.BaseDeriver.no_overlap", false]], "no_overlap() (dailydatahandler method)": [[153, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.no_overlap", false]], "no_overlap() (datahandler method)": [[154, "sup3r.preprocessing.data_handlers.base.DataHandler.no_overlap", false]], "no_overlap() (datahandlerh5solarcc method)": [[155, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.no_overlap", false]], "no_overlap() (datahandlerh5windcc method)": [[156, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.no_overlap", false]], "no_overlap() (datahandlerncforcc method)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.no_overlap", false]], "no_overlap() (datahandlerncforccwithpowerlaw method)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.no_overlap", false]], "no_overlap() (deriver method)": [[167, "sup3r.preprocessing.derivers.base.Deriver.no_overlap", false]], "node_chunks (forwardpassstrategy property)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.node_chunks", false]], "node_finished() (forwardpassstrategy method)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.node_finished", false]], "norm_input() (abstractsinglemodel method)": [[42, "sup3r.models.abstract.AbstractSingleModel.norm_input", false]], "norm_input() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.norm_input", false]], "norm_input() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.norm_input", false]], "norm_input() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.norm_input", false]], "norm_input() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.norm_input", false]], "normalize() (statscollection method)": [[150, "sup3r.preprocessing.collections.stats.StatsCollection.normalize", false]], "normalize() (sup3rdataset method)": [[104, "sup3r.preprocessing.base.Sup3rDataset.normalize", false]], "normalize() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.normalize", false]], "nsrdb_reduce_daily_data() (in module sup3r.preprocessing.samplers.utilities)": [[231, "sup3r.preprocessing.samplers.utilities.nsrdb_reduce_daily_data", false]], "nsrdb_sub_daily_sampler() (in module sup3r.preprocessing.samplers.utilities)": [[232, "sup3r.preprocessing.samplers.utilities.nsrdb_sub_daily_sampler", false]], "nsrdb_tslice (solar property)": [[277, "sup3r.solar.solar.Solar.nsrdb_tslice", false]], "nt (linearcorrection attribute)": [[9, "sup3r.bias.bias_calc.LinearCorrection.NT", false]], "nt (monthlylinearcorrection attribute)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.NT", false]], "nt (monthlyscalarcorrection attribute)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.NT", false]], "nt (scalarcorrection attribute)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.NT", false]], "nt (skillassessment attribute)": [[13, "sup3r.bias.bias_calc.SkillAssessment.NT", false]], "numpy_if_tensor() (in module sup3r.preprocessing.utilities)": [[255, "sup3r.preprocessing.utilities.numpy_if_tensor", false]], "open_dataset() (rexoutputs method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.open_dataset", false]], "open_file() (rexoutputs class method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.open_file", false]], "optimizer (abstractsinglemodel property)": [[42, "sup3r.models.abstract.AbstractSingleModel.optimizer", false]], "optimizer (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.optimizer", false]], "optimizer (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.optimizer", false]], "optimizer (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.optimizer", false]], "optimizer (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.optimizer", false]], "optimizer_disc (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.optimizer_disc", false]], "optimizer_disc (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.optimizer_disc", false]], "optimizer_disc (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.optimizer_disc", false]], "order() (dimension class method)": [[206, "sup3r.preprocessing.names.Dimension.order", false]], "ordered() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.ordered", false]], "ordered_array() (in module sup3r.preprocessing.utilities)": [[256, "sup3r.preprocessing.utilities.ordered_array", false]], "ordered_dims() (in module sup3r.preprocessing.utilities)": [[257, "sup3r.preprocessing.utilities.ordered_dims", false]], "out_features (vortexmeanprepper property)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.out_features", false]], "out_files (forwardpassstrategy property)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.out_files", false]], "out_of_bounds (solar property)": [[277, "sup3r.solar.solar.Solar.out_of_bounds", false]], "output (batchhandlermom1.conditionalbatch attribute)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.ConditionalBatch.output", false]], "output (batchhandlermom1sf.conditionalbatch attribute)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.ConditionalBatch.output", false]], "output (batchhandlermom2.conditionalbatch attribute)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.ConditionalBatch.output", false]], "output (batchhandlermom2sep.conditionalbatch attribute)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.ConditionalBatch.output", false]], "output (batchhandlermom2sepsf.conditionalbatch attribute)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.ConditionalBatch.output", false]], "output (conditionalbatchqueue.conditionalbatch attribute)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.ConditionalBatch.output", false]], "output (queuemom1.conditionalbatch attribute)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.ConditionalBatch.output", false]], "output (queuemom1sf.conditionalbatch attribute)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.ConditionalBatch.output", false]], "output (queuemom2.conditionalbatch attribute)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.ConditionalBatch.output", false]], "output (queuemom2sep.conditionalbatch attribute)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.ConditionalBatch.output", false]], "output (queuemom2sepsf.conditionalbatch attribute)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.ConditionalBatch.output", false]], "output (queuemom2sf.conditionalbatch attribute)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.ConditionalBatch.output", false]], "output_files (vortexmeanprepper property)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.output_files", false]], "output_names (sup3rqa property)": [[264, "sup3r.qa.qa.Sup3rQa.output_names", false]], "output_resolution (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.output_resolution", false]], "output_resolution (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.output_resolution", false]], "output_resolution (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.output_resolution", false]], "output_resolution (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.output_resolution", false]], "output_resolution (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.output_resolution", false]], "output_resolution (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.output_resolution", false]], "output_resolution (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.output_resolution", false]], "output_resolution (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.output_resolution", false]], "output_resolution (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.output_resolution", false]], "output_resolution (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.output_resolution", false]], "output_type (sup3rqa property)": [[264, "sup3r.qa.qa.Sup3rQa.output_type", false]], "outputhandler (class in sup3r.postprocessing.writers.base)": [[92, "sup3r.postprocessing.writers.base.OutputHandler", false]], "outputhandlerh5 (class in sup3r.postprocessing.writers.h5)": [[96, "sup3r.postprocessing.writers.h5.OutputHandlerH5", false]], "outputhandlernc (class in sup3r.postprocessing.writers.nc)": [[98, "sup3r.postprocessing.writers.nc.OutputHandlerNC", false]], "outputmixin (class in sup3r.postprocessing.writers.base)": [[93, "sup3r.postprocessing.writers.base.OutputMixin", false]], "package (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.package", false]], "pad_lat_lon() (outputhandler static method)": [[92, "sup3r.postprocessing.writers.base.OutputHandler.pad_lat_lon", false]], "pad_lat_lon() (outputhandlerh5 static method)": [[96, "sup3r.postprocessing.writers.h5.OutputHandlerH5.pad_lat_lon", false]], "pad_lat_lon() (outputhandlernc static method)": [[98, "sup3r.postprocessing.writers.nc.OutputHandlerNC.pad_lat_lon", false]], "pad_source_data() (forwardpass method)": [[66, "sup3r.pipeline.forward_pass.ForwardPass.pad_source_data", false]], "parse_chunks() (cacher static method)": [[144, "sup3r.preprocessing.cachers.base.Cacher.parse_chunks", false]], "parse_ellipsis() (in module sup3r.preprocessing.utilities)": [[258, "sup3r.preprocessing.utilities.parse_ellipsis", false]], "parse_feature() (in module sup3r.preprocessing.derivers.utilities)": [[191, "sup3r.preprocessing.derivers.utilities.parse_feature", false]], "parse_features() (in module sup3r.preprocessing.utilities)": [[259, "sup3r.preprocessing.utilities.parse_features", false]], "parse_keys() (in module sup3r.preprocessing.utilities)": [[260, "sup3r.preprocessing.utilities.parse_keys", false]], "parse_queue_str() (slurmmanager class method)": [[285, "sup3r.utilities.cli.SlurmManager.parse_queue_str", false]], "parse_to_list() (in module sup3r.preprocessing.utilities)": [[261, "sup3r.preprocessing.utilities.parse_to_list", false]], "partition() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.partition", false]], "partition() (modulename method)": [[282, "sup3r.utilities.ModuleName.partition", false]], "pd_date_range() (in module sup3r.utilities.utilities)": [[328, "sup3r.utilities.utilities.pd_date_range", false]], "percentiles (skillassessment attribute)": [[13, "sup3r.bias.bias_calc.SkillAssessment.PERCENTILES", false]], "point_loss_hours (solarcc attribute)": [[57, "sup3r.models.solar_cc.SolarCC.POINT_LOSS_HOURS", false]], "pop() (exodata method)": [[158, "sup3r.preprocessing.data_handlers.exo.ExoData.pop", false]], "pop() (singleexodatastep method)": [[160, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.pop", false]], "popitem() (exodata method)": [[158, "sup3r.preprocessing.data_handlers.exo.ExoData.popitem", false]], "popitem() (singleexodatastep method)": [[160, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.popitem", false]], "post_init_log() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.post_init_log", false]], "post_init_log() (basederiver method)": [[166, "sup3r.preprocessing.derivers.base.BaseDeriver.post_init_log", false]], "post_init_log() (baseloader method)": [[197, "sup3r.preprocessing.loaders.base.BaseLoader.post_init_log", false]], "post_init_log() (baserasterizer method)": [[209, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.post_init_log", false]], "post_init_log() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.post_init_log", false]], "post_init_log() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.post_init_log", false]], "post_init_log() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.post_init_log", false]], "post_init_log() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.post_init_log", false]], "post_init_log() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.post_init_log", false]], "post_init_log() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.post_init_log", false]], "post_init_log() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.post_init_log", false]], "post_init_log() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.post_init_log", false]], "post_init_log() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.post_init_log", false]], "post_init_log() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.post_init_log", false]], "post_init_log() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.post_init_log", false]], "post_init_log() (cacher method)": [[144, "sup3r.preprocessing.cachers.base.Cacher.post_init_log", false]], "post_init_log() (collection method)": [[148, "sup3r.preprocessing.collections.base.Collection.post_init_log", false]], "post_init_log() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.post_init_log", false]], "post_init_log() (container method)": [[103, "sup3r.preprocessing.base.Container.post_init_log", false]], "post_init_log() (dailydatahandler method)": [[153, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.post_init_log", false]], "post_init_log() (datahandler method)": [[154, "sup3r.preprocessing.data_handlers.base.DataHandler.post_init_log", false]], "post_init_log() (datahandlerh5solarcc method)": [[155, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.post_init_log", false]], "post_init_log() (datahandlerh5windcc method)": [[156, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.post_init_log", false]], "post_init_log() (datahandlerncforcc method)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.post_init_log", false]], "post_init_log() (datahandlerncforccwithpowerlaw method)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.post_init_log", false]], "post_init_log() (deriver method)": [[167, "sup3r.preprocessing.derivers.base.Deriver.post_init_log", false]], "post_init_log() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.post_init_log", false]], "post_init_log() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.post_init_log", false]], "post_init_log() (dualrasterizer method)": [[211, "sup3r.preprocessing.rasterizers.dual.DualRasterizer.post_init_log", false]], "post_init_log() (dualsampler method)": [[228, "sup3r.preprocessing.samplers.dual.DualSampler.post_init_log", false]], "post_init_log() (dualsamplercc method)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.post_init_log", false]], "post_init_log() (dummydata method)": [[313, "sup3r.utilities.pytest.helpers.DummyData.post_init_log", false]], "post_init_log() (dummysampler method)": [[314, "sup3r.utilities.pytest.helpers.DummySampler.post_init_log", false]], "post_init_log() (loaderh5 method)": [[199, "sup3r.preprocessing.loaders.h5.LoaderH5.post_init_log", false]], "post_init_log() (loadernc method)": [[201, "sup3r.preprocessing.loaders.nc.LoaderNC.post_init_log", false]], "post_init_log() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.post_init_log", false]], "post_init_log() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.post_init_log", false]], "post_init_log() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.post_init_log", false]], "post_init_log() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.post_init_log", false]], "post_init_log() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.post_init_log", false]], "post_init_log() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.post_init_log", false]], "post_init_log() (rasterizer method)": [[219, "sup3r.preprocessing.rasterizers.extended.Rasterizer.post_init_log", false]], "post_init_log() (sampler method)": [[222, "sup3r.preprocessing.samplers.base.Sampler.post_init_log", false]], "post_init_log() (samplerdc method)": [[226, "sup3r.preprocessing.samplers.dc.SamplerDC.post_init_log", false]], "post_init_log() (samplertester method)": [[315, "sup3r.utilities.pytest.helpers.SamplerTester.post_init_log", false]], "post_init_log() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.post_init_log", false]], "post_init_log() (statscollection method)": [[150, "sup3r.preprocessing.collections.stats.StatsCollection.post_init_log", false]], "post_init_log() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.post_init_log", false]], "post_proc() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.post_proc", false]], "post_proc() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.post_proc", false]], "post_proc() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.post_proc", false]], "post_proc() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.post_proc", false]], "post_proc() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.post_proc", false]], "post_proc() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.post_proc", false]], "post_proc() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.post_proc", false]], "post_proc() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.post_proc", false]], "post_proc() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.post_proc", false]], "post_proc() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.post_proc", false]], "post_proc() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.post_proc", false]], "post_proc() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.post_proc", false]], "post_proc() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.post_proc", false]], "post_proc() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.post_proc", false]], "post_proc() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.post_proc", false]], "post_proc() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.post_proc", false]], "post_proc() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.post_proc", false]], "post_proc() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.post_proc", false]], "post_proc() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.post_proc", false]], "post_proc() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.post_proc", false]], "post_proc() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.post_proc", false]], "post_proc() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.post_proc", false]], "post_proc() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.post_proc", false]], "pre_load() (dataretrievalbase method)": [[7, "sup3r.bias.base.DataRetrievalBase.pre_load", false]], "pre_load() (linearcorrection method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.pre_load", false]], "pre_load() (monthlylinearcorrection method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.pre_load", false]], "pre_load() (monthlyscalarcorrection method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.pre_load", false]], "pre_load() (presrat method)": [[30, "sup3r.bias.presrat.PresRat.pre_load", false]], "pre_load() (quantiledeltamappingcorrection method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.pre_load", false]], "pre_load() (scalarcorrection method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.pre_load", false]], "pre_load() (skillassessment method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.pre_load", false]], "preflight() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.preflight", false]], "preflight() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.preflight", false]], "preflight() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.preflight", false]], "preflight() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.preflight", false]], "preflight() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.preflight", false]], "preflight() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.preflight", false]], "preflight() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.preflight", false]], "preflight() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.preflight", false]], "preflight() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.preflight", false]], "preflight() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.preflight", false]], "preflight() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.preflight", false]], "preflight() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.preflight", false]], "preflight() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.preflight", false]], "preflight() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.preflight", false]], "preflight() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.preflight", false]], "preflight() (dualsampler method)": [[228, "sup3r.preprocessing.samplers.dual.DualSampler.preflight", false]], "preflight() (dualsamplercc method)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.preflight", false]], "preflight() (dummysampler method)": [[314, "sup3r.utilities.pytest.helpers.DummySampler.preflight", false]], "preflight() (forwardpassstrategy method)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.preflight", false]], "preflight() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.preflight", false]], "preflight() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.preflight", false]], "preflight() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.preflight", false]], "preflight() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.preflight", false]], "preflight() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.preflight", false]], "preflight() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.preflight", false]], "preflight() (sampler method)": [[222, "sup3r.preprocessing.samplers.base.Sampler.preflight", false]], "preflight() (samplerdc method)": [[226, "sup3r.preprocessing.samplers.dc.SamplerDC.preflight", false]], "preflight() (samplertester method)": [[315, "sup3r.utilities.pytest.helpers.SamplerTester.preflight", false]], "preflight() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.preflight", false]], "preflight() (solar method)": [[277, "sup3r.solar.solar.Solar.preflight", false]], "preflight() (solarmultistepgan method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.preflight", false]], "preflight() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.preflight", false]], "preload_sam() (rexoutputs class method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.preload_SAM", false]], "prep_chunk_data() (forwardpassstrategy method)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.prep_chunk_data", false]], "prep_var_lists() (eradownloader method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.prep_var_lists", false]], "preprocess_datasets() (in module sup3r.utilities.utilities)": [[329, "sup3r.utilities.utilities.preprocess_datasets", false]], "pres_div (surfacespatialmetmodel attribute)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.PRES_DIV", false]], "pres_exp (surfacespatialmetmodel attribute)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.PRES_EXP", false]], "presrat (class in sup3r.bias.presrat)": [[30, "sup3r.bias.presrat.PresRat", false]], "pressurewrf (class in sup3r.preprocessing.derivers.methods)": [[173, "sup3r.preprocessing.derivers.methods.PressureWRF", false]], "process_and_combine() (eradownloader method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.process_and_combine", false]], "process_level_file() (eradownloader method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.process_level_file", false]], "process_surface_file() (eradownloader method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.process_surface_file", false]], "profile_to_tensorboard() (abstractsinglemodel method)": [[42, "sup3r.models.abstract.AbstractSingleModel.profile_to_tensorboard", false]], "profile_to_tensorboard() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.profile_to_tensorboard", false]], "profile_to_tensorboard() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.profile_to_tensorboard", false]], "profile_to_tensorboard() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.profile_to_tensorboard", false]], "profile_to_tensorboard() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.profile_to_tensorboard", false]], "profile_to_tensorboard() (tensorboardmixin method)": [[43, "sup3r.models.abstract.TensorboardMixIn.profile_to_tensorboard", false]], "qa() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.qa", false]], "qdm_bc() (in module sup3r.bias.utilities)": [[37, "sup3r.bias.utilities.qdm_bc", false]], "quantiledeltamappingcorrection (class in sup3r.bias.qdm)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection", false]], "query_queue() (slurmmanager class method)": [[285, "sup3r.utilities.cli.SlurmManager.query_queue", false]], "queue (slurmmanager property)": [[285, "sup3r.utilities.cli.SlurmManager.queue", false]], "queue_job_ids (slurmmanager property)": [[285, "sup3r.utilities.cli.SlurmManager.queue_job_ids", false]], "queue_job_names (slurmmanager property)": [[285, "sup3r.utilities.cli.SlurmManager.queue_job_names", false]], "queue_shape (abstractbatchqueue property)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.queue_shape", false]], "queue_shape (batchhandler property)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.queue_shape", false]], "queue_shape (batchhandlercc property)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.queue_shape", false]], "queue_shape (batchhandlerdc property)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.queue_shape", false]], "queue_shape (batchhandlermom1 property)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.queue_shape", false]], "queue_shape (batchhandlermom1sf property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.queue_shape", false]], "queue_shape (batchhandlermom2 property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.queue_shape", false]], "queue_shape (batchhandlermom2sep property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.queue_shape", false]], "queue_shape (batchhandlermom2sepsf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.queue_shape", false]], "queue_shape (batchhandlertestercc property)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.queue_shape", false]], "queue_shape (batchhandlertesterdc property)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.queue_shape", false]], "queue_shape (batchqueuedc property)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.queue_shape", false]], "queue_shape (conditionalbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.queue_shape", false]], "queue_shape (dualbatchhandler property)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.queue_shape", false]], "queue_shape (dualbatchqueue property)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.queue_shape", false]], "queue_shape (queuemom1 property)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.queue_shape", false]], "queue_shape (queuemom1sf property)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.queue_shape", false]], "queue_shape (queuemom2 property)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.queue_shape", false]], "queue_shape (queuemom2sep property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.queue_shape", false]], "queue_shape (queuemom2sepsf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.queue_shape", false]], "queue_shape (queuemom2sf property)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.queue_shape", false]], "queue_shape (singlebatchqueue property)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.queue_shape", false]], "queue_shape (valbatchqueuedc property)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.queue_shape", false]], "queue_thread (abstractbatchqueue property)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.queue_thread", false]], "queue_thread (batchhandler property)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.queue_thread", false]], "queue_thread (batchhandlercc property)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.queue_thread", false]], "queue_thread (batchhandlerdc property)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.queue_thread", false]], "queue_thread (batchhandlermom1 property)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.queue_thread", false]], "queue_thread (batchhandlermom1sf property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.queue_thread", false]], "queue_thread (batchhandlermom2 property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.queue_thread", false]], "queue_thread (batchhandlermom2sep property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.queue_thread", false]], "queue_thread (batchhandlermom2sepsf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.queue_thread", false]], "queue_thread (batchhandlertestercc property)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.queue_thread", false]], "queue_thread (batchhandlertesterdc property)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.queue_thread", false]], "queue_thread (batchqueuedc property)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.queue_thread", false]], "queue_thread (conditionalbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.queue_thread", false]], "queue_thread (dualbatchhandler property)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.queue_thread", false]], "queue_thread (dualbatchqueue property)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.queue_thread", false]], "queue_thread (queuemom1 property)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.queue_thread", false]], "queue_thread (queuemom1sf property)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.queue_thread", false]], "queue_thread (queuemom2 property)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.queue_thread", false]], "queue_thread (queuemom2sep property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.queue_thread", false]], "queue_thread (queuemom2sepsf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.queue_thread", false]], "queue_thread (queuemom2sf property)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.queue_thread", false]], "queue_thread (singlebatchqueue property)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.queue_thread", false]], "queue_thread (valbatchqueuedc property)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.queue_thread", false]], "queuemom1 (class in sup3r.preprocessing.batch_queues.conditional)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1", false]], "queuemom1.batch (class in sup3r.preprocessing.batch_queues.conditional)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.Batch", false]], "queuemom1.conditionalbatch (class in sup3r.preprocessing.batch_queues.conditional)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.ConditionalBatch", false]], "queuemom1sf (class in sup3r.preprocessing.batch_queues.conditional)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF", false]], "queuemom1sf.batch (class in sup3r.preprocessing.batch_queues.conditional)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.Batch", false]], "queuemom1sf.conditionalbatch (class in sup3r.preprocessing.batch_queues.conditional)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.ConditionalBatch", false]], "queuemom2 (class in sup3r.preprocessing.batch_queues.conditional)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2", false]], "queuemom2.batch (class in sup3r.preprocessing.batch_queues.conditional)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.Batch", false]], "queuemom2.conditionalbatch (class in sup3r.preprocessing.batch_queues.conditional)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.ConditionalBatch", false]], "queuemom2sep (class in sup3r.preprocessing.batch_queues.conditional)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep", false]], "queuemom2sep.batch (class in sup3r.preprocessing.batch_queues.conditional)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.Batch", false]], "queuemom2sep.conditionalbatch (class in sup3r.preprocessing.batch_queues.conditional)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.ConditionalBatch", false]], "queuemom2sepsf (class in sup3r.preprocessing.batch_queues.conditional)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF", false]], "queuemom2sepsf.batch (class in sup3r.preprocessing.batch_queues.conditional)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.Batch", false]], "queuemom2sepsf.conditionalbatch (class in sup3r.preprocessing.batch_queues.conditional)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.ConditionalBatch", false]], "queuemom2sf (class in sup3r.preprocessing.batch_queues.conditional)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF", false]], "queuemom2sf.batch (class in sup3r.preprocessing.batch_queues.conditional)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.Batch", false]], "queuemom2sf.conditionalbatch (class in sup3r.preprocessing.batch_queues.conditional)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.ConditionalBatch", false]], "rasterize_data() (baserasterizer method)": [[209, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.rasterize_data", false]], "rasterize_data() (rasterizer method)": [[219, "sup3r.preprocessing.rasterizers.extended.Rasterizer.rasterize_data", false]], "rasterizer (class in sup3r.preprocessing.rasterizers.extended)": [[219, "sup3r.preprocessing.rasterizers.extended.Rasterizer", false]], "reduce_high_res_sub_daily() (dualsamplercc method)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.reduce_high_res_sub_daily", false]], "register() (sup3rmeta method)": [[105, "sup3r.preprocessing.base.Sup3rMeta.register", false]], "release() (slurmmanager method)": [[285, "sup3r.utilities.cli.SlurmManager.release", false]], "removeprefix() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.removeprefix", false]], "removeprefix() (modulename method)": [[282, "sup3r.utilities.ModuleName.removeprefix", false]], "removesuffix() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.removesuffix", false]], "removesuffix() (modulename method)": [[282, "sup3r.utilities.ModuleName.removesuffix", false]], "replace() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.replace", false]], "replace() (modulename method)": [[282, "sup3r.utilities.ModuleName.replace", false]], "res_dsets (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.res_dsets", false]], "resource_datasets (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.resource_datasets", false]], "rewrap() (sup3rdataset method)": [[104, "sup3r.preprocessing.base.Sup3rDataset.rewrap", false]], "rexoutputs (class in sup3r.postprocessing.writers.base)": [[94, "sup3r.postprocessing.writers.base.RexOutputs", false]], "rfind() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.rfind", false]], "rfind() (modulename method)": [[282, "sup3r.utilities.ModuleName.rfind", false]], "rindex() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.rindex", false]], "rindex() (modulename method)": [[282, "sup3r.utilities.ModuleName.rindex", false]], "rjust() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.rjust", false]], "rjust() (modulename method)": [[282, "sup3r.utilities.ModuleName.rjust", false]], "rm() (slurmmanager static method)": [[285, "sup3r.utilities.cli.SlurmManager.rm", false]], "rpartition() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.rpartition", false]], "rpartition() (modulename method)": [[282, "sup3r.utilities.ModuleName.rpartition", false]], "rsplit() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.rsplit", false]], "rsplit() (modulename method)": [[282, "sup3r.utilities.ModuleName.rsplit", false]], "rstrip() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.rstrip", false]], "rstrip() (modulename method)": [[282, "sup3r.utilities.ModuleName.rstrip", false]], "run() (abstractbiascorrection method)": [[5, "sup3r.bias.abstract.AbstractBiasCorrection.run", false]], "run() (biascorrectupdate class method)": [[18, "sup3r.bias.bias_calc_vortex.BiasCorrectUpdate.run", false]], "run() (eradownloader class method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.run", false]], "run() (forwardpass class method)": [[66, "sup3r.pipeline.forward_pass.ForwardPass.run", false]], "run() (linearcorrection method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.run", false]], "run() (monthlylinearcorrection method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.run", false]], "run() (monthlyscalarcorrection method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.run", false]], "run() (presrat method)": [[30, "sup3r.bias.presrat.PresRat.run", false]], "run() (quantiledeltamappingcorrection method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.run", false]], "run() (scalarcorrection method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.run", false]], "run() (skillassessment method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.run", false]], "run() (sup3rqa method)": [[264, "sup3r.qa.qa.Sup3rQa.run", false]], "run() (trainingsession method)": [[61, "sup3r.models.utilities.TrainingSession.run", false]], "run() (vortexmeanprepper class method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.run", false]], "run_attrs (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.run_attrs", false]], "run_chunk() (forwardpass class method)": [[66, "sup3r.pipeline.forward_pass.ForwardPass.run_chunk", false]], "run_for_var() (eradownloader class method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.run_for_var", false]], "run_generator() (forwardpass class method)": [[66, "sup3r.pipeline.forward_pass.ForwardPass.run_generator", false]], "run_gradient_descent() (abstractsinglemodel method)": [[42, "sup3r.models.abstract.AbstractSingleModel.run_gradient_descent", false]], "run_gradient_descent() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.run_gradient_descent", false]], "run_gradient_descent() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.run_gradient_descent", false]], "run_gradient_descent() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.run_gradient_descent", false]], "run_gradient_descent() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.run_gradient_descent", false]], "run_input_checks() (datahandlerncforcc method)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.run_input_checks", false]], "run_input_checks() (datahandlerncforccwithpowerlaw method)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.run_input_checks", false]], "run_month() (eradownloader class method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.run_month", false]], "run_qa() (eradownloader class method)": [[287, "sup3r.utilities.era_downloader.EraDownloader.run_qa", false]], "run_temporal_chunks() (solar class method)": [[277, "sup3r.solar.solar.Solar.run_temporal_chunks", false]], "run_wrap_checks() (datahandlerncforcc method)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.run_wrap_checks", false]], "run_wrap_checks() (datahandlerncforccwithpowerlaw method)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.run_wrap_checks", false]], "running (abstractbatchqueue property)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.running", false]], "running (batchhandler property)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.running", false]], "running (batchhandlercc property)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.running", false]], "running (batchhandlerdc property)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.running", false]], "running (batchhandlermom1 property)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.running", false]], "running (batchhandlermom1sf property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.running", false]], "running (batchhandlermom2 property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.running", false]], "running (batchhandlermom2sep property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.running", false]], "running (batchhandlermom2sepsf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.running", false]], "running (batchhandlertestercc property)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.running", false]], "running (batchhandlertesterdc property)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.running", false]], "running (batchqueuedc property)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.running", false]], "running (conditionalbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.running", false]], "running (dualbatchhandler property)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.running", false]], "running (dualbatchqueue property)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.running", false]], "running (queuemom1 property)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.running", false]], "running (queuemom1sf property)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.running", false]], "running (queuemom2 property)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.running", false]], "running (queuemom2sep property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.running", false]], "running (queuemom2sepsf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.running", false]], "running (queuemom2sf property)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.running", false]], "running (singlebatchqueue property)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.running", false]], "running (valbatchqueuedc property)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.running", false]], "s() (slurmmanager static method)": [[285, "sup3r.utilities.cli.SlurmManager.s", false]], "s1_hr_crop_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.s1_hr_crop_slices", false]], "s1_hr_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.s1_hr_slices", false]], "s1_lr_pad_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.s1_lr_pad_slices", false]], "s1_lr_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.s1_lr_slices", false]], "s2_hr_crop_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.s2_hr_crop_slices", false]], "s2_hr_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.s2_hr_slices", false]], "s2_lr_pad_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.s2_lr_pad_slices", false]], "s2_lr_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.s2_lr_slices", false]], "s_enhance (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.s_enhance", false]], "s_enhance (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.s_enhance", false]], "s_enhance (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.s_enhance", false]], "s_enhance (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.s_enhance", false]], "s_enhance (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.s_enhance", false]], "s_enhance (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.s_enhance", false]], "s_enhance (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.s_enhance", false]], "s_enhance (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.s_enhance", false]], "s_enhance (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.s_enhance", false]], "s_enhance (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.s_enhance", false]], "s_enhancements (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.s_enhancements", false]], "s_enhancements (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.s_enhancements", false]], "s_enhancements (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.s_enhancements", false]], "s_enhancements (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.s_enhancements", false]], "s_enhancements (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.s_enhancements", false]], "s_enhancements (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.s_enhancements", false]], "s_enhancements (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.s_enhancements", false]], "s_enhancements (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.s_enhancements", false]], "s_enhancements (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.s_enhancements", false]], "s_enhancements (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.s_enhancements", false]], "s_hr_crop_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.s_hr_crop_slices", false]], "s_hr_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.s_hr_slices", false]], "s_lr_crop_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.s_lr_crop_slices", false]], "s_lr_pad_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.s_lr_pad_slices", false]], "s_lr_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.s_lr_slices", false]], "safe_cast() (in module sup3r.utilities.utilities)": [[330, "sup3r.utilities.utilities.safe_cast", false]], "safe_serialize() (in module sup3r.utilities.utilities)": [[331, "sup3r.utilities.utilities.safe_serialize", false]], "sam_configs (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.SAM_configs", false]], "sample() (sup3rdataset method)": [[104, "sup3r.preprocessing.base.Sup3rDataset.sample", false]], "sample() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.sample", false]], "sample_batch() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.sample_batch", false]], "sample_batch() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.sample_batch", false]], "sample_batch() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.sample_batch", false]], "sample_batch() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.sample_batch", false]], "sample_batch() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.sample_batch", false]], "sample_batch() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.sample_batch", false]], "sample_batch() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.sample_batch", false]], "sample_batch() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.sample_batch", false]], "sample_batch() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.sample_batch", false]], "sample_batch() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.sample_batch", false]], "sample_batch() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.sample_batch", false]], "sample_batch() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.sample_batch", false]], "sample_batch() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.sample_batch", false]], "sample_batch() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.sample_batch", false]], "sample_batch() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.sample_batch", false]], "sample_batch() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.sample_batch", false]], "sample_batch() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.sample_batch", false]], "sample_batch() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.sample_batch", false]], "sample_batch() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.sample_batch", false]], "sample_batch() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.sample_batch", false]], "sample_batch() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.sample_batch", false]], "sample_batch() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.sample_batch", false]], "sample_batch() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.sample_batch", false]], "sample_shape (dualsampler property)": [[228, "sup3r.preprocessing.samplers.dual.DualSampler.sample_shape", false]], "sample_shape (dualsamplercc property)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.sample_shape", false]], "sample_shape (dummysampler property)": [[314, "sup3r.utilities.pytest.helpers.DummySampler.sample_shape", false]], "sample_shape (sampler property)": [[222, "sup3r.preprocessing.samplers.base.Sampler.sample_shape", false]], "sample_shape (samplerdc property)": [[226, "sup3r.preprocessing.samplers.dc.SamplerDC.sample_shape", false]], "sample_shape (samplertester property)": [[315, "sup3r.utilities.pytest.helpers.SamplerTester.sample_shape", false]], "sampler (batchhandler attribute)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.SAMPLER", false]], "sampler (batchhandlercc attribute)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.SAMPLER", false]], "sampler (batchhandlerdc attribute)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.SAMPLER", false]], "sampler (batchhandlermom1 attribute)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.SAMPLER", false]], "sampler (batchhandlermom1sf attribute)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.SAMPLER", false]], "sampler (batchhandlermom2 attribute)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.SAMPLER", false]], "sampler (batchhandlermom2sep attribute)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.SAMPLER", false]], "sampler (batchhandlermom2sepsf attribute)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.SAMPLER", false]], "sampler (batchhandlertestercc attribute)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.SAMPLER", false]], "sampler (batchhandlertesterdc attribute)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.SAMPLER", false]], "sampler (class in sup3r.preprocessing.samplers.base)": [[222, "sup3r.preprocessing.samplers.base.Sampler", false]], "sampler (dualbatchhandler attribute)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.SAMPLER", false]], "samplerdc (class in sup3r.preprocessing.samplers.dc)": [[226, "sup3r.preprocessing.samplers.dc.SamplerDC", false]], "samplertester (class in sup3r.utilities.pytest.helpers)": [[315, "sup3r.utilities.pytest.helpers.SamplerTester", false]], "samplertesterdc (in module sup3r.utilities.pytest.helpers)": [[316, "sup3r.utilities.pytest.helpers.SamplerTesterDC", false]], "save() (abstractsinglemodel method)": [[42, "sup3r.models.abstract.AbstractSingleModel.save", false]], "save() (linearinterp method)": [[51, "sup3r.models.linear.LinearInterp.save", false]], "save() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.save", false]], "save() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.save", false]], "save() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.save", false]], "save() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.save", false]], "save() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.save", false]], "save_params() (abstractinterface method)": [[41, "sup3r.models.abstract.AbstractInterface.save_params", false]], "save_params() (linearinterp method)": [[51, "sup3r.models.linear.LinearInterp.save_params", false]], "save_params() (multistepgan method)": [[53, "sup3r.models.multi_step.MultiStepGan.save_params", false]], "save_params() (multistepsurfacemetgan method)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.save_params", false]], "save_params() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.save_params", false]], "save_params() (solarmultistepgan method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.save_params", false]], "save_params() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.save_params", false]], "save_params() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.save_params", false]], "save_params() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.save_params", false]], "save_params() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.save_params", false]], "save_raster_index() (rasterizer method)": [[219, "sup3r.preprocessing.rasterizers.extended.Rasterizer.save_raster_index", false]], "save_stats() (statscollection method)": [[150, "sup3r.preprocessing.collections.stats.StatsCollection.save_stats", false]], "sbatch() (slurmmanager method)": [[285, "sup3r.utilities.cli.SlurmManager.sbatch", false]], "scalarcorrection (class in sup3r.bias.bias_calc)": [[12, "sup3r.bias.bias_calc.ScalarCorrection", false]], "scale_clearsky_ghi() (datahandlerncforcc method)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.scale_clearsky_ghi", false]], "scale_clearsky_ghi() (datahandlerncforccwithpowerlaw method)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.scale_clearsky_ghi", false]], "scale_factor() (loaderh5 method)": [[199, "sup3r.preprocessing.loaders.h5.LoaderH5.scale_factor", false]], "scale_factors (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.scale_factors", false]], "scancel() (slurmmanager method)": [[285, "sup3r.utilities.cli.SlurmManager.scancel", false]], "scontrol() (slurmmanager static method)": [[285, "sup3r.utilities.cli.SlurmManager.scontrol", false]], "seed() (abstractinterface static method)": [[41, "sup3r.models.abstract.AbstractInterface.seed", false]], "seed() (linearinterp static method)": [[51, "sup3r.models.linear.LinearInterp.seed", false]], "seed() (multistepgan static method)": [[53, "sup3r.models.multi_step.MultiStepGan.seed", false]], "seed() (multistepsurfacemetgan static method)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.seed", false]], "seed() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.seed", false]], "seed() (solarmultistepgan static method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.seed", false]], "seed() (sup3rcondmom static method)": [[47, "sup3r.models.conditional.Sup3rCondMom.seed", false]], "seed() (sup3rgan static method)": [[45, "sup3r.models.base.Sup3rGan.seed", false]], "seed() (sup3rgandc static method)": [[49, "sup3r.models.dc.Sup3rGanDC.seed", false]], "seed() (surfacespatialmetmodel static method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.seed", false]], "set_configs() (rexoutputs method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.set_configs", false]], "set_model_params() (abstractinterface method)": [[41, "sup3r.models.abstract.AbstractInterface.set_model_params", false]], "set_model_params() (linearinterp method)": [[51, "sup3r.models.linear.LinearInterp.set_model_params", false]], "set_model_params() (multistepgan method)": [[53, "sup3r.models.multi_step.MultiStepGan.set_model_params", false]], "set_model_params() (multistepsurfacemetgan method)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.set_model_params", false]], "set_model_params() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.set_model_params", false]], "set_model_params() (solarmultistepgan method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.set_model_params", false]], "set_model_params() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.set_model_params", false]], "set_model_params() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.set_model_params", false]], "set_model_params() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.set_model_params", false]], "set_model_params() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.set_model_params", false]], "set_norm_stats() (abstractsinglemodel method)": [[42, "sup3r.models.abstract.AbstractSingleModel.set_norm_stats", false]], "set_norm_stats() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.set_norm_stats", false]], "set_norm_stats() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.set_norm_stats", false]], "set_norm_stats() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.set_norm_stats", false]], "set_norm_stats() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.set_norm_stats", false]], "set_version_attr() (rexoutputs method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.set_version_attr", false]], "setdefault() (exodata method)": [[158, "sup3r.preprocessing.data_handlers.exo.ExoData.setdefault", false]], "setdefault() (singleexodatastep method)": [[160, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.setdefault", false]], "shape (abstractbatchqueue property)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.shape", false]], "shape (basederiver property)": [[166, "sup3r.preprocessing.derivers.base.BaseDeriver.shape", false]], "shape (baseloader property)": [[197, "sup3r.preprocessing.loaders.base.BaseLoader.shape", false]], "shape (baserasterizer property)": [[209, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.shape", false]], "shape (batchhandler property)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.shape", false]], "shape (batchhandlercc property)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.shape", false]], "shape (batchhandlerdc property)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.shape", false]], "shape (batchhandlermom1 property)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.shape", false]], "shape (batchhandlermom1sf property)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.shape", false]], "shape (batchhandlermom2 property)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.shape", false]], "shape (batchhandlermom2sep property)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.shape", false]], "shape (batchhandlermom2sepsf property)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.shape", false]], "shape (batchhandlertestercc property)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.shape", false]], "shape (batchhandlertesterdc property)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.shape", false]], "shape (batchqueuedc property)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.shape", false]], "shape (cacher property)": [[144, "sup3r.preprocessing.cachers.base.Cacher.shape", false]], "shape (collection property)": [[148, "sup3r.preprocessing.collections.base.Collection.shape", false]], "shape (conditionalbatchqueue property)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.shape", false]], "shape (container property)": [[103, "sup3r.preprocessing.base.Container.shape", false]], "shape (dailydatahandler property)": [[153, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.shape", false]], "shape (datahandler property)": [[154, "sup3r.preprocessing.data_handlers.base.DataHandler.shape", false]], "shape (datahandlerh5solarcc property)": [[155, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.shape", false]], "shape (datahandlerh5windcc property)": [[156, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.shape", false]], "shape (datahandlerncforcc property)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.shape", false]], "shape (datahandlerncforccwithpowerlaw property)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.shape", false]], "shape (deriver property)": [[167, "sup3r.preprocessing.derivers.base.Deriver.shape", false]], "shape (dualbatchhandler property)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.shape", false]], "shape (dualbatchqueue property)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.shape", false]], "shape (dualrasterizer property)": [[211, "sup3r.preprocessing.rasterizers.dual.DualRasterizer.shape", false]], "shape (dualsampler property)": [[228, "sup3r.preprocessing.samplers.dual.DualSampler.shape", false]], "shape (dualsamplercc property)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.shape", false]], "shape (dummydata property)": [[313, "sup3r.utilities.pytest.helpers.DummyData.shape", false]], "shape (dummysampler property)": [[314, "sup3r.utilities.pytest.helpers.DummySampler.shape", false]], "shape (loaderh5 property)": [[199, "sup3r.preprocessing.loaders.h5.LoaderH5.shape", false]], "shape (loadernc property)": [[201, "sup3r.preprocessing.loaders.nc.LoaderNC.shape", false]], "shape (queuemom1 property)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.shape", false]], "shape (queuemom1sf property)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.shape", false]], "shape (queuemom2 property)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.shape", false]], "shape (queuemom2sep property)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.shape", false]], "shape (queuemom2sepsf property)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.shape", false]], "shape (queuemom2sf property)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.shape", false]], "shape (rasterizer property)": [[219, "sup3r.preprocessing.rasterizers.extended.Rasterizer.shape", false]], "shape (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.shape", false]], "shape (sampler property)": [[222, "sup3r.preprocessing.samplers.base.Sampler.shape", false]], "shape (samplerdc property)": [[226, "sup3r.preprocessing.samplers.dc.SamplerDC.shape", false]], "shape (samplertester property)": [[315, "sup3r.utilities.pytest.helpers.SamplerTester.shape", false]], "shape (singlebatchqueue property)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.shape", false]], "shape (singleexodatastep property)": [[160, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.shape", false]], "shape (statscollection property)": [[150, "sup3r.preprocessing.collections.stats.StatsCollection.shape", false]], "shape (sup3rdataset property)": [[104, "sup3r.preprocessing.base.Sup3rDataset.shape", false]], "shape (sup3rx property)": [[101, "sup3r.preprocessing.accessor.Sup3rX.shape", false]], "shape (valbatchqueuedc property)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.shape", false]], "shapes (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.shapes", false]], "singlebatchqueue (class in sup3r.preprocessing.batch_queues.base)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue", false]], "singlebatchqueue.batch (class in sup3r.preprocessing.batch_queues.base)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.Batch", false]], "singleexodatastep (class in sup3r.preprocessing.data_handlers.exo)": [[160, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep", false]], "size (sup3rdataset property)": [[104, "sup3r.preprocessing.base.Sup3rDataset.size", false]], "size (sup3rx property)": [[101, "sup3r.preprocessing.accessor.Sup3rX.size", false]], "skillassessment (class in sup3r.bias.bias_calc)": [[13, "sup3r.bias.bias_calc.SkillAssessment", false]], "slurmmanager (class in sup3r.utilities.cli)": [[285, "sup3r.utilities.cli.SlurmManager", false]], "smooth_data() (in module sup3r.preprocessing.batch_queues.utilities)": [[139, "sup3r.preprocessing.batch_queues.utilities.smooth_data", false]], "smoothed_features (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.smoothed_features", false]], "smoothed_features (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.smoothed_features", false]], "smoothed_features (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.smoothed_features", false]], "smoothed_features (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.smoothed_features", false]], "smoothed_features (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.smoothed_features", false]], "smoothed_features (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.smoothed_features", false]], "smoothed_features (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.smoothed_features", false]], "smoothed_features (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.smoothed_features", false]], "smoothed_features (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.smoothed_features", false]], "smoothed_features (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.smoothed_features", false]], "smoothing (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.smoothing", false]], "smoothing (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.smoothing", false]], "smoothing (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.smoothing", false]], "smoothing (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.smoothing", false]], "smoothing (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.smoothing", false]], "smoothing (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.smoothing", false]], "smoothing (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.smoothing", false]], "smoothing (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.smoothing", false]], "smoothing (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.smoothing", false]], "smoothing (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.smoothing", false]], "solar (class in sup3r.solar.solar)": [[277, "sup3r.solar.solar.Solar", false]], "solar_zenith_angle (solar property)": [[277, "sup3r.solar.solar.Solar.solar_zenith_angle", false]], "solarcc (class in sup3r.models.solar_cc)": [[57, "sup3r.models.solar_cc.SolarCC", false]], "solarmultistepgan (class in sup3r.models.multi_step)": [[55, "sup3r.models.multi_step.SolarMultiStepGan", false]], "solarzenith (class in sup3r.preprocessing.derivers.utilities)": [[189, "sup3r.preprocessing.derivers.utilities.SolarZenith", false]], "source (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.source", false]], "source_data (baseexorasterizer property)": [[213, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.source_data", false]], "source_data (exorasterizer property)": [[214, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.source_data", false]], "source_data (exorasterizerh5 property)": [[215, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5.source_data", false]], "source_data (exorasterizernc property)": [[216, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC.source_data", false]], "source_data (szarasterizer property)": [[217, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.source_data", false]], "source_features (sup3rqa property)": [[264, "sup3r.qa.qa.Sup3rQa.source_features", false]], "source_handler (baseexorasterizer property)": [[213, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.source_handler", false]], "source_handler (exorasterizer property)": [[214, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.source_handler", false]], "source_handler (exorasterizerh5 property)": [[215, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5.source_handler", false]], "source_handler (exorasterizernc property)": [[216, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC.source_handler", false]], "source_handler (szarasterizer property)": [[217, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.source_handler", false]], "source_lat_lon (baseexorasterizer property)": [[213, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.source_lat_lon", false]], "source_lat_lon (exorasterizer property)": [[214, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.source_lat_lon", false]], "source_lat_lon (exorasterizerh5 property)": [[215, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5.source_lat_lon", false]], "source_lat_lon (exorasterizernc property)": [[216, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC.source_lat_lon", false]], "source_lat_lon (szarasterizer property)": [[217, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.source_lat_lon", false]], "spatial_chunk_lookup (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.spatial_chunk_lookup", false]], "spatial_coarsening() (in module sup3r.utilities.utilities)": [[332, "sup3r.utilities.utilities.spatial_coarsening", false]], "spatial_simple_enhancing() (in module sup3r.preprocessing.batch_queues.utilities)": [[140, "sup3r.preprocessing.batch_queues.utilities.spatial_simple_enhancing", false]], "spatial_solar_models (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.spatial_solar_models", false]], "spatial_weights (batchhandlerdc property)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.spatial_weights", false]], "spatial_weights (batchhandlertesterdc property)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.spatial_weights", false]], "spatial_weights (batchqueuedc property)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.spatial_weights", false]], "spatial_weights (valbatchqueuedc property)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.spatial_weights", false]], "spatial_wind_models (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.spatial_wind_models", false]], "spatialextremesloss (class in sup3r.utilities.loss_metrics)": [[298, "sup3r.utilities.loss_metrics.SpatialExtremesLoss", false]], "spatialextremesonlyloss (class in sup3r.utilities.loss_metrics)": [[299, "sup3r.utilities.loss_metrics.SpatialExtremesOnlyLoss", false]], "spatialfftonlyloss (class in sup3r.utilities.loss_metrics)": [[300, "sup3r.utilities.loss_metrics.SpatialFftOnlyLoss", false]], "spatiotemporalextremesloss (class in sup3r.utilities.loss_metrics)": [[301, "sup3r.utilities.loss_metrics.SpatiotemporalExtremesLoss", false]], "spatiotemporalfftonlyloss (class in sup3r.utilities.loss_metrics)": [[302, "sup3r.utilities.loss_metrics.SpatiotemporalFftOnlyLoss", false]], "split() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.split", false]], "split() (exodata method)": [[158, "sup3r.preprocessing.data_handlers.exo.ExoData.split", false]], "split() (modulename method)": [[282, "sup3r.utilities.ModuleName.split", false]], "splitlines() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.splitlines", false]], "splitlines() (modulename method)": [[282, "sup3r.utilities.ModuleName.splitlines", false]], "st_interp() (in module sup3r.models.utilities)": [[63, "sup3r.models.utilities.st_interp", false]], "standardize_names() (in module sup3r.preprocessing.loaders.utilities)": [[203, "sup3r.preprocessing.loaders.utilities.standardize_names", false]], "standardize_values() (in module sup3r.preprocessing.loaders.utilities)": [[204, "sup3r.preprocessing.loaders.utilities.standardize_values", false]], "start() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.start", false]], "start() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.start", false]], "start() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.start", false]], "start() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.start", false]], "start() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.start", false]], "start() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.start", false]], "start() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.start", false]], "start() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.start", false]], "start() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.start", false]], "start() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.start", false]], "start() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.start", false]], "start() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.start", false]], "start() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.start", false]], "start() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.start", false]], "start() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.start", false]], "start() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.start", false]], "start() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.start", false]], "start() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.start", false]], "start() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.start", false]], "start() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.start", false]], "start() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.start", false]], "start() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.start", false]], "start() (timer method)": [[325, "sup3r.utilities.utilities.Timer.start", false]], "start() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.start", false]], "starting_hour (solarcc attribute)": [[57, "sup3r.models.solar_cc.SolarCC.STARTING_HOUR", false]], "startswith() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.startswith", false]], "startswith() (modulename method)": [[282, "sup3r.utilities.ModuleName.startswith", false]], "statscollection (class in sup3r.preprocessing.collections.stats)": [[150, "sup3r.preprocessing.collections.stats.StatsCollection", false]], "std() (sup3rdataset method)": [[104, "sup3r.preprocessing.base.Sup3rDataset.std", false]], "std() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.std", false]], "stdevs (abstractsinglemodel property)": [[42, "sup3r.models.abstract.AbstractSingleModel.stdevs", false]], "stdevs (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.stdevs", false]], "stdevs (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.stdevs", false]], "stdevs (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.stdevs", false]], "stdevs (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.stdevs", false]], "stdevs (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.stdevs", false]], "stdevs (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.stdevs", false]], "stdevs (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.stdevs", false]], "stextremesfftloss (class in sup3r.utilities.loss_metrics)": [[303, "sup3r.utilities.loss_metrics.StExtremesFftLoss", false]], "stop() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.stop", false]], "stop() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.stop", false]], "stop() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.stop", false]], "stop() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.stop", false]], "stop() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.stop", false]], "stop() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.stop", false]], "stop() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.stop", false]], "stop() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.stop", false]], "stop() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.stop", false]], "stop() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.stop", false]], "stop() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.stop", false]], "stop() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.stop", false]], "stop() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.stop", false]], "stop() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.stop", false]], "stop() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.stop", false]], "stop() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.stop", false]], "stop() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.stop", false]], "stop() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.stop", false]], "stop() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.stop", false]], "stop() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.stop", false]], "stop() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.stop", false]], "stop() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.stop", false]], "stop() (timer method)": [[325, "sup3r.utilities.utilities.Timer.stop", false]], "stop() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.stop", false]], "strip() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.strip", false]], "strip() (modulename method)": [[282, "sup3r.utilities.ModuleName.strip", false]], "submit() (slurmmanager static method)": [[285, "sup3r.utilities.cli.SlurmManager.submit", false]], "sup3r": [[0, "module-sup3r", false]], "sup3r command line option": [[336, "cmdoption-sup3r-c", false], [336, "cmdoption-sup3r-v", false], [336, "cmdoption-sup3r-version", false]], "sup3r-batch command line option": [[336, "cmdoption-sup3r-batch-cancel", false], [336, "cmdoption-sup3r-batch-delete", false], [336, "cmdoption-sup3r-batch-dry-run", false], [336, "cmdoption-sup3r-batch-monitor-background", false], [336, "cmdoption-sup3r-batch-v", false]], "sup3r-bias-calc command line option": [[336, "cmdoption-sup3r-bias-calc-v", false]], "sup3r-data-collect command line option": [[336, "cmdoption-sup3r-data-collect-v", false]], "sup3r-forward-pass command line option": [[336, "cmdoption-sup3r-forward-pass-v", false]], "sup3r-pipeline command line option": [[336, "cmdoption-sup3r-pipeline-background", false], [336, "cmdoption-sup3r-pipeline-cancel", false], [336, "cmdoption-sup3r-pipeline-monitor", false], [336, "cmdoption-sup3r-pipeline-v", false]], "sup3r-qa command line option": [[336, "cmdoption-sup3r-qa-v", false]], "sup3r-solar command line option": [[336, "cmdoption-sup3r-solar-v", false]], "sup3r.batch": [[1, "module-sup3r.batch", false]], "sup3r.batch.batch_cli": [[2, "module-sup3r.batch.batch_cli", false]], "sup3r.bias": [[3, "module-sup3r.bias", false]], "sup3r.bias.abstract": [[4, "module-sup3r.bias.abstract", false]], "sup3r.bias.base": [[6, "module-sup3r.bias.base", false]], "sup3r.bias.bias_calc": [[8, "module-sup3r.bias.bias_calc", false]], "sup3r.bias.bias_calc_cli": [[14, "module-sup3r.bias.bias_calc_cli", false]], "sup3r.bias.bias_calc_vortex": [[17, "module-sup3r.bias.bias_calc_vortex", false]], "sup3r.bias.bias_transforms": [[20, "module-sup3r.bias.bias_transforms", false]], "sup3r.bias.mixins": [[26, "module-sup3r.bias.mixins", false]], "sup3r.bias.presrat": [[29, "module-sup3r.bias.presrat", false]], "sup3r.bias.qdm": [[31, "module-sup3r.bias.qdm", false]], "sup3r.bias.utilities": [[33, "module-sup3r.bias.utilities", false]], "sup3r.cli": [[38, "module-sup3r.cli", false]], "sup3r.models": [[39, "module-sup3r.models", false]], "sup3r.models.abstract": [[40, "module-sup3r.models.abstract", false]], "sup3r.models.base": [[44, "module-sup3r.models.base", false]], "sup3r.models.conditional": [[46, "module-sup3r.models.conditional", false]], "sup3r.models.dc": [[48, "module-sup3r.models.dc", false]], "sup3r.models.linear": [[50, "module-sup3r.models.linear", false]], "sup3r.models.multi_step": [[52, "module-sup3r.models.multi_step", false]], "sup3r.models.solar_cc": [[56, "module-sup3r.models.solar_cc", false]], "sup3r.models.surface": [[58, "module-sup3r.models.surface", false]], "sup3r.models.utilities": [[60, "module-sup3r.models.utilities", false]], "sup3r.pipeline": [[64, "module-sup3r.pipeline", false]], "sup3r.pipeline.forward_pass": [[65, "module-sup3r.pipeline.forward_pass", false]], "sup3r.pipeline.forward_pass_cli": [[67, "module-sup3r.pipeline.forward_pass_cli", false]], "sup3r.pipeline.pipeline_cli": [[70, "module-sup3r.pipeline.pipeline_cli", false]], "sup3r.pipeline.slicer": [[71, "module-sup3r.pipeline.slicer", false]], "sup3r.pipeline.strategy": [[73, "module-sup3r.pipeline.strategy", false]], "sup3r.pipeline.utilities": [[76, "module-sup3r.pipeline.utilities", false]], "sup3r.postprocessing": [[79, "module-sup3r.postprocessing", false]], "sup3r.postprocessing.collectors": [[80, "module-sup3r.postprocessing.collectors", false]], "sup3r.postprocessing.collectors.base": [[81, "module-sup3r.postprocessing.collectors.base", false]], "sup3r.postprocessing.collectors.h5": [[83, "module-sup3r.postprocessing.collectors.h5", false]], "sup3r.postprocessing.collectors.nc": [[85, "module-sup3r.postprocessing.collectors.nc", false]], "sup3r.postprocessing.data_collect_cli": [[87, "module-sup3r.postprocessing.data_collect_cli", false]], "sup3r.postprocessing.writers": [[90, "module-sup3r.postprocessing.writers", false]], "sup3r.postprocessing.writers.base": [[91, "module-sup3r.postprocessing.writers.base", false]], "sup3r.postprocessing.writers.h5": [[95, "module-sup3r.postprocessing.writers.h5", false]], "sup3r.postprocessing.writers.nc": [[97, "module-sup3r.postprocessing.writers.nc", false]], "sup3r.preprocessing": [[99, "module-sup3r.preprocessing", false]], "sup3r.preprocessing.accessor": [[100, "module-sup3r.preprocessing.accessor", false]], "sup3r.preprocessing.base": [[102, "module-sup3r.preprocessing.base", false]], "sup3r.preprocessing.batch_handlers": [[106, "module-sup3r.preprocessing.batch_handlers", false]], "sup3r.preprocessing.batch_handlers.dc": [[107, "module-sup3r.preprocessing.batch_handlers.dc", false]], "sup3r.preprocessing.batch_handlers.factory": [[109, "module-sup3r.preprocessing.batch_handlers.factory", false]], "sup3r.preprocessing.batch_queues": [[120, "module-sup3r.preprocessing.batch_queues", false]], "sup3r.preprocessing.batch_queues.abstract": [[121, "module-sup3r.preprocessing.batch_queues.abstract", false]], "sup3r.preprocessing.batch_queues.base": [[123, "module-sup3r.preprocessing.batch_queues.base", false]], "sup3r.preprocessing.batch_queues.conditional": [[125, "module-sup3r.preprocessing.batch_queues.conditional", false]], "sup3r.preprocessing.batch_queues.dc": [[133, "module-sup3r.preprocessing.batch_queues.dc", false]], "sup3r.preprocessing.batch_queues.dual": [[136, "module-sup3r.preprocessing.batch_queues.dual", false]], "sup3r.preprocessing.batch_queues.utilities": [[138, "module-sup3r.preprocessing.batch_queues.utilities", false]], "sup3r.preprocessing.cachers": [[142, "module-sup3r.preprocessing.cachers", false]], "sup3r.preprocessing.cachers.base": [[143, "module-sup3r.preprocessing.cachers.base", false]], "sup3r.preprocessing.cachers.utilities": [[145, "module-sup3r.preprocessing.cachers.utilities", false]], "sup3r.preprocessing.collections": [[146, "module-sup3r.preprocessing.collections", false]], "sup3r.preprocessing.collections.base": [[147, "module-sup3r.preprocessing.collections.base", false]], "sup3r.preprocessing.collections.stats": [[149, "module-sup3r.preprocessing.collections.stats", false]], "sup3r.preprocessing.data_handlers": [[151, "module-sup3r.preprocessing.data_handlers", false]], "sup3r.preprocessing.data_handlers.base": [[152, "module-sup3r.preprocessing.data_handlers.base", false]], "sup3r.preprocessing.data_handlers.exo": [[157, "module-sup3r.preprocessing.data_handlers.exo", false]], "sup3r.preprocessing.data_handlers.nc_cc": [[161, "module-sup3r.preprocessing.data_handlers.nc_cc", false]], "sup3r.preprocessing.derivers": [[164, "module-sup3r.preprocessing.derivers", false]], "sup3r.preprocessing.derivers.base": [[165, "module-sup3r.preprocessing.derivers.base", false]], "sup3r.preprocessing.derivers.methods": [[168, "module-sup3r.preprocessing.derivers.methods", false]], "sup3r.preprocessing.derivers.utilities": [[188, "module-sup3r.preprocessing.derivers.utilities", false]], "sup3r.preprocessing.loaders": [[194, "module-sup3r.preprocessing.loaders", false]], "sup3r.preprocessing.loaders.base": [[196, "module-sup3r.preprocessing.loaders.base", false]], "sup3r.preprocessing.loaders.h5": [[198, "module-sup3r.preprocessing.loaders.h5", false]], "sup3r.preprocessing.loaders.nc": [[200, "module-sup3r.preprocessing.loaders.nc", false]], "sup3r.preprocessing.loaders.utilities": [[202, "module-sup3r.preprocessing.loaders.utilities", false]], "sup3r.preprocessing.names": [[205, "module-sup3r.preprocessing.names", false]], "sup3r.preprocessing.rasterizers": [[207, "module-sup3r.preprocessing.rasterizers", false]], "sup3r.preprocessing.rasterizers.base": [[208, "module-sup3r.preprocessing.rasterizers.base", false]], "sup3r.preprocessing.rasterizers.dual": [[210, "module-sup3r.preprocessing.rasterizers.dual", false]], "sup3r.preprocessing.rasterizers.exo": [[212, "module-sup3r.preprocessing.rasterizers.exo", false]], "sup3r.preprocessing.rasterizers.extended": [[218, "module-sup3r.preprocessing.rasterizers.extended", false]], "sup3r.preprocessing.samplers": [[220, "module-sup3r.preprocessing.samplers", false]], "sup3r.preprocessing.samplers.base": [[221, "module-sup3r.preprocessing.samplers.base", false]], "sup3r.preprocessing.samplers.cc": [[223, "module-sup3r.preprocessing.samplers.cc", false]], "sup3r.preprocessing.samplers.dc": [[225, "module-sup3r.preprocessing.samplers.dc", false]], "sup3r.preprocessing.samplers.dual": [[227, "module-sup3r.preprocessing.samplers.dual", false]], "sup3r.preprocessing.samplers.utilities": [[229, "module-sup3r.preprocessing.samplers.utilities", false]], "sup3r.preprocessing.utilities": [[237, "module-sup3r.preprocessing.utilities", false]], "sup3r.qa": [[262, "module-sup3r.qa", false]], "sup3r.qa.qa": [[263, "module-sup3r.qa.qa", false]], "sup3r.qa.qa_cli": [[265, "module-sup3r.qa.qa_cli", false]], "sup3r.qa.utilities": [[266, "module-sup3r.qa.utilities", false]], "sup3r.solar": [[275, "module-sup3r.solar", false]], "sup3r.solar.solar": [[276, "module-sup3r.solar.solar", false]], "sup3r.solar.solar_cli": [[278, "module-sup3r.solar.solar_cli", false]], "sup3r.utilities": [[281, "module-sup3r.utilities", false]], "sup3r.utilities.cli": [[283, "module-sup3r.utilities.cli", false]], "sup3r.utilities.era_downloader": [[286, "module-sup3r.utilities.era_downloader", false]], "sup3r.utilities.interpolation": [[288, "module-sup3r.utilities.interpolation", false]], "sup3r.utilities.loss_metrics": [[290, "module-sup3r.utilities.loss_metrics", false]], "sup3r.utilities.pytest": [[307, "module-sup3r.utilities.pytest", false]], "sup3r.utilities.pytest.helpers": [[308, "module-sup3r.utilities.pytest.helpers", false]], "sup3r.utilities.utilities": [[324, "module-sup3r.utilities.utilities", false]], "sup3rcondmom (class in sup3r.models.conditional)": [[47, "sup3r.models.conditional.Sup3rCondMom", false]], "sup3rdataset (class in sup3r.preprocessing.base)": [[104, "sup3r.preprocessing.base.Sup3rDataset", false]], "sup3rgan (class in sup3r.models.base)": [[45, "sup3r.models.base.Sup3rGan", false]], "sup3rgandc (class in sup3r.models.dc)": [[49, "sup3r.models.dc.Sup3rGanDC", false]], "sup3rmeta (class in sup3r.preprocessing.base)": [[105, "sup3r.preprocessing.base.Sup3rMeta", false]], "sup3rqa (class in sup3r.qa.qa)": [[264, "sup3r.qa.qa.Sup3rQa", false]], "sup3rx (class in sup3r.preprocessing.accessor)": [[101, "sup3r.preprocessing.accessor.Sup3rX", false]], "surface_file (eradownloader property)": [[287, "sup3r.utilities.era_downloader.EraDownloader.surface_file", false]], "surfacerh (class in sup3r.preprocessing.derivers.methods)": [[174, "sup3r.preprocessing.derivers.methods.SurfaceRH", false]], "surfacespatialmetmodel (class in sup3r.models.surface)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel", false]], "swapcase() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.swapcase", false]], "swapcase() (modulename method)": [[282, "sup3r.utilities.ModuleName.swapcase", false]], "sza (class in sup3r.preprocessing.derivers.methods)": [[175, "sup3r.preprocessing.derivers.methods.Sza", false]], "szarasterizer (class in sup3r.preprocessing.rasterizers.exo)": [[217, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer", false]], "t_enhance (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.t_enhance", false]], "t_enhance (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.t_enhance", false]], "t_enhance (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.t_enhance", false]], "t_enhance (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.t_enhance", false]], "t_enhance (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.t_enhance", false]], "t_enhance (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.t_enhance", false]], "t_enhance (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.t_enhance", false]], "t_enhance (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.t_enhance", false]], "t_enhance (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.t_enhance", false]], "t_enhance (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.t_enhance", false]], "t_enhancements (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.t_enhancements", false]], "t_enhancements (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.t_enhancements", false]], "t_enhancements (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.t_enhancements", false]], "t_enhancements (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.t_enhancements", false]], "t_enhancements (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.t_enhancements", false]], "t_enhancements (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.t_enhancements", false]], "t_enhancements (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.t_enhancements", false]], "t_enhancements (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.t_enhancements", false]], "t_enhancements (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.t_enhancements", false]], "t_enhancements (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.t_enhancements", false]], "t_hr_crop_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.t_hr_crop_slices", false]], "t_lr_crop_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.t_lr_crop_slices", false]], "t_lr_pad_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.t_lr_pad_slices", false]], "t_lr_slices (forwardpassslicer property)": [[72, "sup3r.pipeline.slicer.ForwardPassSlicer.t_lr_slices", false]], "target (baserasterizer property)": [[209, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.target", false]], "target (rasterizer property)": [[219, "sup3r.preprocessing.rasterizers.extended.Rasterizer.target", false]], "target (sup3rx property)": [[101, "sup3r.preprocessing.accessor.Sup3rX.target", false]], "tas (class in sup3r.preprocessing.derivers.methods)": [[176, "sup3r.preprocessing.derivers.methods.Tas", false]], "tasmax (class in sup3r.preprocessing.derivers.methods)": [[177, "sup3r.preprocessing.derivers.methods.TasMax", false]], "tasmin (class in sup3r.preprocessing.derivers.methods)": [[178, "sup3r.preprocessing.derivers.methods.TasMin", false]], "temp_lapse (surfacespatialmetmodel attribute)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.TEMP_LAPSE", false]], "tempncforcc (class in sup3r.preprocessing.derivers.methods)": [[179, "sup3r.preprocessing.derivers.methods.TempNCforCC", false]], "temporal_coarsening() (in module sup3r.utilities.utilities)": [[333, "sup3r.utilities.utilities.temporal_coarsening", false]], "temporal_pad() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.temporal_pad", false]], "temporal_pad() (solarmultistepgan method)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.temporal_pad", false]], "temporal_simple_enhancing() (in module sup3r.preprocessing.batch_queues.utilities)": [[141, "sup3r.preprocessing.batch_queues.utilities.temporal_simple_enhancing", false]], "temporal_solar_models (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.temporal_solar_models", false]], "temporal_weights (batchhandlerdc property)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.temporal_weights", false]], "temporal_weights (batchhandlertesterdc property)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.temporal_weights", false]], "temporal_weights (batchqueuedc property)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.temporal_weights", false]], "temporal_weights (valbatchqueuedc property)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.temporal_weights", false]], "temporalextremesloss (class in sup3r.utilities.loss_metrics)": [[304, "sup3r.utilities.loss_metrics.TemporalExtremesLoss", false]], "temporalextremesonlyloss (class in sup3r.utilities.loss_metrics)": [[305, "sup3r.utilities.loss_metrics.TemporalExtremesOnlyLoss", false]], "tensorboardmixin (class in sup3r.models.abstract)": [[43, "sup3r.models.abstract.TensorboardMixIn", false]], "test_sampler_factory() (in module sup3r.utilities.pytest.helpers)": [[323, "sup3r.utilities.pytest.helpers.test_sampler_factory", false]], "time_derivative_dist() (in module sup3r.qa.utilities)": [[271, "sup3r.qa.utilities.time_derivative_dist", false]], "time_independent (sup3rx property)": [[101, "sup3r.preprocessing.accessor.Sup3rX.time_independent", false]], "time_index (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.time_index", false]], "time_index (solar property)": [[277, "sup3r.solar.solar.Solar.time_index", false]], "time_index (sup3rx property)": [[101, "sup3r.preprocessing.accessor.Sup3rX.time_index", false]], "time_index (vortexmeanprepper property)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.time_index", false]], "time_slice (baserasterizer property)": [[209, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.time_slice", false]], "time_slice (rasterizer property)": [[219, "sup3r.preprocessing.rasterizers.extended.Rasterizer.time_slice", false]], "time_step (sup3rx property)": [[101, "sup3r.preprocessing.accessor.Sup3rX.time_step", false]], "timer (class in sup3r.utilities.utilities)": [[325, "sup3r.utilities.utilities.Timer", false]], "title() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.title", false]], "title() (modulename method)": [[282, "sup3r.utilities.ModuleName.title", false]], "tke_frequency_spectrum() (in module sup3r.qa.utilities)": [[272, "sup3r.qa.utilities.tke_frequency_spectrum", false]], "tke_wavenumber_spectrum() (in module sup3r.qa.utilities)": [[273, "sup3r.qa.utilities.tke_wavenumber_spectrum", false]], "to_dataarray() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.to_dataarray", false]], "total_batches (abstractsinglemodel property)": [[42, "sup3r.models.abstract.AbstractSingleModel.total_batches", false]], "total_batches (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.total_batches", false]], "total_batches (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.total_batches", false]], "total_batches (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.total_batches", false]], "total_batches (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.total_batches", false]], "total_batches (tensorboardmixin property)": [[43, "sup3r.models.abstract.TensorboardMixIn.total_batches", false]], "train() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.train", false]], "train() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.train", false]], "train() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.train", false]], "train() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.train", false]], "train() (surfacespatialmetmodel method)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.train", false]], "train_epoch() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.train_epoch", false]], "train_epoch() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.train_epoch", false]], "train_epoch() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.train_epoch", false]], "train_epoch() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.train_epoch", false]], "train_queue (batchhandler attribute)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.TRAIN_QUEUE", false]], "train_queue (batchhandlercc attribute)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.TRAIN_QUEUE", false]], "train_queue (batchhandlerdc attribute)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.TRAIN_QUEUE", false]], "train_queue (batchhandlermom1 attribute)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.TRAIN_QUEUE", false]], "train_queue (batchhandlermom1sf attribute)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.TRAIN_QUEUE", false]], "train_queue (batchhandlermom2 attribute)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.TRAIN_QUEUE", false]], "train_queue (batchhandlermom2sep attribute)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.TRAIN_QUEUE", false]], "train_queue (batchhandlermom2sepsf attribute)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.TRAIN_QUEUE", false]], "train_queue (batchhandlertestercc attribute)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.TRAIN_QUEUE", false]], "train_queue (batchhandlertesterdc attribute)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.TRAIN_QUEUE", false]], "train_queue (dualbatchhandler attribute)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.TRAIN_QUEUE", false]], "trainingsession (class in sup3r.models.utilities)": [[61, "sup3r.models.utilities.TrainingSession", false]], "transform() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.transform", false]], "transform() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.transform", false]], "transform() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.transform", false]], "transform() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.transform", false]], "transform() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.transform", false]], "transform() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.transform", false]], "transform() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.transform", false]], "transform() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.transform", false]], "transform() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.transform", false]], "transform() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.transform", false]], "transform() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.transform", false]], "transform() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.transform", false]], "transform() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.transform", false]], "transform() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.transform", false]], "transform() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.transform", false]], "transform() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.transform", false]], "transform() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.transform", false]], "transform() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.transform", false]], "transform() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.transform", false]], "transform() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.transform", false]], "transform() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.transform", false]], "transform() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.transform", false]], "transform() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.transform", false]], "transform_rotate_wind() (in module sup3r.preprocessing.derivers.utilities)": [[192, "sup3r.preprocessing.derivers.utilities.transform_rotate_wind", false]], "translate() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.translate", false]], "translate() (modulename method)": [[282, "sup3r.utilities.ModuleName.translate", false]], "tree (baseexorasterizer property)": [[213, "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer.tree", false]], "tree (exorasterizer property)": [[214, "sup3r.preprocessing.rasterizers.exo.ExoRasterizer.tree", false]], "tree (exorasterizerh5 property)": [[215, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5.tree", false]], "tree (exorasterizernc property)": [[216, "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC.tree", false]], "tree (szarasterizer property)": [[217, "sup3r.preprocessing.rasterizers.exo.SzaRasterizer.tree", false]], "un_norm_output() (abstractsinglemodel method)": [[42, "sup3r.models.abstract.AbstractSingleModel.un_norm_output", false]], "un_norm_output() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.un_norm_output", false]], "un_norm_output() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.un_norm_output", false]], "un_norm_output() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.un_norm_output", false]], "un_norm_output() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.un_norm_output", false]], "unflatten() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.unflatten", false]], "uniform_box_sampler() (in module sup3r.preprocessing.samplers.utilities)": [[233, "sup3r.preprocessing.samplers.utilities.uniform_box_sampler", false]], "uniform_time_sampler() (in module sup3r.preprocessing.samplers.utilities)": [[234, "sup3r.preprocessing.samplers.utilities.uniform_time_sampler", false]], "units (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.units", false]], "unmasked_chunks (forwardpassstrategy property)": [[75, "sup3r.pipeline.strategy.ForwardPassStrategy.unmasked_chunks", false]], "update() (exodata method)": [[158, "sup3r.preprocessing.data_handlers.exo.ExoData.update", false]], "update() (singleexodatastep method)": [[160, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.update", false]], "update_adversarial_weights() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.update_adversarial_weights", false]], "update_adversarial_weights() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.update_adversarial_weights", false]], "update_adversarial_weights() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.update_adversarial_weights", false]], "update_ds() (sup3rx method)": [[101, "sup3r.preprocessing.accessor.Sup3rX.update_ds", false]], "update_dset() (rexoutputs method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.update_dset", false]], "update_file() (biascorrectupdate class method)": [[18, "sup3r.bias.bias_calc_vortex.BiasCorrectUpdate.update_file", false]], "update_hr_data() (dualrasterizer method)": [[211, "sup3r.preprocessing.rasterizers.dual.DualRasterizer.update_hr_data", false]], "update_loss_details() (abstractsinglemodel static method)": [[42, "sup3r.models.abstract.AbstractSingleModel.update_loss_details", false]], "update_loss_details() (solarcc static method)": [[57, "sup3r.models.solar_cc.SolarCC.update_loss_details", false]], "update_loss_details() (sup3rcondmom static method)": [[47, "sup3r.models.conditional.Sup3rCondMom.update_loss_details", false]], "update_loss_details() (sup3rgan static method)": [[45, "sup3r.models.base.Sup3rGan.update_loss_details", false]], "update_loss_details() (sup3rgandc static method)": [[49, "sup3r.models.dc.Sup3rGanDC.update_loss_details", false]], "update_lr_data() (dualrasterizer method)": [[211, "sup3r.preprocessing.rasterizers.dual.DualRasterizer.update_lr_data", false]], "update_optimizer() (solarcc method)": [[57, "sup3r.models.solar_cc.SolarCC.update_optimizer", false]], "update_optimizer() (sup3rcondmom method)": [[47, "sup3r.models.conditional.Sup3rCondMom.update_optimizer", false]], "update_optimizer() (sup3rgan method)": [[45, "sup3r.models.base.Sup3rGan.update_optimizer", false]], "update_optimizer() (sup3rgandc method)": [[49, "sup3r.models.dc.Sup3rGanDC.update_optimizer", false]], "update_record() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.update_record", false]], "update_weights() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.update_weights", false]], "update_weights() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.update_weights", false]], "update_weights() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.update_weights", false]], "update_weights() (samplerdc method)": [[226, "sup3r.preprocessing.samplers.dc.SamplerDC.update_weights", false]], "update_weights() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.update_weights", false]], "upper() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.upper", false]], "upper() (modulename method)": [[282, "sup3r.utilities.ModuleName.upper", false]], "usolar (class in sup3r.preprocessing.derivers.methods)": [[180, "sup3r.preprocessing.derivers.methods.USolar", false]], "uwind (class in sup3r.preprocessing.derivers.methods)": [[181, "sup3r.preprocessing.derivers.methods.UWind", false]], "uwindpowerlaw (class in sup3r.preprocessing.derivers.methods)": [[182, "sup3r.preprocessing.derivers.methods.UWindPowerLaw", false]], "val_queue (batchhandler attribute)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.VAL_QUEUE", false]], "val_queue (batchhandlercc attribute)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.VAL_QUEUE", false]], "val_queue (batchhandlerdc attribute)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.VAL_QUEUE", false]], "val_queue (batchhandlermom1 attribute)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.VAL_QUEUE", false]], "val_queue (batchhandlermom1sf attribute)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.VAL_QUEUE", false]], "val_queue (batchhandlermom2 attribute)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.VAL_QUEUE", false]], "val_queue (batchhandlermom2sep attribute)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.VAL_QUEUE", false]], "val_queue (batchhandlermom2sepsf attribute)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.VAL_QUEUE", false]], "val_queue (batchhandlertestercc attribute)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.VAL_QUEUE", false]], "val_queue (batchhandlertesterdc attribute)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.VAL_QUEUE", false]], "val_queue (dualbatchhandler attribute)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.VAL_QUEUE", false]], "valbatchqueuedc (class in sup3r.preprocessing.batch_queues.dc)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC", false]], "valbatchqueuedc.batch (class in sup3r.preprocessing.batch_queues.dc)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.Batch", false]], "values (sup3rx property)": [[101, "sup3r.preprocessing.accessor.Sup3rX.values", false]], "values() (exodata method)": [[158, "sup3r.preprocessing.data_handlers.exo.ExoData.values", false]], "values() (singleexodatastep method)": [[160, "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep.values", false]], "variables (eradownloader property)": [[287, "sup3r.utilities.era_downloader.EraDownloader.variables", false]], "version (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.version", false]], "version_record (abstractinterface property)": [[41, "sup3r.models.abstract.AbstractInterface.version_record", false]], "version_record (linearinterp property)": [[51, "sup3r.models.linear.LinearInterp.version_record", false]], "version_record (multistepgan property)": [[53, "sup3r.models.multi_step.MultiStepGan.version_record", false]], "version_record (multistepsurfacemetgan property)": [[54, "sup3r.models.multi_step.MultiStepSurfaceMetGan.version_record", false]], "version_record (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.version_record", false]], "version_record (solarmultistepgan property)": [[55, "sup3r.models.multi_step.SolarMultiStepGan.version_record", false]], "version_record (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.version_record", false]], "version_record (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.version_record", false]], "version_record (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.version_record", false]], "version_record (surfacespatialmetmodel property)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.version_record", false]], "vortexmeanprepper (class in sup3r.bias.bias_calc_vortex)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper", false]], "vsolar (class in sup3r.preprocessing.derivers.methods)": [[183, "sup3r.preprocessing.derivers.methods.VSolar", false]], "vwind (class in sup3r.preprocessing.derivers.methods)": [[184, "sup3r.preprocessing.derivers.methods.VWind", false]], "vwindpowerlaw (class in sup3r.preprocessing.derivers.methods)": [[185, "sup3r.preprocessing.derivers.methods.VWindPowerLaw", false]], "w_delta_temp (surfacespatialmetmodel attribute)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.W_DELTA_TEMP", false]], "w_delta_topo (surfacespatialmetmodel attribute)": [[59, "sup3r.models.surface.SurfaceSpatialMetModel.W_DELTA_TOPO", false]], "wavenumber_spectrum() (in module sup3r.qa.utilities)": [[274, "sup3r.qa.utilities.wavenumber_spectrum", false]], "weighted_box_sampler() (in module sup3r.preprocessing.samplers.utilities)": [[235, "sup3r.preprocessing.samplers.utilities.weighted_box_sampler", false]], "weighted_time_sampler() (in module sup3r.preprocessing.samplers.utilities)": [[236, "sup3r.preprocessing.samplers.utilities.weighted_time_sampler", false]], "weights (solarcc property)": [[57, "sup3r.models.solar_cc.SolarCC.weights", false]], "weights (sup3rcondmom property)": [[47, "sup3r.models.conditional.Sup3rCondMom.weights", false]], "weights (sup3rgan property)": [[45, "sup3r.models.base.Sup3rGan.weights", false]], "weights (sup3rgandc property)": [[49, "sup3r.models.dc.Sup3rGanDC.weights", false]], "winddirection (class in sup3r.preprocessing.derivers.methods)": [[186, "sup3r.preprocessing.derivers.methods.Winddirection", false]], "window_mask() (presrat static method)": [[30, "sup3r.bias.presrat.PresRat.window_mask", false]], "window_mask() (quantiledeltamappingcorrection static method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.window_mask", false]], "windspeed (class in sup3r.preprocessing.derivers.methods)": [[187, "sup3r.preprocessing.derivers.methods.Windspeed", false]], "windspeed_log_law() (in module sup3r.preprocessing.derivers.utilities)": [[193, "sup3r.preprocessing.derivers.utilities.windspeed_log_law", false]], "wrap() (abstractbatchqueue method)": [[122, "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.wrap", false]], "wrap() (basederiver method)": [[166, "sup3r.preprocessing.derivers.base.BaseDeriver.wrap", false]], "wrap() (baseloader method)": [[197, "sup3r.preprocessing.loaders.base.BaseLoader.wrap", false]], "wrap() (baserasterizer method)": [[209, "sup3r.preprocessing.rasterizers.base.BaseRasterizer.wrap", false]], "wrap() (batchhandler method)": [[110, "sup3r.preprocessing.batch_handlers.factory.BatchHandler.wrap", false]], "wrap() (batchhandlercc method)": [[111, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.wrap", false]], "wrap() (batchhandlerdc method)": [[108, "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.wrap", false]], "wrap() (batchhandlermom1 method)": [[113, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.wrap", false]], "wrap() (batchhandlermom1sf method)": [[114, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.wrap", false]], "wrap() (batchhandlermom2 method)": [[115, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.wrap", false]], "wrap() (batchhandlermom2sep method)": [[117, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.wrap", false]], "wrap() (batchhandlermom2sepsf method)": [[118, "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.wrap", false]], "wrap() (batchhandlertestercc method)": [[309, "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.wrap", false]], "wrap() (batchhandlertesterdc method)": [[310, "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.wrap", false]], "wrap() (batchqueuedc method)": [[134, "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.wrap", false]], "wrap() (cacher method)": [[144, "sup3r.preprocessing.cachers.base.Cacher.wrap", false]], "wrap() (collection method)": [[148, "sup3r.preprocessing.collections.base.Collection.wrap", false]], "wrap() (conditionalbatchqueue method)": [[126, "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.wrap", false]], "wrap() (container method)": [[103, "sup3r.preprocessing.base.Container.wrap", false]], "wrap() (dailydatahandler method)": [[153, "sup3r.preprocessing.data_handlers.base.DailyDataHandler.wrap", false]], "wrap() (datahandler method)": [[154, "sup3r.preprocessing.data_handlers.base.DataHandler.wrap", false]], "wrap() (datahandlerh5solarcc method)": [[155, "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC.wrap", false]], "wrap() (datahandlerh5windcc method)": [[156, "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC.wrap", false]], "wrap() (datahandlerncforcc method)": [[162, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC.wrap", false]], "wrap() (datahandlerncforccwithpowerlaw method)": [[163, "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw.wrap", false]], "wrap() (deriver method)": [[167, "sup3r.preprocessing.derivers.base.Deriver.wrap", false]], "wrap() (dualbatchhandler method)": [[119, "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.wrap", false]], "wrap() (dualbatchqueue method)": [[137, "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.wrap", false]], "wrap() (dualrasterizer method)": [[211, "sup3r.preprocessing.rasterizers.dual.DualRasterizer.wrap", false]], "wrap() (dualsampler method)": [[228, "sup3r.preprocessing.samplers.dual.DualSampler.wrap", false]], "wrap() (dualsamplercc method)": [[224, "sup3r.preprocessing.samplers.cc.DualSamplerCC.wrap", false]], "wrap() (dummydata method)": [[313, "sup3r.utilities.pytest.helpers.DummyData.wrap", false]], "wrap() (dummysampler method)": [[314, "sup3r.utilities.pytest.helpers.DummySampler.wrap", false]], "wrap() (loaderh5 method)": [[199, "sup3r.preprocessing.loaders.h5.LoaderH5.wrap", false]], "wrap() (loadernc method)": [[201, "sup3r.preprocessing.loaders.nc.LoaderNC.wrap", false]], "wrap() (queuemom1 method)": [[127, "sup3r.preprocessing.batch_queues.conditional.QueueMom1.wrap", false]], "wrap() (queuemom1sf method)": [[128, "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.wrap", false]], "wrap() (queuemom2 method)": [[129, "sup3r.preprocessing.batch_queues.conditional.QueueMom2.wrap", false]], "wrap() (queuemom2sep method)": [[131, "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.wrap", false]], "wrap() (queuemom2sepsf method)": [[132, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.wrap", false]], "wrap() (queuemom2sf method)": [[130, "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.wrap", false]], "wrap() (rasterizer method)": [[219, "sup3r.preprocessing.rasterizers.extended.Rasterizer.wrap", false]], "wrap() (sampler method)": [[222, "sup3r.preprocessing.samplers.base.Sampler.wrap", false]], "wrap() (samplerdc method)": [[226, "sup3r.preprocessing.samplers.dc.SamplerDC.wrap", false]], "wrap() (samplertester method)": [[315, "sup3r.utilities.pytest.helpers.SamplerTester.wrap", false]], "wrap() (singlebatchqueue method)": [[124, "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.wrap", false]], "wrap() (statscollection method)": [[150, "sup3r.preprocessing.collections.stats.StatsCollection.wrap", false]], "wrap() (valbatchqueuedc method)": [[135, "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.wrap", false]], "writable (rexoutputs property)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.writable", false]], "write() (solar method)": [[277, "sup3r.solar.solar.Solar.write", false]], "write_chunk() (cacher static method)": [[144, "sup3r.preprocessing.cachers.base.Cacher.write_chunk", false]], "write_data() (basecollector class method)": [[82, "sup3r.postprocessing.collectors.base.BaseCollector.write_data", false]], "write_data() (collectorh5 class method)": [[84, "sup3r.postprocessing.collectors.h5.CollectorH5.write_data", false]], "write_data() (collectornc class method)": [[86, "sup3r.postprocessing.collectors.nc.CollectorNC.write_data", false]], "write_data() (outputhandler class method)": [[92, "sup3r.postprocessing.writers.base.OutputHandler.write_data", false]], "write_data() (outputhandlerh5 class method)": [[96, "sup3r.postprocessing.writers.h5.OutputHandlerH5.write_data", false]], "write_data() (outputhandlernc class method)": [[98, "sup3r.postprocessing.writers.nc.OutputHandlerNC.write_data", false]], "write_data() (outputmixin class method)": [[93, "sup3r.postprocessing.writers.base.OutputMixin.write_data", false]], "write_data() (vortexmeanprepper method)": [[19, "sup3r.bias.bias_calc_vortex.VortexMeanPrepper.write_data", false]], "write_dataset() (rexoutputs method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.write_dataset", false]], "write_h5() (cacher class method)": [[144, "sup3r.preprocessing.cachers.base.Cacher.write_h5", false]], "write_means() (rexoutputs class method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.write_means", false]], "write_netcdf() (cacher class method)": [[144, "sup3r.preprocessing.cachers.base.Cacher.write_netcdf", false]], "write_netcdf_chunks() (cacher class method)": [[144, "sup3r.preprocessing.cachers.base.Cacher.write_netcdf_chunks", false]], "write_output() (outputhandler class method)": [[92, "sup3r.postprocessing.writers.base.OutputHandler.write_output", false]], "write_output() (outputhandlerh5 class method)": [[96, "sup3r.postprocessing.writers.h5.OutputHandlerH5.write_output", false]], "write_output() (outputhandlernc class method)": [[98, "sup3r.postprocessing.writers.nc.OutputHandlerNC.write_output", false]], "write_outputs() (linearcorrection method)": [[9, "sup3r.bias.bias_calc.LinearCorrection.write_outputs", false]], "write_outputs() (monthlylinearcorrection method)": [[10, "sup3r.bias.bias_calc.MonthlyLinearCorrection.write_outputs", false]], "write_outputs() (monthlyscalarcorrection method)": [[11, "sup3r.bias.bias_calc.MonthlyScalarCorrection.write_outputs", false]], "write_outputs() (presrat method)": [[30, "sup3r.bias.presrat.PresRat.write_outputs", false]], "write_outputs() (quantiledeltamappingcorrection method)": [[32, "sup3r.bias.qdm.QuantileDeltaMappingCorrection.write_outputs", false]], "write_outputs() (scalarcorrection method)": [[12, "sup3r.bias.bias_calc.ScalarCorrection.write_outputs", false]], "write_outputs() (skillassessment method)": [[13, "sup3r.bias.bias_calc.SkillAssessment.write_outputs", false]], "write_profiles() (rexoutputs class method)": [[94, "sup3r.postprocessing.writers.base.RexOutputs.write_profiles", false]], "xr_open_mfdataset() (in module sup3r.utilities.utilities)": [[334, "sup3r.utilities.utilities.xr_open_mfdataset", false]], "zero_precipitation_rate() (presrat static method)": [[30, "sup3r.bias.presrat.PresRat.zero_precipitation_rate", false]], "zero_precipitation_rate() (zeroratemixin static method)": [[28, "sup3r.bias.mixins.ZeroRateMixin.zero_precipitation_rate", false]], "zeroratemixin (class in sup3r.bias.mixins)": [[28, "sup3r.bias.mixins.ZeroRateMixin", false]], "zfill() (dimension method)": [[206, "sup3r.preprocessing.names.Dimension.zfill", false]], "zfill() (modulename method)": [[282, "sup3r.utilities.ModuleName.zfill", false]]}, "objects": {"": [[0, 0, 0, "-", "sup3r"]], "sup3r": [[1, 0, 0, "-", "batch"], [3, 0, 0, "-", "bias"], [38, 0, 0, "-", "cli"], [39, 0, 0, "-", "models"], [64, 0, 0, "-", "pipeline"], [79, 0, 0, "-", "postprocessing"], [99, 0, 0, "-", "preprocessing"], [262, 0, 0, "-", "qa"], [275, 0, 0, "-", "solar"], [281, 0, 0, "-", "utilities"], [336, 6, 1, "cmdoption-sup3r-c", "--config_file"], [336, 6, 1, "cmdoption-sup3r-v", "--verbose"], [336, 6, 1, "cmdoption-sup3r-version", "--version"], [336, 6, 1, "cmdoption-sup3r-c", "-c"], [336, 6, 1, "cmdoption-sup3r-v", "-v"]], "sup3r-batch": [[336, 6, 1, "cmdoption-sup3r-batch-cancel", "--cancel"], [336, 6, 1, "cmdoption-sup3r-batch-delete", "--delete"], [336, 6, 1, "cmdoption-sup3r-batch-dry-run", "--dry-run"], [336, 6, 1, "cmdoption-sup3r-batch-monitor-background", "--monitor-background"], [336, 6, 1, "cmdoption-sup3r-batch-v", "--verbose"], [336, 6, 1, "cmdoption-sup3r-batch-v", "-v"]], "sup3r-bias-calc": [[336, 6, 1, "cmdoption-sup3r-bias-calc-v", "--verbose"], [336, 6, 1, "cmdoption-sup3r-bias-calc-v", "-v"]], "sup3r-data-collect": [[336, 6, 1, "cmdoption-sup3r-data-collect-v", "--verbose"], [336, 6, 1, "cmdoption-sup3r-data-collect-v", "-v"]], "sup3r-forward-pass": [[336, 6, 1, "cmdoption-sup3r-forward-pass-v", "--verbose"], [336, 6, 1, "cmdoption-sup3r-forward-pass-v", "-v"]], "sup3r-pipeline": [[336, 6, 1, "cmdoption-sup3r-pipeline-background", "--background"], [336, 6, 1, "cmdoption-sup3r-pipeline-cancel", "--cancel"], [336, 6, 1, "cmdoption-sup3r-pipeline-monitor", "--monitor"], [336, 6, 1, "cmdoption-sup3r-pipeline-v", "--verbose"], [336, 6, 1, "cmdoption-sup3r-pipeline-v", "-v"]], "sup3r-qa": [[336, 6, 1, "cmdoption-sup3r-qa-v", "--verbose"], [336, 6, 1, "cmdoption-sup3r-qa-v", "-v"]], "sup3r-solar": [[336, 6, 1, "cmdoption-sup3r-solar-v", "--verbose"], [336, 6, 1, "cmdoption-sup3r-solar-v", "-v"]], "sup3r.batch": [[2, 0, 0, "-", "batch_cli"]], "sup3r.bias": [[4, 0, 0, "-", "abstract"], [6, 0, 0, "-", "base"], [8, 0, 0, "-", "bias_calc"], [14, 0, 0, "-", "bias_calc_cli"], [17, 0, 0, "-", "bias_calc_vortex"], [20, 0, 0, "-", "bias_transforms"], [26, 0, 0, "-", "mixins"], [29, 0, 0, "-", "presrat"], [31, 0, 0, "-", "qdm"], [33, 0, 0, "-", "utilities"]], "sup3r.bias.abstract": [[5, 1, 1, "", "AbstractBiasCorrection"]], "sup3r.bias.abstract.AbstractBiasCorrection": [[5, 2, 1, "", "run"]], "sup3r.bias.base": [[7, 1, 1, "", "DataRetrievalBase"]], "sup3r.bias.base.DataRetrievalBase": [[7, 2, 1, "", "compare_dists"], [7, 3, 1, "", "distance_upper_bound"], [7, 2, 1, "", "get_base_data"], [7, 2, 1, "", "get_base_gid"], [7, 2, 1, "", "get_bias_data"], [7, 2, 1, "", "get_bias_gid"], [7, 2, 1, "", "get_data_pair"], [7, 2, 1, "", "get_node_cmd"], [7, 3, 1, "", "meta"], [7, 2, 1, "", "pre_load"]], "sup3r.bias.bias_calc": [[9, 1, 1, "", "LinearCorrection"], [10, 1, 1, "", "MonthlyLinearCorrection"], [11, 1, 1, "", "MonthlyScalarCorrection"], [12, 1, 1, "", "ScalarCorrection"], [13, 1, 1, "", "SkillAssessment"]], "sup3r.bias.bias_calc.LinearCorrection": [[9, 4, 1, "", "NT"], [9, 2, 1, "", "compare_dists"], [9, 3, 1, "", "distance_upper_bound"], [9, 2, 1, "", "fill_and_smooth"], [9, 2, 1, "", "get_base_data"], [9, 2, 1, "", "get_base_gid"], [9, 2, 1, "", "get_bias_data"], [9, 2, 1, "", "get_bias_gid"], [9, 2, 1, "", "get_data_pair"], [9, 2, 1, "", "get_linear_correction"], [9, 2, 1, "", "get_node_cmd"], [9, 3, 1, "", "meta"], [9, 2, 1, "", "pre_load"], [9, 2, 1, "", "run"], [9, 2, 1, "", "write_outputs"]], "sup3r.bias.bias_calc.MonthlyLinearCorrection": [[10, 4, 1, "", "NT"], [10, 2, 1, "", "compare_dists"], [10, 3, 1, "", "distance_upper_bound"], [10, 2, 1, "", "fill_and_smooth"], [10, 2, 1, "", "get_base_data"], [10, 2, 1, "", "get_base_gid"], [10, 2, 1, "", "get_bias_data"], [10, 2, 1, "", "get_bias_gid"], [10, 2, 1, "", "get_data_pair"], [10, 2, 1, "", "get_linear_correction"], [10, 2, 1, "", "get_node_cmd"], [10, 3, 1, "", "meta"], [10, 2, 1, "", "pre_load"], [10, 2, 1, "", "run"], [10, 2, 1, "", "write_outputs"]], "sup3r.bias.bias_calc.MonthlyScalarCorrection": [[11, 4, 1, "", "NT"], [11, 2, 1, "", "compare_dists"], [11, 3, 1, "", "distance_upper_bound"], [11, 2, 1, "", "fill_and_smooth"], [11, 2, 1, "", "get_base_data"], [11, 2, 1, "", "get_base_gid"], [11, 2, 1, "", "get_bias_data"], [11, 2, 1, "", "get_bias_gid"], [11, 2, 1, "", "get_data_pair"], [11, 2, 1, "", "get_linear_correction"], [11, 2, 1, "", "get_node_cmd"], [11, 3, 1, "", "meta"], [11, 2, 1, "", "pre_load"], [11, 2, 1, "", "run"], [11, 2, 1, "", "write_outputs"]], "sup3r.bias.bias_calc.ScalarCorrection": [[12, 4, 1, "", "NT"], [12, 2, 1, "", "compare_dists"], [12, 3, 1, "", "distance_upper_bound"], [12, 2, 1, "", "fill_and_smooth"], [12, 2, 1, "", "get_base_data"], [12, 2, 1, "", "get_base_gid"], [12, 2, 1, "", "get_bias_data"], [12, 2, 1, "", "get_bias_gid"], [12, 2, 1, "", "get_data_pair"], [12, 2, 1, "", "get_linear_correction"], [12, 2, 1, "", "get_node_cmd"], [12, 3, 1, "", "meta"], [12, 2, 1, "", "pre_load"], [12, 2, 1, "", "run"], [12, 2, 1, "", "write_outputs"]], "sup3r.bias.bias_calc.SkillAssessment": [[13, 4, 1, "", "NT"], [13, 4, 1, "", "PERCENTILES"], [13, 2, 1, "", "compare_dists"], [13, 3, 1, "", "distance_upper_bound"], [13, 2, 1, "", "fill_and_smooth"], [13, 2, 1, "", "get_base_data"], [13, 2, 1, "", "get_base_gid"], [13, 2, 1, "", "get_bias_data"], [13, 2, 1, "", "get_bias_gid"], [13, 2, 1, "", "get_data_pair"], [13, 2, 1, "", "get_linear_correction"], [13, 2, 1, "", "get_node_cmd"], [13, 3, 1, "", "meta"], [13, 2, 1, "", "pre_load"], [13, 2, 1, "", "run"], [13, 2, 1, "", "write_outputs"]], "sup3r.bias.bias_calc_cli": [[15, 5, 1, "", "kickoff_local_job"], [16, 5, 1, "", "kickoff_slurm_job"]], "sup3r.bias.bias_calc_vortex": [[18, 1, 1, "", "BiasCorrectUpdate"], [19, 1, 1, "", "VortexMeanPrepper"]], "sup3r.bias.bias_calc_vortex.BiasCorrectUpdate": [[18, 2, 1, "", "get_bc_factors"], [18, 2, 1, "", "run"], [18, 2, 1, "", "update_file"]], "sup3r.bias.bias_calc_vortex.VortexMeanPrepper": [[19, 2, 1, "", "convert_all_tifs"], [19, 2, 1, "", "convert_month_height_tif"], [19, 2, 1, "", "convert_month_tif"], [19, 2, 1, "", "get_all_data"], [19, 2, 1, "", "get_height_files"], [19, 2, 1, "", "get_input_file"], [19, 2, 1, "", "get_lat_lon"], [19, 2, 1, "", "get_month"], [19, 2, 1, "", "get_output_file"], [19, 3, 1, "", "global_attrs"], [19, 3, 1, "", "in_features"], [19, 3, 1, "", "input_files"], [19, 2, 1, "", "interp"], [19, 3, 1, "", "mask"], [19, 3, 1, "", "meta"], [19, 3, 1, "", "out_features"], [19, 3, 1, "", "output_files"], [19, 2, 1, "", "run"], [19, 3, 1, "", "time_index"], [19, 2, 1, "", "write_data"]], "sup3r.bias.bias_transforms": [[21, 5, 1, "", "global_linear_bc"], [22, 5, 1, "", "local_linear_bc"], [23, 5, 1, "", "local_presrat_bc"], [24, 5, 1, "", "local_qdm_bc"], [25, 5, 1, "", "monthly_local_linear_bc"]], "sup3r.bias.mixins": [[27, 1, 1, "", "FillAndSmoothMixin"], [28, 1, 1, "", "ZeroRateMixin"]], "sup3r.bias.mixins.FillAndSmoothMixin": [[27, 2, 1, "", "fill_and_smooth"]], "sup3r.bias.mixins.ZeroRateMixin": [[28, 2, 1, "", "zero_precipitation_rate"]], "sup3r.bias.presrat": [[30, 1, 1, "", "PresRat"]], "sup3r.bias.presrat.PresRat": [[30, 2, 1, "", "calc_k_factor"], [30, 2, 1, "", "calc_tau_fut"], [30, 2, 1, "", "compare_dists"], [30, 3, 1, "", "distance_upper_bound"], [30, 2, 1, "", "fill_and_smooth"], [30, 2, 1, "", "get_base_data"], [30, 2, 1, "", "get_base_gid"], [30, 2, 1, "", "get_bias_data"], [30, 2, 1, "", "get_bias_gid"], [30, 2, 1, "", "get_data_pair"], [30, 2, 1, "", "get_node_cmd"], [30, 2, 1, "", "get_qdm_params"], [30, 3, 1, "", "meta"], [30, 2, 1, "", "pre_load"], [30, 2, 1, "", "run"], [30, 2, 1, "", "window_mask"], [30, 2, 1, "", "write_outputs"], [30, 2, 1, "", "zero_precipitation_rate"]], "sup3r.bias.qdm": [[32, 1, 1, "", "QuantileDeltaMappingCorrection"]], "sup3r.bias.qdm.QuantileDeltaMappingCorrection": [[32, 2, 1, "", "compare_dists"], [32, 3, 1, "", "distance_upper_bound"], [32, 2, 1, "", "fill_and_smooth"], [32, 2, 1, "", "get_base_data"], [32, 2, 1, "", "get_base_gid"], [32, 2, 1, "", "get_bias_data"], [32, 2, 1, "", "get_bias_gid"], [32, 2, 1, "", "get_data_pair"], [32, 2, 1, "", "get_node_cmd"], [32, 2, 1, "", "get_qdm_params"], [32, 3, 1, "", "meta"], [32, 2, 1, "", "pre_load"], [32, 2, 1, "", "run"], [32, 2, 1, "", "window_mask"], [32, 2, 1, "", "write_outputs"]], "sup3r.bias.utilities": [[34, 5, 1, "", "bias_correct_feature"], [35, 5, 1, "", "bias_correct_features"], [36, 5, 1, "", "lin_bc"], [37, 5, 1, "", "qdm_bc"]], "sup3r.models": [[40, 0, 0, "-", "abstract"], [44, 0, 0, "-", "base"], [46, 0, 0, "-", "conditional"], [48, 0, 0, "-", "dc"], [50, 0, 0, "-", "linear"], [52, 0, 0, "-", "multi_step"], [56, 0, 0, "-", "solar_cc"], [58, 0, 0, "-", "surface"], [60, 0, 0, "-", "utilities"]], "sup3r.models.abstract": [[41, 1, 1, "", "AbstractInterface"], [42, 1, 1, "", "AbstractSingleModel"], [43, 1, 1, "", "TensorboardMixIn"]], "sup3r.models.abstract.AbstractInterface": [[41, 2, 1, "", "generate"], [41, 2, 1, "", "get_s_enhance_from_layers"], [41, 2, 1, "", "get_t_enhance_from_layers"], [41, 3, 1, "", "hr_exo_features"], [41, 3, 1, "", "hr_out_features"], [41, 3, 1, "", "input_dims"], [41, 3, 1, "", "input_resolution"], [41, 3, 1, "", "is_4d"], [41, 3, 1, "", "is_5d"], [41, 2, 1, "", "load"], [41, 3, 1, "", "lr_features"], [41, 3, 1, "", "meta"], [41, 3, 1, "", "model_params"], [41, 3, 1, "", "output_resolution"], [41, 3, 1, "", "s_enhance"], [41, 3, 1, "", "s_enhancements"], [41, 2, 1, "", "save_params"], [41, 2, 1, "", "seed"], [41, 2, 1, "", "set_model_params"], [41, 3, 1, "", "smoothed_features"], [41, 3, 1, "", "smoothing"], [41, 3, 1, "", "t_enhance"], [41, 3, 1, "", "t_enhancements"], [41, 3, 1, "", "version_record"]], "sup3r.models.abstract.AbstractSingleModel": [[42, 2, 1, "", "dict_to_tensorboard"], [42, 2, 1, "", "early_stop"], [42, 2, 1, "", "finish_epoch"], [42, 2, 1, "", "generate"], [42, 3, 1, "", "generator"], [42, 3, 1, "", "generator_weights"], [42, 2, 1, "", "get_high_res_exo_input"], [42, 2, 1, "", "get_loss_fun"], [42, 2, 1, "", "get_optimizer_config"], [42, 2, 1, "", "get_optimizer_state"], [42, 2, 1, "", "get_single_grad"], [42, 3, 1, "", "history"], [42, 2, 1, "", "init_optimizer"], [42, 2, 1, "", "load_network"], [42, 2, 1, "", "load_saved_params"], [42, 2, 1, "", "log_loss_details"], [42, 3, 1, "", "means"], [42, 2, 1, "", "norm_input"], [42, 3, 1, "", "optimizer"], [42, 2, 1, "", "profile_to_tensorboard"], [42, 2, 1, "", "run_gradient_descent"], [42, 2, 1, "", "save"], [42, 2, 1, "", "set_norm_stats"], [42, 3, 1, "", "stdevs"], [42, 3, 1, "", "total_batches"], [42, 2, 1, "", "un_norm_output"], [42, 2, 1, "", "update_loss_details"]], "sup3r.models.abstract.TensorboardMixIn": [[43, 2, 1, "", "dict_to_tensorboard"], [43, 2, 1, "", "profile_to_tensorboard"], [43, 3, 1, "", "total_batches"]], "sup3r.models.base": [[45, 1, 1, "", "Sup3rGan"]], "sup3r.models.base.Sup3rGan": [[45, 2, 1, "", "calc_loss"], [45, 2, 1, "", "calc_loss_disc"], [45, 2, 1, "", "calc_loss_gen_advers"], [45, 2, 1, "", "calc_loss_gen_content"], [45, 2, 1, "", "calc_val_loss"], [45, 2, 1, "", "check_batch_handler_attrs"], [45, 2, 1, "", "dict_to_tensorboard"], [45, 2, 1, "", "discriminate"], [45, 3, 1, "", "discriminator"], [45, 3, 1, "", "discriminator_weights"], [45, 2, 1, "", "early_stop"], [45, 2, 1, "", "finish_epoch"], [45, 2, 1, "", "generate"], [45, 3, 1, "", "generator"], [45, 3, 1, "", "generator_weights"], [45, 2, 1, "", "get_high_res_exo_input"], [45, 2, 1, "", "get_loss_fun"], [45, 2, 1, "", "get_optimizer_config"], [45, 2, 1, "", "get_optimizer_state"], [45, 2, 1, "", "get_s_enhance_from_layers"], [45, 2, 1, "", "get_single_grad"], [45, 2, 1, "", "get_t_enhance_from_layers"], [45, 2, 1, "", "get_weight_update_fraction"], [45, 3, 1, "", "history"], [45, 3, 1, "", "hr_exo_features"], [45, 3, 1, "", "hr_out_features"], [45, 2, 1, "", "init_optimizer"], [45, 2, 1, "", "init_weights"], [45, 3, 1, "", "input_dims"], [45, 3, 1, "", "input_resolution"], [45, 3, 1, "", "is_4d"], [45, 3, 1, "", "is_5d"], [45, 2, 1, "", "load"], [45, 2, 1, "", "load_network"], [45, 2, 1, "", "load_saved_params"], [45, 2, 1, "", "log_loss_details"], [45, 3, 1, "", "lr_features"], [45, 3, 1, "", "means"], [45, 3, 1, "", "meta"], [45, 3, 1, "", "model_params"], [45, 2, 1, "", "norm_input"], [45, 3, 1, "", "optimizer"], [45, 3, 1, "", "optimizer_disc"], [45, 3, 1, "", "output_resolution"], [45, 2, 1, "", "profile_to_tensorboard"], [45, 2, 1, "", "run_gradient_descent"], [45, 3, 1, "", "s_enhance"], [45, 3, 1, "", "s_enhancements"], [45, 2, 1, "", "save"], [45, 2, 1, "", "save_params"], [45, 2, 1, "", "seed"], [45, 2, 1, "", "set_model_params"], [45, 2, 1, "", "set_norm_stats"], [45, 3, 1, "", "smoothed_features"], [45, 3, 1, "", "smoothing"], [45, 3, 1, "", "stdevs"], [45, 3, 1, "", "t_enhance"], [45, 3, 1, "", "t_enhancements"], [45, 3, 1, "", "total_batches"], [45, 2, 1, "", "train"], [45, 2, 1, "", "train_epoch"], [45, 2, 1, "", "un_norm_output"], [45, 2, 1, "", "update_adversarial_weights"], [45, 2, 1, "", "update_loss_details"], [45, 2, 1, "", "update_optimizer"], [45, 3, 1, "", "version_record"], [45, 3, 1, "", "weights"]], "sup3r.models.conditional": [[47, 1, 1, "", "Sup3rCondMom"]], "sup3r.models.conditional.Sup3rCondMom": [[47, 2, 1, "", "calc_loss"], [47, 2, 1, "", "calc_loss_cond_mom"], [47, 2, 1, "", "calc_val_loss"], [47, 2, 1, "", "dict_to_tensorboard"], [47, 2, 1, "", "early_stop"], [47, 2, 1, "", "finish_epoch"], [47, 2, 1, "", "generate"], [47, 3, 1, "", "generator"], [47, 3, 1, "", "generator_weights"], [47, 2, 1, "", "get_high_res_exo_input"], [47, 2, 1, "", "get_loss_fun"], [47, 2, 1, "", "get_optimizer_config"], [47, 2, 1, "", "get_optimizer_state"], [47, 2, 1, "", "get_s_enhance_from_layers"], [47, 2, 1, "", "get_single_grad"], [47, 2, 1, "", "get_t_enhance_from_layers"], [47, 3, 1, "", "history"], [47, 3, 1, "", "hr_exo_features"], [47, 3, 1, "", "hr_out_features"], [47, 2, 1, "", "init_optimizer"], [47, 3, 1, "", "input_dims"], [47, 3, 1, "", "input_resolution"], [47, 3, 1, "", "is_4d"], [47, 3, 1, "", "is_5d"], [47, 2, 1, "", "load"], [47, 2, 1, "", "load_network"], [47, 2, 1, "", "load_saved_params"], [47, 2, 1, "", "log_loss_details"], [47, 3, 1, "", "lr_features"], [47, 3, 1, "", "means"], [47, 3, 1, "", "meta"], [47, 3, 1, "", "model_params"], [47, 2, 1, "", "norm_input"], [47, 3, 1, "", "optimizer"], [47, 3, 1, "", "output_resolution"], [47, 2, 1, "", "profile_to_tensorboard"], [47, 2, 1, "", "run_gradient_descent"], [47, 3, 1, "", "s_enhance"], [47, 3, 1, "", "s_enhancements"], [47, 2, 1, "", "save"], [47, 2, 1, "", "save_params"], [47, 2, 1, "", "seed"], [47, 2, 1, "", "set_model_params"], [47, 2, 1, "", "set_norm_stats"], [47, 3, 1, "", "smoothed_features"], [47, 3, 1, "", "smoothing"], [47, 3, 1, "", "stdevs"], [47, 3, 1, "", "t_enhance"], [47, 3, 1, "", "t_enhancements"], [47, 3, 1, "", "total_batches"], [47, 2, 1, "", "train"], [47, 2, 1, "", "train_epoch"], [47, 2, 1, "", "un_norm_output"], [47, 2, 1, "", "update_loss_details"], [47, 2, 1, "", "update_optimizer"], [47, 3, 1, "", "version_record"], [47, 3, 1, "", "weights"]], "sup3r.models.dc": [[49, 1, 1, "", "Sup3rGanDC"]], "sup3r.models.dc.Sup3rGanDC": [[49, 2, 1, "", "calc_loss"], [49, 2, 1, "", "calc_loss_disc"], [49, 2, 1, "", "calc_loss_gen_advers"], [49, 2, 1, "", "calc_loss_gen_content"], [49, 2, 1, "", "calc_val_loss"], [49, 2, 1, "", "calc_val_loss_gen"], [49, 2, 1, "", "calc_val_loss_gen_content"], [49, 2, 1, "", "check_batch_handler_attrs"], [49, 2, 1, "", "dict_to_tensorboard"], [49, 2, 1, "", "discriminate"], [49, 3, 1, "", "discriminator"], [49, 3, 1, "", "discriminator_weights"], [49, 2, 1, "", "early_stop"], [49, 2, 1, "", "finish_epoch"], [49, 2, 1, "", "generate"], [49, 3, 1, "", "generator"], [49, 3, 1, "", "generator_weights"], [49, 2, 1, "", "get_high_res_exo_input"], [49, 2, 1, "", "get_loss_fun"], [49, 2, 1, "", "get_optimizer_config"], [49, 2, 1, "", "get_optimizer_state"], [49, 2, 1, "", "get_s_enhance_from_layers"], [49, 2, 1, "", "get_single_grad"], [49, 2, 1, "", "get_t_enhance_from_layers"], [49, 2, 1, "", "get_weight_update_fraction"], [49, 3, 1, "", "history"], [49, 3, 1, "", "hr_exo_features"], [49, 3, 1, "", "hr_out_features"], [49, 2, 1, "", "init_optimizer"], [49, 2, 1, "", "init_weights"], [49, 3, 1, "", "input_dims"], [49, 3, 1, "", "input_resolution"], [49, 3, 1, "", "is_4d"], [49, 3, 1, "", "is_5d"], [49, 2, 1, "", "load"], [49, 2, 1, "", "load_network"], [49, 2, 1, "", "load_saved_params"], [49, 2, 1, "", "log_loss_details"], [49, 3, 1, "", "lr_features"], [49, 3, 1, "", "means"], [49, 3, 1, "", "meta"], [49, 3, 1, "", "model_params"], [49, 2, 1, "", "norm_input"], [49, 3, 1, "", "optimizer"], [49, 3, 1, "", "optimizer_disc"], [49, 3, 1, "", "output_resolution"], [49, 2, 1, "", "profile_to_tensorboard"], [49, 2, 1, "", "run_gradient_descent"], [49, 3, 1, "", "s_enhance"], [49, 3, 1, "", "s_enhancements"], [49, 2, 1, "", "save"], [49, 2, 1, "", "save_params"], [49, 2, 1, "", "seed"], [49, 2, 1, "", "set_model_params"], [49, 2, 1, "", "set_norm_stats"], [49, 3, 1, "", "smoothed_features"], [49, 3, 1, "", "smoothing"], [49, 3, 1, "", "stdevs"], [49, 3, 1, "", "t_enhance"], [49, 3, 1, "", "t_enhancements"], [49, 3, 1, "", "total_batches"], [49, 2, 1, "", "train"], [49, 2, 1, "", "train_epoch"], [49, 2, 1, "", "un_norm_output"], [49, 2, 1, "", "update_adversarial_weights"], [49, 2, 1, "", "update_loss_details"], [49, 2, 1, "", "update_optimizer"], [49, 3, 1, "", "version_record"], [49, 3, 1, "", "weights"]], "sup3r.models.linear": [[51, 1, 1, "", "LinearInterp"]], "sup3r.models.linear.LinearInterp": [[51, 2, 1, "", "generate"], [51, 2, 1, "", "get_s_enhance_from_layers"], [51, 2, 1, "", "get_t_enhance_from_layers"], [51, 3, 1, "", "hr_exo_features"], [51, 3, 1, "", "hr_out_features"], [51, 3, 1, "", "input_dims"], [51, 3, 1, "", "input_resolution"], [51, 3, 1, "", "is_4d"], [51, 3, 1, "", "is_5d"], [51, 2, 1, "", "load"], [51, 3, 1, "", "lr_features"], [51, 3, 1, "", "meta"], [51, 3, 1, "", "model_params"], [51, 3, 1, "", "output_resolution"], [51, 3, 1, "", "s_enhance"], [51, 3, 1, "", "s_enhancements"], [51, 2, 1, "", "save"], [51, 2, 1, "", "save_params"], [51, 2, 1, "", "seed"], [51, 2, 1, "", "set_model_params"], [51, 3, 1, "", "smoothed_features"], [51, 3, 1, "", "smoothing"], [51, 3, 1, "", "t_enhance"], [51, 3, 1, "", "t_enhancements"], [51, 3, 1, "", "version_record"]], "sup3r.models.multi_step": [[53, 1, 1, "", "MultiStepGan"], [54, 1, 1, "", "MultiStepSurfaceMetGan"], [55, 1, 1, "", "SolarMultiStepGan"]], "sup3r.models.multi_step.MultiStepGan": [[53, 2, 1, "", "generate"], [53, 2, 1, "", "get_s_enhance_from_layers"], [53, 2, 1, "", "get_t_enhance_from_layers"], [53, 3, 1, "", "hr_exo_features"], [53, 3, 1, "", "hr_out_features"], [53, 3, 1, "", "input_dims"], [53, 3, 1, "", "input_resolution"], [53, 3, 1, "", "is_4d"], [53, 3, 1, "", "is_5d"], [53, 2, 1, "", "load"], [53, 3, 1, "", "lr_features"], [53, 3, 1, "", "means"], [53, 3, 1, "", "meta"], [53, 3, 1, "", "model_params"], [53, 3, 1, "", "models"], [53, 3, 1, "", "output_resolution"], [53, 3, 1, "", "s_enhance"], [53, 3, 1, "", "s_enhancements"], [53, 2, 1, "", "save_params"], [53, 2, 1, "", "seed"], [53, 2, 1, "", "set_model_params"], [53, 3, 1, "", "smoothed_features"], [53, 3, 1, "", "smoothing"], [53, 3, 1, "", "stdevs"], [53, 3, 1, "", "t_enhance"], [53, 3, 1, "", "t_enhancements"], [53, 3, 1, "", "version_record"]], "sup3r.models.multi_step.MultiStepSurfaceMetGan": [[54, 2, 1, "", "generate"], [54, 2, 1, "", "get_s_enhance_from_layers"], [54, 2, 1, "", "get_t_enhance_from_layers"], [54, 3, 1, "", "hr_exo_features"], [54, 3, 1, "", "hr_out_features"], [54, 3, 1, "", "input_dims"], [54, 3, 1, "", "input_resolution"], [54, 3, 1, "", "is_4d"], [54, 3, 1, "", "is_5d"], [54, 2, 1, "", "load"], [54, 3, 1, "", "lr_features"], [54, 3, 1, "", "means"], [54, 3, 1, "", "meta"], [54, 3, 1, "", "model_params"], [54, 3, 1, "", "models"], [54, 3, 1, "", "output_resolution"], [54, 3, 1, "", "s_enhance"], [54, 3, 1, "", "s_enhancements"], [54, 2, 1, "", "save_params"], [54, 2, 1, "", "seed"], [54, 2, 1, "", "set_model_params"], [54, 3, 1, "", "smoothed_features"], [54, 3, 1, "", "smoothing"], [54, 3, 1, "", "stdevs"], [54, 3, 1, "", "t_enhance"], [54, 3, 1, "", "t_enhancements"], [54, 3, 1, "", "version_record"]], "sup3r.models.multi_step.SolarMultiStepGan": [[55, 2, 1, "", "generate"], [55, 2, 1, "", "get_s_enhance_from_layers"], [55, 2, 1, "", "get_t_enhance_from_layers"], [55, 3, 1, "", "hr_exo_features"], [55, 3, 1, "", "hr_out_features"], [55, 3, 1, "", "idf_solar"], [55, 3, 1, "", "idf_wind"], [55, 3, 1, "", "idf_wind_out"], [55, 3, 1, "", "input_dims"], [55, 3, 1, "", "input_resolution"], [55, 3, 1, "", "is_4d"], [55, 3, 1, "", "is_5d"], [55, 2, 1, "", "load"], [55, 3, 1, "", "lr_features"], [55, 3, 1, "", "means"], [55, 3, 1, "", "meta"], [55, 3, 1, "", "model_params"], [55, 3, 1, "", "models"], [55, 3, 1, "", "output_resolution"], [55, 2, 1, "", "preflight"], [55, 3, 1, "", "s_enhance"], [55, 3, 1, "", "s_enhancements"], [55, 2, 1, "", "save_params"], [55, 2, 1, "", "seed"], [55, 2, 1, "", "set_model_params"], [55, 3, 1, "", "smoothed_features"], [55, 3, 1, "", "smoothing"], [55, 3, 1, "", "spatial_solar_models"], [55, 3, 1, "", "spatial_wind_models"], [55, 3, 1, "", "stdevs"], [55, 3, 1, "", "t_enhance"], [55, 3, 1, "", "t_enhancements"], [55, 2, 1, "", "temporal_pad"], [55, 3, 1, "", "temporal_solar_models"], [55, 3, 1, "", "version_record"]], "sup3r.models.solar_cc": [[57, 1, 1, "", "SolarCC"]], "sup3r.models.solar_cc.SolarCC": [[57, 4, 1, "", "DAYLIGHT_HOURS"], [57, 4, 1, "", "POINT_LOSS_HOURS"], [57, 4, 1, "", "STARTING_HOUR"], [57, 2, 1, "", "calc_loss"], [57, 2, 1, "", "calc_loss_disc"], [57, 2, 1, "", "calc_loss_gen_advers"], [57, 2, 1, "", "calc_loss_gen_content"], [57, 2, 1, "", "calc_val_loss"], [57, 2, 1, "", "check_batch_handler_attrs"], [57, 2, 1, "", "dict_to_tensorboard"], [57, 2, 1, "", "discriminate"], [57, 3, 1, "", "discriminator"], [57, 3, 1, "", "discriminator_weights"], [57, 2, 1, "", "early_stop"], [57, 2, 1, "", "finish_epoch"], [57, 2, 1, "", "generate"], [57, 3, 1, "", "generator"], [57, 3, 1, "", "generator_weights"], [57, 2, 1, "", "get_high_res_exo_input"], [57, 2, 1, "", "get_loss_fun"], [57, 2, 1, "", "get_optimizer_config"], [57, 2, 1, "", "get_optimizer_state"], [57, 2, 1, "", "get_s_enhance_from_layers"], [57, 2, 1, "", "get_single_grad"], [57, 2, 1, "", "get_t_enhance_from_layers"], [57, 2, 1, "", "get_weight_update_fraction"], [57, 3, 1, "", "history"], [57, 3, 1, "", "hr_exo_features"], [57, 3, 1, "", "hr_out_features"], [57, 2, 1, "", "init_optimizer"], [57, 2, 1, "", "init_weights"], [57, 3, 1, "", "input_dims"], [57, 3, 1, "", "input_resolution"], [57, 3, 1, "", "is_4d"], [57, 3, 1, "", "is_5d"], [57, 2, 1, "", "load"], [57, 2, 1, "", "load_network"], [57, 2, 1, "", "load_saved_params"], [57, 2, 1, "", "log_loss_details"], [57, 3, 1, "", "lr_features"], [57, 3, 1, "", "means"], [57, 3, 1, "", "meta"], [57, 3, 1, "", "model_params"], [57, 2, 1, "", "norm_input"], [57, 3, 1, "", "optimizer"], [57, 3, 1, "", "optimizer_disc"], [57, 3, 1, "", "output_resolution"], [57, 2, 1, "", "profile_to_tensorboard"], [57, 2, 1, "", "run_gradient_descent"], [57, 3, 1, "", "s_enhance"], [57, 3, 1, "", "s_enhancements"], [57, 2, 1, "", "save"], [57, 2, 1, "", "save_params"], [57, 2, 1, "", "seed"], [57, 2, 1, "", "set_model_params"], [57, 2, 1, "", "set_norm_stats"], [57, 3, 1, "", "smoothed_features"], [57, 3, 1, "", "smoothing"], [57, 3, 1, "", "stdevs"], [57, 3, 1, "", "t_enhance"], [57, 3, 1, "", "t_enhancements"], [57, 2, 1, "", "temporal_pad"], [57, 3, 1, "", "total_batches"], [57, 2, 1, "", "train"], [57, 2, 1, "", "train_epoch"], [57, 2, 1, "", "un_norm_output"], [57, 2, 1, "", "update_adversarial_weights"], [57, 2, 1, "", "update_loss_details"], [57, 2, 1, "", "update_optimizer"], [57, 3, 1, "", "version_record"], [57, 3, 1, "", "weights"]], "sup3r.models.surface": [[59, 1, 1, "", "SurfaceSpatialMetModel"]], "sup3r.models.surface.SurfaceSpatialMetModel": [[59, 4, 1, "", "PRES_DIV"], [59, 4, 1, "", "PRES_EXP"], [59, 4, 1, "", "TEMP_LAPSE"], [59, 4, 1, "", "W_DELTA_TEMP"], [59, 4, 1, "", "W_DELTA_TOPO"], [59, 2, 1, "", "downscale_arr"], [59, 2, 1, "", "downscale_pres"], [59, 2, 1, "", "downscale_rh"], [59, 2, 1, "", "downscale_temp"], [59, 3, 1, "", "feature_inds_other"], [59, 3, 1, "", "feature_inds_pres"], [59, 3, 1, "", "feature_inds_rh"], [59, 3, 1, "", "feature_inds_temp"], [59, 2, 1, "", "fix_downscaled_bias"], [59, 2, 1, "", "generate"], [59, 2, 1, "", "get_s_enhance_from_layers"], [59, 2, 1, "", "get_t_enhance_from_layers"], [59, 3, 1, "", "hr_exo_features"], [59, 3, 1, "", "hr_out_features"], [59, 3, 1, "", "input_dims"], [59, 3, 1, "", "input_resolution"], [59, 3, 1, "", "is_4d"], [59, 3, 1, "", "is_5d"], [59, 2, 1, "", "load"], [59, 3, 1, "", "lr_features"], [59, 3, 1, "", "meta"], [59, 3, 1, "", "model_params"], [59, 3, 1, "", "output_resolution"], [59, 3, 1, "", "s_enhance"], [59, 3, 1, "", "s_enhancements"], [59, 2, 1, "", "save"], [59, 2, 1, "", "save_params"], [59, 2, 1, "", "seed"], [59, 2, 1, "", "set_model_params"], [59, 3, 1, "", "smoothed_features"], [59, 3, 1, "", "smoothing"], [59, 3, 1, "", "t_enhance"], [59, 3, 1, "", "t_enhancements"], [59, 2, 1, "", "train"], [59, 3, 1, "", "version_record"]], "sup3r.models.utilities": [[61, 1, 1, "", "TrainingSession"], [62, 5, 1, "", "get_optimizer_class"], [63, 5, 1, "", "st_interp"]], "sup3r.models.utilities.TrainingSession": [[61, 2, 1, "", "run"]], "sup3r.pipeline": [[65, 0, 0, "-", "forward_pass"], [67, 0, 0, "-", "forward_pass_cli"], [70, 0, 0, "-", "pipeline_cli"], [71, 0, 0, "-", "slicer"], [73, 0, 0, "-", "strategy"], [76, 0, 0, "-", "utilities"]], "sup3r.pipeline.forward_pass": [[66, 1, 1, "", "ForwardPass"]], "sup3r.pipeline.forward_pass.ForwardPass": [[66, 2, 1, "", "get_input_chunk"], [66, 2, 1, "", "get_node_cmd"], [66, 3, 1, "", "meta"], [66, 2, 1, "", "pad_source_data"], [66, 2, 1, "", "run"], [66, 2, 1, "", "run_chunk"], [66, 2, 1, "", "run_generator"]], "sup3r.pipeline.forward_pass_cli": [[68, 5, 1, "", "kickoff_local_job"], [69, 5, 1, "", "kickoff_slurm_job"]], "sup3r.pipeline.slicer": [[72, 1, 1, "", "ForwardPassSlicer"]], "sup3r.pipeline.slicer.ForwardPassSlicer": [[72, 2, 1, "", "check_boundary_slice"], [72, 3, 1, "", "chunk_lookup"], [72, 3, 1, "", "extra_padding"], [72, 2, 1, "", "get_chunk_indices"], [72, 2, 1, "", "get_cropped_slices"], [72, 2, 1, "", "get_hr_slices"], [72, 2, 1, "", "get_pad_width"], [72, 2, 1, "", "get_padded_slices"], [72, 2, 1, "", "get_spatial_slices"], [72, 2, 1, "", "get_time_slices"], [72, 3, 1, "", "hr_crop_slices"], [72, 3, 1, "", "n_chunks"], [72, 3, 1, "", "n_spatial_chunks"], [72, 3, 1, "", "n_time_chunks"], [72, 3, 1, "", "s1_hr_crop_slices"], [72, 3, 1, "", "s1_hr_slices"], [72, 3, 1, "", "s1_lr_pad_slices"], [72, 3, 1, "", "s1_lr_slices"], [72, 3, 1, "", "s2_hr_crop_slices"], [72, 3, 1, "", "s2_hr_slices"], [72, 3, 1, "", "s2_lr_pad_slices"], [72, 3, 1, "", "s2_lr_slices"], [72, 3, 1, "", "s_hr_crop_slices"], [72, 3, 1, "", "s_hr_slices"], [72, 3, 1, "", "s_lr_crop_slices"], [72, 3, 1, "", "s_lr_pad_slices"], [72, 3, 1, "", "s_lr_slices"], [72, 3, 1, "", "spatial_chunk_lookup"], [72, 3, 1, "", "t_hr_crop_slices"], [72, 3, 1, "", "t_lr_crop_slices"], [72, 3, 1, "", "t_lr_pad_slices"], [72, 3, 1, "", "t_lr_slices"]], "sup3r.pipeline.strategy": [[74, 1, 1, "", "ForwardPassChunk"], [75, 1, 1, "", "ForwardPassStrategy"]], "sup3r.pipeline.strategy.ForwardPassStrategy": [[75, 2, 1, "", "chunk_finished"], [75, 2, 1, "", "chunk_masked"], [75, 3, 1, "", "fwp_mask"], [75, 2, 1, "", "get_chunk_indices"], [75, 2, 1, "", "get_exo_cache_files"], [75, 2, 1, "", "get_exo_kwargs"], [75, 3, 1, "", "hr_lat_lon"], [75, 2, 1, "", "init_chunk"], [75, 2, 1, "", "init_input_handler"], [75, 2, 1, "", "load_exo_data"], [75, 3, 1, "", "meta"], [75, 3, 1, "", "node_chunks"], [75, 2, 1, "", "node_finished"], [75, 3, 1, "", "out_files"], [75, 2, 1, "", "preflight"], [75, 2, 1, "", "prep_chunk_data"], [75, 3, 1, "", "unmasked_chunks"]], "sup3r.pipeline.utilities": [[77, 5, 1, "", "get_chunk_slices"], [78, 5, 1, "", "get_model"]], "sup3r.postprocessing": [[80, 0, 0, "-", "collectors"], [87, 0, 0, "-", "data_collect_cli"], [90, 0, 0, "-", "writers"]], "sup3r.postprocessing.collectors": [[81, 0, 0, "-", "base"], [83, 0, 0, "-", "h5"], [85, 0, 0, "-", "nc"]], "sup3r.postprocessing.collectors.base": [[82, 1, 1, "", "BaseCollector"]], "sup3r.postprocessing.collectors.base.BaseCollector": [[82, 2, 1, "", "collect"], [82, 2, 1, "", "get_chunk_indices"], [82, 2, 1, "", "get_dset_attrs"], [82, 2, 1, "", "get_node_cmd"], [82, 2, 1, "", "get_time_dim_name"], [82, 2, 1, "", "write_data"]], "sup3r.postprocessing.collectors.h5": [[84, 1, 1, "", "CollectorH5"]], "sup3r.postprocessing.collectors.h5.CollectorH5": [[84, 2, 1, "", "collect"], [84, 2, 1, "", "collect_feature"], [84, 2, 1, "", "get_chunk_indices"], [84, 2, 1, "", "get_collection_attrs"], [84, 2, 1, "", "get_coordinate_indices"], [84, 2, 1, "", "get_data"], [84, 2, 1, "", "get_dset_attrs"], [84, 2, 1, "", "get_flist_chunks"], [84, 2, 1, "", "get_node_cmd"], [84, 2, 1, "", "get_slices"], [84, 2, 1, "", "get_target_and_masked_meta"], [84, 2, 1, "", "get_time_dim_name"], [84, 2, 1, "", "get_unique_chunk_files"], [84, 2, 1, "", "write_data"]], "sup3r.postprocessing.collectors.nc": [[86, 1, 1, "", "CollectorNC"]], "sup3r.postprocessing.collectors.nc.CollectorNC": [[86, 2, 1, "", "collect"], [86, 2, 1, "", "get_chunk_indices"], [86, 2, 1, "", "get_dset_attrs"], [86, 2, 1, "", "get_node_cmd"], [86, 2, 1, "", "get_time_dim_name"], [86, 2, 1, "", "group_spatial_chunks"], [86, 2, 1, "", "write_data"]], "sup3r.postprocessing.data_collect_cli": [[88, 5, 1, "", "kickoff_local_job"], [89, 5, 1, "", "kickoff_slurm_job"]], "sup3r.postprocessing.writers": [[91, 0, 0, "-", "base"], [95, 0, 0, "-", "h5"], [97, 0, 0, "-", "nc"]], "sup3r.postprocessing.writers.base": [[92, 1, 1, "", "OutputHandler"], [93, 1, 1, "", "OutputMixin"], [94, 1, 1, "", "RexOutputs"]], "sup3r.postprocessing.writers.base.OutputHandler": [[92, 2, 1, "", "enforce_limits"], [92, 2, 1, "", "get_dset_attrs"], [92, 2, 1, "", "get_lat_lon"], [92, 2, 1, "", "get_renamed_features"], [92, 2, 1, "", "get_time_dim_name"], [92, 2, 1, "", "get_times"], [92, 2, 1, "", "invert_uv_features"], [92, 2, 1, "", "invert_uv_single_pair"], [92, 2, 1, "", "is_increasing_lons"], [92, 2, 1, "", "pad_lat_lon"], [92, 2, 1, "", "write_data"], [92, 2, 1, "", "write_output"]], "sup3r.postprocessing.writers.base.OutputMixin": [[93, 2, 1, "", "get_dset_attrs"], [93, 2, 1, "", "get_time_dim_name"], [93, 2, 1, "", "write_data"]], "sup3r.postprocessing.writers.base.RexOutputs": [[94, 3, 1, "", "SAM_configs"], [94, 2, 1, "", "add_dataset"], [94, 3, 1, "", "adders"], [94, 3, 1, "", "attrs"], [94, 3, 1, "", "chunks"], [94, 2, 1, "", "close"], [94, 3, 1, "", "coordinates"], [94, 3, 1, "", "data_version"], [94, 3, 1, "", "datasets"], [94, 2, 1, "", "df_str_decode"], [94, 3, 1, "", "dsets"], [94, 3, 1, "", "dtypes"], [94, 3, 1, "", "full_version_record"], [94, 2, 1, "", "get_SAM_df"], [94, 2, 1, "", "get_attrs"], [94, 2, 1, "", "get_config"], [94, 2, 1, "", "get_dset_properties"], [94, 2, 1, "", "get_meta_arr"], [94, 2, 1, "", "get_scale_factor"], [94, 2, 1, "", "get_units"], [94, 3, 1, "", "global_attrs"], [94, 3, 1, "", "groups"], [94, 3, 1, "", "h5"], [94, 2, 1, "", "init_h5"], [94, 2, 1, "", "is_hsds_file"], [94, 2, 1, "", "is_s3_file"], [94, 3, 1, "", "lat_lon"], [94, 3, 1, "", "meta"], [94, 2, 1, "", "open_dataset"], [94, 2, 1, "", "open_file"], [94, 3, 1, "", "package"], [94, 2, 1, "", "preload_SAM"], [94, 3, 1, "", "res_dsets"], [94, 3, 1, "", "resource_datasets"], [94, 3, 1, "", "run_attrs"], [94, 3, 1, "", "scale_factors"], [94, 2, 1, "", "set_configs"], [94, 2, 1, "", "set_version_attr"], [94, 3, 1, "", "shape"], [94, 3, 1, "", "shapes"], [94, 3, 1, "", "source"], [94, 3, 1, "", "time_index"], [94, 3, 1, "", "units"], [94, 2, 1, "", "update_dset"], [94, 3, 1, "", "version"], [94, 3, 1, "", "writable"], [94, 2, 1, "", "write_dataset"], [94, 2, 1, "", "write_means"], [94, 2, 1, "", "write_profiles"]], "sup3r.postprocessing.writers.h5": [[96, 1, 1, "", "OutputHandlerH5"]], "sup3r.postprocessing.writers.h5.OutputHandlerH5": [[96, 2, 1, "", "enforce_limits"], [96, 2, 1, "", "get_dset_attrs"], [96, 2, 1, "", "get_lat_lon"], [96, 2, 1, "", "get_renamed_features"], [96, 2, 1, "", "get_time_dim_name"], [96, 2, 1, "", "get_times"], [96, 2, 1, "", "invert_uv_features"], [96, 2, 1, "", "invert_uv_single_pair"], [96, 2, 1, "", "is_increasing_lons"], [96, 2, 1, "", "pad_lat_lon"], [96, 2, 1, "", "write_data"], [96, 2, 1, "", "write_output"]], "sup3r.postprocessing.writers.nc": [[98, 1, 1, "", "OutputHandlerNC"]], "sup3r.postprocessing.writers.nc.OutputHandlerNC": [[98, 2, 1, "", "enforce_limits"], [98, 2, 1, "", "get_dset_attrs"], [98, 2, 1, "", "get_lat_lon"], [98, 2, 1, "", "get_renamed_features"], [98, 2, 1, "", "get_time_dim_name"], [98, 2, 1, "", "get_times"], [98, 2, 1, "", "invert_uv_features"], [98, 2, 1, "", "invert_uv_single_pair"], [98, 2, 1, "", "is_increasing_lons"], [98, 2, 1, "", "pad_lat_lon"], [98, 2, 1, "", "write_data"], [98, 2, 1, "", "write_output"]], "sup3r.preprocessing": [[100, 0, 0, "-", "accessor"], [102, 0, 0, "-", "base"], [106, 0, 0, "-", "batch_handlers"], [120, 0, 0, "-", "batch_queues"], [142, 0, 0, "-", "cachers"], [146, 0, 0, "-", "collections"], [151, 0, 0, "-", "data_handlers"], [164, 0, 0, "-", "derivers"], [194, 0, 0, "-", "loaders"], [205, 0, 0, "-", "names"], [207, 0, 0, "-", "rasterizers"], [220, 0, 0, "-", "samplers"], [237, 0, 0, "-", "utilities"]], "sup3r.preprocessing.accessor": [[101, 1, 1, "", "Sup3rX"]], "sup3r.preprocessing.accessor.Sup3rX": [[101, 2, 1, "", "__mul__"], [101, 2, 1, "", "add_dims_to_data_vars"], [101, 2, 1, "", "as_array"], [101, 2, 1, "", "assign"], [101, 2, 1, "", "coarsen"], [101, 2, 1, "", "compute"], [101, 3, 1, "", "dtype"], [101, 3, 1, "", "features"], [101, 2, 1, "", "flatten"], [101, 3, 1, "", "flattened"], [101, 3, 1, "", "grid_shape"], [101, 2, 1, "", "interpolate_na"], [101, 2, 1, "", "isel"], [101, 3, 1, "", "lat_lon"], [101, 3, 1, "", "loaded"], [101, 2, 1, "", "mean"], [101, 3, 1, "", "meta"], [101, 3, 1, "", "name"], [101, 2, 1, "", "normalize"], [101, 2, 1, "", "ordered"], [101, 2, 1, "", "qa"], [101, 2, 1, "", "sample"], [101, 3, 1, "", "shape"], [101, 3, 1, "", "size"], [101, 2, 1, "", "std"], [101, 3, 1, "", "target"], [101, 3, 1, "", "time_independent"], [101, 3, 1, "", "time_index"], [101, 3, 1, "", "time_step"], [101, 2, 1, "", "to_dataarray"], [101, 2, 1, "", "unflatten"], [101, 2, 1, "", "update_ds"], [101, 3, 1, "", "values"]], "sup3r.preprocessing.base": [[103, 1, 1, "", "Container"], [104, 1, 1, "", "Sup3rDataset"], [105, 1, 1, "", "Sup3rMeta"]], "sup3r.preprocessing.base.Container": [[103, 3, 1, "", "data"], [103, 2, 1, "", "post_init_log"], [103, 3, 1, "", "shape"], [103, 2, 1, "", "wrap"]], "sup3r.preprocessing.base.Sup3rDataset": [[104, 2, 1, "", "compute"], [104, 3, 1, "", "dtype"], [104, 3, 1, "", "features"], [104, 2, 1, "", "isel"], [104, 3, 1, "", "loaded"], [104, 2, 1, "", "mean"], [104, 2, 1, "", "normalize"], [104, 2, 1, "", "rewrap"], [104, 2, 1, "", "sample"], [104, 3, 1, "", "shape"], [104, 3, 1, "", "size"], [104, 2, 1, "", "std"]], "sup3r.preprocessing.base.Sup3rMeta": [[105, 2, 1, "", "__call__"], [105, 2, 1, "", "mro"], [105, 2, 1, "", "register"]], "sup3r.preprocessing.batch_handlers": [[107, 0, 0, "-", "dc"], [109, 0, 0, "-", "factory"]], "sup3r.preprocessing.batch_handlers.dc": [[108, 1, 1, "", "BatchHandlerDC"]], "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC": [[108, 1, 1, "", "Batch"], [108, 4, 1, "", "SAMPLER"], [108, 4, 1, "", "TRAIN_QUEUE"], [108, 4, 1, "", "VAL_QUEUE"], [108, 2, 1, "", "check_enhancement_factors"], [108, 2, 1, "", "check_features"], [108, 2, 1, "", "check_shared_attr"], [108, 3, 1, "", "container_weights"], [108, 3, 1, "", "data"], [108, 2, 1, "", "enqueue_batch"], [108, 2, 1, "", "enqueue_batches"], [108, 3, 1, "", "features"], [108, 2, 1, "", "get_batch"], [108, 2, 1, "", "get_container_index"], [108, 2, 1, "", "get_queue"], [108, 2, 1, "", "get_random_container"], [108, 3, 1, "", "hr_shape"], [108, 2, 1, "", "init_samplers"], [108, 2, 1, "", "log_queue_info"], [108, 3, 1, "", "lr_shape"], [108, 2, 1, "", "post_init_log"], [108, 2, 1, "", "post_proc"], [108, 2, 1, "", "preflight"], [108, 3, 1, "", "queue_shape"], [108, 3, 1, "", "queue_thread"], [108, 3, 1, "", "running"], [108, 2, 1, "", "sample_batch"], [108, 3, 1, "", "shape"], [108, 3, 1, "", "spatial_weights"], [108, 2, 1, "", "start"], [108, 2, 1, "", "stop"], [108, 3, 1, "", "temporal_weights"], [108, 2, 1, "", "transform"], [108, 2, 1, "", "update_weights"], [108, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC.Batch": [[108, 2, 1, "", "__add__"], [108, 2, 1, "", "__mul__"], [108, 2, 1, "", "count"], [108, 4, 1, "", "high_res"], [108, 2, 1, "", "index"], [108, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_handlers.factory": [[110, 1, 1, "", "BatchHandler"], [111, 1, 1, "", "BatchHandlerCC"], [112, 5, 1, "", "BatchHandlerFactory"], [113, 1, 1, "", "BatchHandlerMom1"], [114, 1, 1, "", "BatchHandlerMom1SF"], [115, 1, 1, "", "BatchHandlerMom2"], [116, 4, 1, "", "BatchHandlerMom2SF"], [117, 1, 1, "", "BatchHandlerMom2Sep"], [118, 1, 1, "", "BatchHandlerMom2SepSF"], [119, 1, 1, "", "DualBatchHandler"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandler": [[110, 1, 1, "", "Batch"], [110, 4, 1, "", "SAMPLER"], [110, 4, 1, "", "TRAIN_QUEUE"], [110, 4, 1, "", "VAL_QUEUE"], [110, 2, 1, "", "check_enhancement_factors"], [110, 2, 1, "", "check_features"], [110, 2, 1, "", "check_shared_attr"], [110, 3, 1, "", "container_weights"], [110, 3, 1, "", "data"], [110, 2, 1, "", "enqueue_batch"], [110, 2, 1, "", "enqueue_batches"], [110, 3, 1, "", "features"], [110, 2, 1, "", "get_batch"], [110, 2, 1, "", "get_container_index"], [110, 2, 1, "", "get_queue"], [110, 2, 1, "", "get_random_container"], [110, 3, 1, "", "hr_shape"], [110, 2, 1, "", "init_samplers"], [110, 2, 1, "", "log_queue_info"], [110, 3, 1, "", "lr_shape"], [110, 2, 1, "", "post_init_log"], [110, 2, 1, "", "post_proc"], [110, 2, 1, "", "preflight"], [110, 3, 1, "", "queue_shape"], [110, 3, 1, "", "queue_thread"], [110, 3, 1, "", "running"], [110, 2, 1, "", "sample_batch"], [110, 3, 1, "", "shape"], [110, 2, 1, "", "start"], [110, 2, 1, "", "stop"], [110, 2, 1, "", "transform"], [110, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandler.Batch": [[110, 2, 1, "", "__add__"], [110, 2, 1, "", "__mul__"], [110, 2, 1, "", "count"], [110, 4, 1, "", "high_res"], [110, 2, 1, "", "index"], [110, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC": [[111, 1, 1, "", "Batch"], [111, 4, 1, "", "SAMPLER"], [111, 4, 1, "", "TRAIN_QUEUE"], [111, 4, 1, "", "VAL_QUEUE"], [111, 2, 1, "", "check_enhancement_factors"], [111, 2, 1, "", "check_features"], [111, 2, 1, "", "check_shared_attr"], [111, 3, 1, "", "container_weights"], [111, 3, 1, "", "data"], [111, 2, 1, "", "enqueue_batch"], [111, 2, 1, "", "enqueue_batches"], [111, 3, 1, "", "features"], [111, 2, 1, "", "get_batch"], [111, 2, 1, "", "get_container_index"], [111, 2, 1, "", "get_queue"], [111, 2, 1, "", "get_random_container"], [111, 3, 1, "", "hr_shape"], [111, 2, 1, "", "init_samplers"], [111, 2, 1, "", "log_queue_info"], [111, 3, 1, "", "lr_shape"], [111, 2, 1, "", "post_init_log"], [111, 2, 1, "", "post_proc"], [111, 2, 1, "", "preflight"], [111, 3, 1, "", "queue_shape"], [111, 3, 1, "", "queue_thread"], [111, 3, 1, "", "running"], [111, 2, 1, "", "sample_batch"], [111, 3, 1, "", "shape"], [111, 2, 1, "", "start"], [111, 2, 1, "", "stop"], [111, 2, 1, "", "transform"], [111, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC.Batch": [[111, 2, 1, "", "__add__"], [111, 2, 1, "", "__mul__"], [111, 2, 1, "", "count"], [111, 4, 1, "", "high_res"], [111, 2, 1, "", "index"], [111, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1": [[113, 1, 1, "", "Batch"], [113, 1, 1, "", "ConditionalBatch"], [113, 4, 1, "", "SAMPLER"], [113, 4, 1, "", "TRAIN_QUEUE"], [113, 4, 1, "", "VAL_QUEUE"], [113, 2, 1, "", "check_enhancement_factors"], [113, 2, 1, "", "check_features"], [113, 2, 1, "", "check_shared_attr"], [113, 3, 1, "", "container_weights"], [113, 3, 1, "", "data"], [113, 2, 1, "", "enqueue_batch"], [113, 2, 1, "", "enqueue_batches"], [113, 3, 1, "", "features"], [113, 2, 1, "", "get_batch"], [113, 2, 1, "", "get_container_index"], [113, 2, 1, "", "get_queue"], [113, 2, 1, "", "get_random_container"], [113, 3, 1, "", "hr_shape"], [113, 2, 1, "", "init_samplers"], [113, 2, 1, "", "log_queue_info"], [113, 3, 1, "", "lr_shape"], [113, 2, 1, "", "make_mask"], [113, 2, 1, "", "make_output"], [113, 2, 1, "", "post_init_log"], [113, 2, 1, "", "post_proc"], [113, 2, 1, "", "preflight"], [113, 3, 1, "", "queue_shape"], [113, 3, 1, "", "queue_thread"], [113, 3, 1, "", "running"], [113, 2, 1, "", "sample_batch"], [113, 3, 1, "", "shape"], [113, 2, 1, "", "start"], [113, 2, 1, "", "stop"], [113, 2, 1, "", "transform"], [113, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.Batch": [[113, 2, 1, "", "__add__"], [113, 2, 1, "", "__mul__"], [113, 2, 1, "", "count"], [113, 4, 1, "", "high_res"], [113, 2, 1, "", "index"], [113, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1.ConditionalBatch": [[113, 2, 1, "", "__add__"], [113, 2, 1, "", "__mul__"], [113, 2, 1, "", "count"], [113, 4, 1, "", "high_res"], [113, 2, 1, "", "index"], [113, 4, 1, "", "low_res"], [113, 4, 1, "", "mask"], [113, 4, 1, "", "output"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF": [[114, 1, 1, "", "Batch"], [114, 1, 1, "", "ConditionalBatch"], [114, 4, 1, "", "SAMPLER"], [114, 4, 1, "", "TRAIN_QUEUE"], [114, 4, 1, "", "VAL_QUEUE"], [114, 2, 1, "", "check_enhancement_factors"], [114, 2, 1, "", "check_features"], [114, 2, 1, "", "check_shared_attr"], [114, 3, 1, "", "container_weights"], [114, 3, 1, "", "data"], [114, 2, 1, "", "enqueue_batch"], [114, 2, 1, "", "enqueue_batches"], [114, 3, 1, "", "features"], [114, 2, 1, "", "get_batch"], [114, 2, 1, "", "get_container_index"], [114, 2, 1, "", "get_queue"], [114, 2, 1, "", "get_random_container"], [114, 3, 1, "", "hr_shape"], [114, 2, 1, "", "init_samplers"], [114, 2, 1, "", "log_queue_info"], [114, 3, 1, "", "lr_shape"], [114, 2, 1, "", "make_mask"], [114, 2, 1, "", "make_output"], [114, 2, 1, "", "post_init_log"], [114, 2, 1, "", "post_proc"], [114, 2, 1, "", "preflight"], [114, 3, 1, "", "queue_shape"], [114, 3, 1, "", "queue_thread"], [114, 3, 1, "", "running"], [114, 2, 1, "", "sample_batch"], [114, 3, 1, "", "shape"], [114, 2, 1, "", "start"], [114, 2, 1, "", "stop"], [114, 2, 1, "", "transform"], [114, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.Batch": [[114, 2, 1, "", "__add__"], [114, 2, 1, "", "__mul__"], [114, 2, 1, "", "count"], [114, 4, 1, "", "high_res"], [114, 2, 1, "", "index"], [114, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF.ConditionalBatch": [[114, 2, 1, "", "__add__"], [114, 2, 1, "", "__mul__"], [114, 2, 1, "", "count"], [114, 4, 1, "", "high_res"], [114, 2, 1, "", "index"], [114, 4, 1, "", "low_res"], [114, 4, 1, "", "mask"], [114, 4, 1, "", "output"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2": [[115, 1, 1, "", "Batch"], [115, 1, 1, "", "ConditionalBatch"], [115, 4, 1, "", "SAMPLER"], [115, 4, 1, "", "TRAIN_QUEUE"], [115, 4, 1, "", "VAL_QUEUE"], [115, 2, 1, "", "check_enhancement_factors"], [115, 2, 1, "", "check_features"], [115, 2, 1, "", "check_shared_attr"], [115, 3, 1, "", "container_weights"], [115, 3, 1, "", "data"], [115, 2, 1, "", "enqueue_batch"], [115, 2, 1, "", "enqueue_batches"], [115, 3, 1, "", "features"], [115, 2, 1, "", "get_batch"], [115, 2, 1, "", "get_container_index"], [115, 2, 1, "", "get_queue"], [115, 2, 1, "", "get_random_container"], [115, 3, 1, "", "hr_shape"], [115, 2, 1, "", "init_samplers"], [115, 2, 1, "", "log_queue_info"], [115, 3, 1, "", "lr_shape"], [115, 2, 1, "", "make_mask"], [115, 2, 1, "", "make_output"], [115, 2, 1, "", "post_init_log"], [115, 2, 1, "", "post_proc"], [115, 2, 1, "", "preflight"], [115, 3, 1, "", "queue_shape"], [115, 3, 1, "", "queue_thread"], [115, 3, 1, "", "running"], [115, 2, 1, "", "sample_batch"], [115, 3, 1, "", "shape"], [115, 2, 1, "", "start"], [115, 2, 1, "", "stop"], [115, 2, 1, "", "transform"], [115, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.Batch": [[115, 2, 1, "", "__add__"], [115, 2, 1, "", "__mul__"], [115, 2, 1, "", "count"], [115, 4, 1, "", "high_res"], [115, 2, 1, "", "index"], [115, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2.ConditionalBatch": [[115, 2, 1, "", "__add__"], [115, 2, 1, "", "__mul__"], [115, 2, 1, "", "count"], [115, 4, 1, "", "high_res"], [115, 2, 1, "", "index"], [115, 4, 1, "", "low_res"], [115, 4, 1, "", "mask"], [115, 4, 1, "", "output"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep": [[117, 1, 1, "", "Batch"], [117, 1, 1, "", "ConditionalBatch"], [117, 4, 1, "", "SAMPLER"], [117, 4, 1, "", "TRAIN_QUEUE"], [117, 4, 1, "", "VAL_QUEUE"], [117, 2, 1, "", "check_enhancement_factors"], [117, 2, 1, "", "check_features"], [117, 2, 1, "", "check_shared_attr"], [117, 3, 1, "", "container_weights"], [117, 3, 1, "", "data"], [117, 2, 1, "", "enqueue_batch"], [117, 2, 1, "", "enqueue_batches"], [117, 3, 1, "", "features"], [117, 2, 1, "", "get_batch"], [117, 2, 1, "", "get_container_index"], [117, 2, 1, "", "get_queue"], [117, 2, 1, "", "get_random_container"], [117, 3, 1, "", "hr_shape"], [117, 2, 1, "", "init_samplers"], [117, 2, 1, "", "log_queue_info"], [117, 3, 1, "", "lr_shape"], [117, 2, 1, "", "make_mask"], [117, 2, 1, "", "make_output"], [117, 2, 1, "", "post_init_log"], [117, 2, 1, "", "post_proc"], [117, 2, 1, "", "preflight"], [117, 3, 1, "", "queue_shape"], [117, 3, 1, "", "queue_thread"], [117, 3, 1, "", "running"], [117, 2, 1, "", "sample_batch"], [117, 3, 1, "", "shape"], [117, 2, 1, "", "start"], [117, 2, 1, "", "stop"], [117, 2, 1, "", "transform"], [117, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.Batch": [[117, 2, 1, "", "__add__"], [117, 2, 1, "", "__mul__"], [117, 2, 1, "", "count"], [117, 4, 1, "", "high_res"], [117, 2, 1, "", "index"], [117, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep.ConditionalBatch": [[117, 2, 1, "", "__add__"], [117, 2, 1, "", "__mul__"], [117, 2, 1, "", "count"], [117, 4, 1, "", "high_res"], [117, 2, 1, "", "index"], [117, 4, 1, "", "low_res"], [117, 4, 1, "", "mask"], [117, 4, 1, "", "output"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF": [[118, 1, 1, "", "Batch"], [118, 1, 1, "", "ConditionalBatch"], [118, 4, 1, "", "SAMPLER"], [118, 4, 1, "", "TRAIN_QUEUE"], [118, 4, 1, "", "VAL_QUEUE"], [118, 2, 1, "", "check_enhancement_factors"], [118, 2, 1, "", "check_features"], [118, 2, 1, "", "check_shared_attr"], [118, 3, 1, "", "container_weights"], [118, 3, 1, "", "data"], [118, 2, 1, "", "enqueue_batch"], [118, 2, 1, "", "enqueue_batches"], [118, 3, 1, "", "features"], [118, 2, 1, "", "get_batch"], [118, 2, 1, "", "get_container_index"], [118, 2, 1, "", "get_queue"], [118, 2, 1, "", "get_random_container"], [118, 3, 1, "", "hr_shape"], [118, 2, 1, "", "init_samplers"], [118, 2, 1, "", "log_queue_info"], [118, 3, 1, "", "lr_shape"], [118, 2, 1, "", "make_mask"], [118, 2, 1, "", "make_output"], [118, 2, 1, "", "post_init_log"], [118, 2, 1, "", "post_proc"], [118, 2, 1, "", "preflight"], [118, 3, 1, "", "queue_shape"], [118, 3, 1, "", "queue_thread"], [118, 3, 1, "", "running"], [118, 2, 1, "", "sample_batch"], [118, 3, 1, "", "shape"], [118, 2, 1, "", "start"], [118, 2, 1, "", "stop"], [118, 2, 1, "", "transform"], [118, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.Batch": [[118, 2, 1, "", "__add__"], [118, 2, 1, "", "__mul__"], [118, 2, 1, "", "count"], [118, 4, 1, "", "high_res"], [118, 2, 1, "", "index"], [118, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF.ConditionalBatch": [[118, 2, 1, "", "__add__"], [118, 2, 1, "", "__mul__"], [118, 2, 1, "", "count"], [118, 4, 1, "", "high_res"], [118, 2, 1, "", "index"], [118, 4, 1, "", "low_res"], [118, 4, 1, "", "mask"], [118, 4, 1, "", "output"]], "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler": [[119, 1, 1, "", "Batch"], [119, 4, 1, "", "SAMPLER"], [119, 4, 1, "", "TRAIN_QUEUE"], [119, 4, 1, "", "VAL_QUEUE"], [119, 2, 1, "", "check_enhancement_factors"], [119, 2, 1, "", "check_features"], [119, 2, 1, "", "check_shared_attr"], [119, 3, 1, "", "container_weights"], [119, 3, 1, "", "data"], [119, 2, 1, "", "enqueue_batch"], [119, 2, 1, "", "enqueue_batches"], [119, 3, 1, "", "features"], [119, 2, 1, "", "get_batch"], [119, 2, 1, "", "get_container_index"], [119, 2, 1, "", "get_queue"], [119, 2, 1, "", "get_random_container"], [119, 3, 1, "", "hr_shape"], [119, 2, 1, "", "init_samplers"], [119, 2, 1, "", "log_queue_info"], [119, 3, 1, "", "lr_shape"], [119, 2, 1, "", "post_init_log"], [119, 2, 1, "", "post_proc"], [119, 2, 1, "", "preflight"], [119, 3, 1, "", "queue_shape"], [119, 3, 1, "", "queue_thread"], [119, 3, 1, "", "running"], [119, 2, 1, "", "sample_batch"], [119, 3, 1, "", "shape"], [119, 2, 1, "", "start"], [119, 2, 1, "", "stop"], [119, 2, 1, "", "transform"], [119, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler.Batch": [[119, 2, 1, "", "__add__"], [119, 2, 1, "", "__mul__"], [119, 2, 1, "", "count"], [119, 4, 1, "", "high_res"], [119, 2, 1, "", "index"], [119, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_queues": [[121, 0, 0, "-", "abstract"], [123, 0, 0, "-", "base"], [125, 0, 0, "-", "conditional"], [133, 0, 0, "-", "dc"], [136, 0, 0, "-", "dual"], [138, 0, 0, "-", "utilities"]], "sup3r.preprocessing.batch_queues.abstract": [[122, 1, 1, "", "AbstractBatchQueue"]], "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue": [[122, 1, 1, "", "Batch"], [122, 2, 1, "", "check_enhancement_factors"], [122, 2, 1, "", "check_features"], [122, 2, 1, "", "check_shared_attr"], [122, 3, 1, "", "container_weights"], [122, 3, 1, "", "data"], [122, 2, 1, "", "enqueue_batch"], [122, 2, 1, "", "enqueue_batches"], [122, 3, 1, "", "features"], [122, 2, 1, "", "get_batch"], [122, 2, 1, "", "get_container_index"], [122, 2, 1, "", "get_queue"], [122, 2, 1, "", "get_random_container"], [122, 3, 1, "", "hr_shape"], [122, 2, 1, "", "log_queue_info"], [122, 3, 1, "", "lr_shape"], [122, 2, 1, "", "post_init_log"], [122, 2, 1, "", "post_proc"], [122, 2, 1, "", "preflight"], [122, 3, 1, "", "queue_shape"], [122, 3, 1, "", "queue_thread"], [122, 3, 1, "", "running"], [122, 2, 1, "", "sample_batch"], [122, 3, 1, "", "shape"], [122, 2, 1, "", "start"], [122, 2, 1, "", "stop"], [122, 2, 1, "", "transform"], [122, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue.Batch": [[122, 2, 1, "", "__add__"], [122, 2, 1, "", "__mul__"], [122, 2, 1, "", "count"], [122, 4, 1, "", "high_res"], [122, 2, 1, "", "index"], [122, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_queues.base": [[124, 1, 1, "", "SingleBatchQueue"]], "sup3r.preprocessing.batch_queues.base.SingleBatchQueue": [[124, 1, 1, "", "Batch"], [124, 2, 1, "", "check_enhancement_factors"], [124, 2, 1, "", "check_features"], [124, 2, 1, "", "check_shared_attr"], [124, 3, 1, "", "container_weights"], [124, 3, 1, "", "data"], [124, 2, 1, "", "enqueue_batch"], [124, 2, 1, "", "enqueue_batches"], [124, 3, 1, "", "features"], [124, 2, 1, "", "get_batch"], [124, 2, 1, "", "get_container_index"], [124, 2, 1, "", "get_queue"], [124, 2, 1, "", "get_random_container"], [124, 3, 1, "", "hr_shape"], [124, 2, 1, "", "log_queue_info"], [124, 3, 1, "", "lr_shape"], [124, 2, 1, "", "post_init_log"], [124, 2, 1, "", "post_proc"], [124, 2, 1, "", "preflight"], [124, 3, 1, "", "queue_shape"], [124, 3, 1, "", "queue_thread"], [124, 3, 1, "", "running"], [124, 2, 1, "", "sample_batch"], [124, 3, 1, "", "shape"], [124, 2, 1, "", "start"], [124, 2, 1, "", "stop"], [124, 2, 1, "", "transform"], [124, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.base.SingleBatchQueue.Batch": [[124, 2, 1, "", "__add__"], [124, 2, 1, "", "__mul__"], [124, 2, 1, "", "count"], [124, 4, 1, "", "high_res"], [124, 2, 1, "", "index"], [124, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_queues.conditional": [[126, 1, 1, "", "ConditionalBatchQueue"], [127, 1, 1, "", "QueueMom1"], [128, 1, 1, "", "QueueMom1SF"], [129, 1, 1, "", "QueueMom2"], [130, 1, 1, "", "QueueMom2SF"], [131, 1, 1, "", "QueueMom2Sep"], [132, 1, 1, "", "QueueMom2SepSF"]], "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue": [[126, 1, 1, "", "Batch"], [126, 1, 1, "", "ConditionalBatch"], [126, 2, 1, "", "check_enhancement_factors"], [126, 2, 1, "", "check_features"], [126, 2, 1, "", "check_shared_attr"], [126, 3, 1, "", "container_weights"], [126, 3, 1, "", "data"], [126, 2, 1, "", "enqueue_batch"], [126, 2, 1, "", "enqueue_batches"], [126, 3, 1, "", "features"], [126, 2, 1, "", "get_batch"], [126, 2, 1, "", "get_container_index"], [126, 2, 1, "", "get_queue"], [126, 2, 1, "", "get_random_container"], [126, 3, 1, "", "hr_shape"], [126, 2, 1, "", "log_queue_info"], [126, 3, 1, "", "lr_shape"], [126, 2, 1, "", "make_mask"], [126, 2, 1, "", "make_output"], [126, 2, 1, "", "post_init_log"], [126, 2, 1, "", "post_proc"], [126, 2, 1, "", "preflight"], [126, 3, 1, "", "queue_shape"], [126, 3, 1, "", "queue_thread"], [126, 3, 1, "", "running"], [126, 2, 1, "", "sample_batch"], [126, 3, 1, "", "shape"], [126, 2, 1, "", "start"], [126, 2, 1, "", "stop"], [126, 2, 1, "", "transform"], [126, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.Batch": [[126, 2, 1, "", "__add__"], [126, 2, 1, "", "__mul__"], [126, 2, 1, "", "count"], [126, 4, 1, "", "high_res"], [126, 2, 1, "", "index"], [126, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue.ConditionalBatch": [[126, 2, 1, "", "__add__"], [126, 2, 1, "", "__mul__"], [126, 2, 1, "", "count"], [126, 4, 1, "", "high_res"], [126, 2, 1, "", "index"], [126, 4, 1, "", "low_res"], [126, 4, 1, "", "mask"], [126, 4, 1, "", "output"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom1": [[127, 1, 1, "", "Batch"], [127, 1, 1, "", "ConditionalBatch"], [127, 2, 1, "", "check_enhancement_factors"], [127, 2, 1, "", "check_features"], [127, 2, 1, "", "check_shared_attr"], [127, 3, 1, "", "container_weights"], [127, 3, 1, "", "data"], [127, 2, 1, "", "enqueue_batch"], [127, 2, 1, "", "enqueue_batches"], [127, 3, 1, "", "features"], [127, 2, 1, "", "get_batch"], [127, 2, 1, "", "get_container_index"], [127, 2, 1, "", "get_queue"], [127, 2, 1, "", "get_random_container"], [127, 3, 1, "", "hr_shape"], [127, 2, 1, "", "log_queue_info"], [127, 3, 1, "", "lr_shape"], [127, 2, 1, "", "make_mask"], [127, 2, 1, "", "make_output"], [127, 2, 1, "", "post_init_log"], [127, 2, 1, "", "post_proc"], [127, 2, 1, "", "preflight"], [127, 3, 1, "", "queue_shape"], [127, 3, 1, "", "queue_thread"], [127, 3, 1, "", "running"], [127, 2, 1, "", "sample_batch"], [127, 3, 1, "", "shape"], [127, 2, 1, "", "start"], [127, 2, 1, "", "stop"], [127, 2, 1, "", "transform"], [127, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom1.Batch": [[127, 2, 1, "", "__add__"], [127, 2, 1, "", "__mul__"], [127, 2, 1, "", "count"], [127, 4, 1, "", "high_res"], [127, 2, 1, "", "index"], [127, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom1.ConditionalBatch": [[127, 2, 1, "", "__add__"], [127, 2, 1, "", "__mul__"], [127, 2, 1, "", "count"], [127, 4, 1, "", "high_res"], [127, 2, 1, "", "index"], [127, 4, 1, "", "low_res"], [127, 4, 1, "", "mask"], [127, 4, 1, "", "output"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF": [[128, 1, 1, "", "Batch"], [128, 1, 1, "", "ConditionalBatch"], [128, 2, 1, "", "check_enhancement_factors"], [128, 2, 1, "", "check_features"], [128, 2, 1, "", "check_shared_attr"], [128, 3, 1, "", "container_weights"], [128, 3, 1, "", "data"], [128, 2, 1, "", "enqueue_batch"], [128, 2, 1, "", "enqueue_batches"], [128, 3, 1, "", "features"], [128, 2, 1, "", "get_batch"], [128, 2, 1, "", "get_container_index"], [128, 2, 1, "", "get_queue"], [128, 2, 1, "", "get_random_container"], [128, 3, 1, "", "hr_shape"], [128, 2, 1, "", "log_queue_info"], [128, 3, 1, "", "lr_shape"], [128, 2, 1, "", "make_mask"], [128, 2, 1, "", "make_output"], [128, 2, 1, "", "post_init_log"], [128, 2, 1, "", "post_proc"], [128, 2, 1, "", "preflight"], [128, 3, 1, "", "queue_shape"], [128, 3, 1, "", "queue_thread"], [128, 3, 1, "", "running"], [128, 2, 1, "", "sample_batch"], [128, 3, 1, "", "shape"], [128, 2, 1, "", "start"], [128, 2, 1, "", "stop"], [128, 2, 1, "", "transform"], [128, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.Batch": [[128, 2, 1, "", "__add__"], [128, 2, 1, "", "__mul__"], [128, 2, 1, "", "count"], [128, 4, 1, "", "high_res"], [128, 2, 1, "", "index"], [128, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF.ConditionalBatch": [[128, 2, 1, "", "__add__"], [128, 2, 1, "", "__mul__"], [128, 2, 1, "", "count"], [128, 4, 1, "", "high_res"], [128, 2, 1, "", "index"], [128, 4, 1, "", "low_res"], [128, 4, 1, "", "mask"], [128, 4, 1, "", "output"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2": [[129, 1, 1, "", "Batch"], [129, 1, 1, "", "ConditionalBatch"], [129, 2, 1, "", "check_enhancement_factors"], [129, 2, 1, "", "check_features"], [129, 2, 1, "", "check_shared_attr"], [129, 3, 1, "", "container_weights"], [129, 3, 1, "", "data"], [129, 2, 1, "", "enqueue_batch"], [129, 2, 1, "", "enqueue_batches"], [129, 3, 1, "", "features"], [129, 2, 1, "", "get_batch"], [129, 2, 1, "", "get_container_index"], [129, 2, 1, "", "get_queue"], [129, 2, 1, "", "get_random_container"], [129, 3, 1, "", "hr_shape"], [129, 2, 1, "", "log_queue_info"], [129, 3, 1, "", "lr_shape"], [129, 2, 1, "", "make_mask"], [129, 2, 1, "", "make_output"], [129, 2, 1, "", "post_init_log"], [129, 2, 1, "", "post_proc"], [129, 2, 1, "", "preflight"], [129, 3, 1, "", "queue_shape"], [129, 3, 1, "", "queue_thread"], [129, 3, 1, "", "running"], [129, 2, 1, "", "sample_batch"], [129, 3, 1, "", "shape"], [129, 2, 1, "", "start"], [129, 2, 1, "", "stop"], [129, 2, 1, "", "transform"], [129, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2.Batch": [[129, 2, 1, "", "__add__"], [129, 2, 1, "", "__mul__"], [129, 2, 1, "", "count"], [129, 4, 1, "", "high_res"], [129, 2, 1, "", "index"], [129, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2.ConditionalBatch": [[129, 2, 1, "", "__add__"], [129, 2, 1, "", "__mul__"], [129, 2, 1, "", "count"], [129, 4, 1, "", "high_res"], [129, 2, 1, "", "index"], [129, 4, 1, "", "low_res"], [129, 4, 1, "", "mask"], [129, 4, 1, "", "output"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF": [[130, 1, 1, "", "Batch"], [130, 1, 1, "", "ConditionalBatch"], [130, 2, 1, "", "check_enhancement_factors"], [130, 2, 1, "", "check_features"], [130, 2, 1, "", "check_shared_attr"], [130, 3, 1, "", "container_weights"], [130, 3, 1, "", "data"], [130, 2, 1, "", "enqueue_batch"], [130, 2, 1, "", "enqueue_batches"], [130, 3, 1, "", "features"], [130, 2, 1, "", "get_batch"], [130, 2, 1, "", "get_container_index"], [130, 2, 1, "", "get_queue"], [130, 2, 1, "", "get_random_container"], [130, 3, 1, "", "hr_shape"], [130, 2, 1, "", "log_queue_info"], [130, 3, 1, "", "lr_shape"], [130, 2, 1, "", "make_mask"], [130, 2, 1, "", "make_output"], [130, 2, 1, "", "post_init_log"], [130, 2, 1, "", "post_proc"], [130, 2, 1, "", "preflight"], [130, 3, 1, "", "queue_shape"], [130, 3, 1, "", "queue_thread"], [130, 3, 1, "", "running"], [130, 2, 1, "", "sample_batch"], [130, 3, 1, "", "shape"], [130, 2, 1, "", "start"], [130, 2, 1, "", "stop"], [130, 2, 1, "", "transform"], [130, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.Batch": [[130, 2, 1, "", "__add__"], [130, 2, 1, "", "__mul__"], [130, 2, 1, "", "count"], [130, 4, 1, "", "high_res"], [130, 2, 1, "", "index"], [130, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF.ConditionalBatch": [[130, 2, 1, "", "__add__"], [130, 2, 1, "", "__mul__"], [130, 2, 1, "", "count"], [130, 4, 1, "", "high_res"], [130, 2, 1, "", "index"], [130, 4, 1, "", "low_res"], [130, 4, 1, "", "mask"], [130, 4, 1, "", "output"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep": [[131, 1, 1, "", "Batch"], [131, 1, 1, "", "ConditionalBatch"], [131, 2, 1, "", "check_enhancement_factors"], [131, 2, 1, "", "check_features"], [131, 2, 1, "", "check_shared_attr"], [131, 3, 1, "", "container_weights"], [131, 3, 1, "", "data"], [131, 2, 1, "", "enqueue_batch"], [131, 2, 1, "", "enqueue_batches"], [131, 3, 1, "", "features"], [131, 2, 1, "", "get_batch"], [131, 2, 1, "", "get_container_index"], [131, 2, 1, "", "get_queue"], [131, 2, 1, "", "get_random_container"], [131, 3, 1, "", "hr_shape"], [131, 2, 1, "", "log_queue_info"], [131, 3, 1, "", "lr_shape"], [131, 2, 1, "", "make_mask"], [131, 2, 1, "", "make_output"], [131, 2, 1, "", "post_init_log"], [131, 2, 1, "", "post_proc"], [131, 2, 1, "", "preflight"], [131, 3, 1, "", "queue_shape"], [131, 3, 1, "", "queue_thread"], [131, 3, 1, "", "running"], [131, 2, 1, "", "sample_batch"], [131, 3, 1, "", "shape"], [131, 2, 1, "", "start"], [131, 2, 1, "", "stop"], [131, 2, 1, "", "transform"], [131, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.Batch": [[131, 2, 1, "", "__add__"], [131, 2, 1, "", "__mul__"], [131, 2, 1, "", "count"], [131, 4, 1, "", "high_res"], [131, 2, 1, "", "index"], [131, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep.ConditionalBatch": [[131, 2, 1, "", "__add__"], [131, 2, 1, "", "__mul__"], [131, 2, 1, "", "count"], [131, 4, 1, "", "high_res"], [131, 2, 1, "", "index"], [131, 4, 1, "", "low_res"], [131, 4, 1, "", "mask"], [131, 4, 1, "", "output"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF": [[132, 1, 1, "", "Batch"], [132, 1, 1, "", "ConditionalBatch"], [132, 2, 1, "", "check_enhancement_factors"], [132, 2, 1, "", "check_features"], [132, 2, 1, "", "check_shared_attr"], [132, 3, 1, "", "container_weights"], [132, 3, 1, "", "data"], [132, 2, 1, "", "enqueue_batch"], [132, 2, 1, "", "enqueue_batches"], [132, 3, 1, "", "features"], [132, 2, 1, "", "get_batch"], [132, 2, 1, "", "get_container_index"], [132, 2, 1, "", "get_queue"], [132, 2, 1, "", "get_random_container"], [132, 3, 1, "", "hr_shape"], [132, 2, 1, "", "log_queue_info"], [132, 3, 1, "", "lr_shape"], [132, 2, 1, "", "make_mask"], [132, 2, 1, "", "make_output"], [132, 2, 1, "", "post_init_log"], [132, 2, 1, "", "post_proc"], [132, 2, 1, "", "preflight"], [132, 3, 1, "", "queue_shape"], [132, 3, 1, "", "queue_thread"], [132, 3, 1, "", "running"], [132, 2, 1, "", "sample_batch"], [132, 3, 1, "", "shape"], [132, 2, 1, "", "start"], [132, 2, 1, "", "stop"], [132, 2, 1, "", "transform"], [132, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.Batch": [[132, 2, 1, "", "__add__"], [132, 2, 1, "", "__mul__"], [132, 2, 1, "", "count"], [132, 4, 1, "", "high_res"], [132, 2, 1, "", "index"], [132, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF.ConditionalBatch": [[132, 2, 1, "", "__add__"], [132, 2, 1, "", "__mul__"], [132, 2, 1, "", "count"], [132, 4, 1, "", "high_res"], [132, 2, 1, "", "index"], [132, 4, 1, "", "low_res"], [132, 4, 1, "", "mask"], [132, 4, 1, "", "output"]], "sup3r.preprocessing.batch_queues.dc": [[134, 1, 1, "", "BatchQueueDC"], [135, 1, 1, "", "ValBatchQueueDC"]], "sup3r.preprocessing.batch_queues.dc.BatchQueueDC": [[134, 1, 1, "", "Batch"], [134, 2, 1, "", "check_enhancement_factors"], [134, 2, 1, "", "check_features"], [134, 2, 1, "", "check_shared_attr"], [134, 3, 1, "", "container_weights"], [134, 3, 1, "", "data"], [134, 2, 1, "", "enqueue_batch"], [134, 2, 1, "", "enqueue_batches"], [134, 3, 1, "", "features"], [134, 2, 1, "", "get_batch"], [134, 2, 1, "", "get_container_index"], [134, 2, 1, "", "get_queue"], [134, 2, 1, "", "get_random_container"], [134, 3, 1, "", "hr_shape"], [134, 2, 1, "", "log_queue_info"], [134, 3, 1, "", "lr_shape"], [134, 2, 1, "", "post_init_log"], [134, 2, 1, "", "post_proc"], [134, 2, 1, "", "preflight"], [134, 3, 1, "", "queue_shape"], [134, 3, 1, "", "queue_thread"], [134, 3, 1, "", "running"], [134, 2, 1, "", "sample_batch"], [134, 3, 1, "", "shape"], [134, 3, 1, "", "spatial_weights"], [134, 2, 1, "", "start"], [134, 2, 1, "", "stop"], [134, 3, 1, "", "temporal_weights"], [134, 2, 1, "", "transform"], [134, 2, 1, "", "update_weights"], [134, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.dc.BatchQueueDC.Batch": [[134, 2, 1, "", "__add__"], [134, 2, 1, "", "__mul__"], [134, 2, 1, "", "count"], [134, 4, 1, "", "high_res"], [134, 2, 1, "", "index"], [134, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC": [[135, 1, 1, "", "Batch"], [135, 2, 1, "", "check_enhancement_factors"], [135, 2, 1, "", "check_features"], [135, 2, 1, "", "check_shared_attr"], [135, 3, 1, "", "container_weights"], [135, 3, 1, "", "data"], [135, 2, 1, "", "enqueue_batch"], [135, 2, 1, "", "enqueue_batches"], [135, 3, 1, "", "features"], [135, 2, 1, "", "get_batch"], [135, 2, 1, "", "get_container_index"], [135, 2, 1, "", "get_queue"], [135, 2, 1, "", "get_random_container"], [135, 3, 1, "", "hr_shape"], [135, 2, 1, "", "log_queue_info"], [135, 3, 1, "", "lr_shape"], [135, 2, 1, "", "post_init_log"], [135, 2, 1, "", "post_proc"], [135, 2, 1, "", "preflight"], [135, 3, 1, "", "queue_shape"], [135, 3, 1, "", "queue_thread"], [135, 3, 1, "", "running"], [135, 2, 1, "", "sample_batch"], [135, 3, 1, "", "shape"], [135, 3, 1, "", "spatial_weights"], [135, 2, 1, "", "start"], [135, 2, 1, "", "stop"], [135, 3, 1, "", "temporal_weights"], [135, 2, 1, "", "transform"], [135, 2, 1, "", "update_weights"], [135, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC.Batch": [[135, 2, 1, "", "__add__"], [135, 2, 1, "", "__mul__"], [135, 2, 1, "", "count"], [135, 4, 1, "", "high_res"], [135, 2, 1, "", "index"], [135, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_queues.dual": [[137, 1, 1, "", "DualBatchQueue"]], "sup3r.preprocessing.batch_queues.dual.DualBatchQueue": [[137, 1, 1, "", "Batch"], [137, 2, 1, "", "check_enhancement_factors"], [137, 2, 1, "", "check_features"], [137, 2, 1, "", "check_shared_attr"], [137, 3, 1, "", "container_weights"], [137, 3, 1, "", "data"], [137, 2, 1, "", "enqueue_batch"], [137, 2, 1, "", "enqueue_batches"], [137, 3, 1, "", "features"], [137, 2, 1, "", "get_batch"], [137, 2, 1, "", "get_container_index"], [137, 2, 1, "", "get_queue"], [137, 2, 1, "", "get_random_container"], [137, 3, 1, "", "hr_shape"], [137, 2, 1, "", "log_queue_info"], [137, 3, 1, "", "lr_shape"], [137, 2, 1, "", "post_init_log"], [137, 2, 1, "", "post_proc"], [137, 2, 1, "", "preflight"], [137, 3, 1, "", "queue_shape"], [137, 3, 1, "", "queue_thread"], [137, 3, 1, "", "running"], [137, 2, 1, "", "sample_batch"], [137, 3, 1, "", "shape"], [137, 2, 1, "", "start"], [137, 2, 1, "", "stop"], [137, 2, 1, "", "transform"], [137, 2, 1, "", "wrap"]], "sup3r.preprocessing.batch_queues.dual.DualBatchQueue.Batch": [[137, 2, 1, "", "__add__"], [137, 2, 1, "", "__mul__"], [137, 2, 1, "", "count"], [137, 4, 1, "", "high_res"], [137, 2, 1, "", "index"], [137, 4, 1, "", "low_res"]], "sup3r.preprocessing.batch_queues.utilities": [[139, 5, 1, "", "smooth_data"], [140, 5, 1, "", "spatial_simple_enhancing"], [141, 5, 1, "", "temporal_simple_enhancing"]], "sup3r.preprocessing.cachers": [[143, 0, 0, "-", "base"], [145, 0, 0, "-", "utilities"]], "sup3r.preprocessing.cachers.base": [[144, 1, 1, "", "Cacher"]], "sup3r.preprocessing.cachers.base.Cacher": [[144, 2, 1, "", "add_coord_meta"], [144, 2, 1, "", "cache_data"], [144, 3, 1, "", "data"], [144, 2, 1, "", "get_chunk_slices"], [144, 2, 1, "", "get_chunksizes"], [144, 2, 1, "", "parse_chunks"], [144, 2, 1, "", "post_init_log"], [144, 3, 1, "", "shape"], [144, 2, 1, "", "wrap"], [144, 2, 1, "", "write_chunk"], [144, 2, 1, "", "write_h5"], [144, 2, 1, "", "write_netcdf"], [144, 2, 1, "", "write_netcdf_chunks"]], "sup3r.preprocessing.collections": [[147, 0, 0, "-", "base"], [149, 0, 0, "-", "stats"]], "sup3r.preprocessing.collections.base": [[148, 1, 1, "", "Collection"]], "sup3r.preprocessing.collections.base.Collection": [[148, 2, 1, "", "check_shared_attr"], [148, 3, 1, "", "container_weights"], [148, 3, 1, "", "data"], [148, 3, 1, "", "features"], [148, 2, 1, "", "post_init_log"], [148, 3, 1, "", "shape"], [148, 2, 1, "", "wrap"]], "sup3r.preprocessing.collections.stats": [[150, 1, 1, "", "StatsCollection"]], "sup3r.preprocessing.collections.stats.StatsCollection": [[150, 2, 1, "", "check_shared_attr"], [150, 3, 1, "", "container_weights"], [150, 3, 1, "", "data"], [150, 3, 1, "", "features"], [150, 2, 1, "", "get_means"], [150, 2, 1, "", "get_stds"], [150, 2, 1, "", "normalize"], [150, 2, 1, "", "post_init_log"], [150, 2, 1, "", "save_stats"], [150, 3, 1, "", "shape"], [150, 2, 1, "", "wrap"]], "sup3r.preprocessing.data_handlers": [[152, 0, 0, "-", "base"], [157, 0, 0, "-", "exo"], [161, 0, 0, "-", "nc_cc"]], "sup3r.preprocessing.data_handlers.base": [[153, 1, 1, "", "DailyDataHandler"], [154, 1, 1, "", "DataHandler"], [155, 1, 1, "", "DataHandlerH5SolarCC"], [156, 1, 1, "", "DataHandlerH5WindCC"]], "sup3r.preprocessing.data_handlers.base.DailyDataHandler": [[153, 2, 1, "", "check_registry"], [153, 3, 1, "", "data"], [153, 2, 1, "", "derive"], [153, 2, 1, "", "do_level_interpolation"], [153, 2, 1, "", "get_inputs"], [153, 2, 1, "", "get_multi_level_data"], [153, 2, 1, "", "get_single_level_data"], [153, 2, 1, "", "has_interp_variables"], [153, 2, 1, "", "map_new_name"], [153, 2, 1, "", "no_overlap"], [153, 2, 1, "", "post_init_log"], [153, 3, 1, "", "shape"], [153, 2, 1, "", "wrap"]], "sup3r.preprocessing.data_handlers.base.DataHandler": [[154, 2, 1, "", "check_registry"], [154, 3, 1, "", "data"], [154, 2, 1, "", "derive"], [154, 2, 1, "", "do_level_interpolation"], [154, 2, 1, "", "get_inputs"], [154, 2, 1, "", "get_multi_level_data"], [154, 2, 1, "", "get_single_level_data"], [154, 2, 1, "", "has_interp_variables"], [154, 2, 1, "", "map_new_name"], [154, 2, 1, "", "no_overlap"], [154, 2, 1, "", "post_init_log"], [154, 3, 1, "", "shape"], [154, 2, 1, "", "wrap"]], "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC": [[155, 4, 1, "", "BASE_LOADER"], [155, 2, 1, "", "check_registry"], [155, 3, 1, "", "data"], [155, 2, 1, "", "derive"], [155, 2, 1, "", "do_level_interpolation"], [155, 2, 1, "", "get_inputs"], [155, 2, 1, "", "get_multi_level_data"], [155, 2, 1, "", "get_single_level_data"], [155, 2, 1, "", "has_interp_variables"], [155, 2, 1, "", "map_new_name"], [155, 2, 1, "", "no_overlap"], [155, 2, 1, "", "post_init_log"], [155, 3, 1, "", "shape"], [155, 2, 1, "", "wrap"]], "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC": [[156, 4, 1, "", "BASE_LOADER"], [156, 2, 1, "", "check_registry"], [156, 3, 1, "", "data"], [156, 2, 1, "", "derive"], [156, 2, 1, "", "do_level_interpolation"], [156, 2, 1, "", "get_inputs"], [156, 2, 1, "", "get_multi_level_data"], [156, 2, 1, "", "get_single_level_data"], [156, 2, 1, "", "has_interp_variables"], [156, 2, 1, "", "map_new_name"], [156, 2, 1, "", "no_overlap"], [156, 2, 1, "", "post_init_log"], [156, 3, 1, "", "shape"], [156, 2, 1, "", "wrap"]], "sup3r.preprocessing.data_handlers.exo": [[158, 1, 1, "", "ExoData"], [159, 1, 1, "", "ExoDataHandler"], [160, 1, 1, "", "SingleExoDataStep"]], "sup3r.preprocessing.data_handlers.exo.ExoData": [[158, 2, 1, "", "clear"], [158, 2, 1, "", "copy"], [158, 2, 1, "", "fromkeys"], [158, 2, 1, "", "get"], [158, 2, 1, "", "get_chunk"], [158, 2, 1, "", "get_combine_type_data"], [158, 2, 1, "", "get_model_step_exo"], [158, 2, 1, "", "items"], [158, 2, 1, "", "keys"], [158, 2, 1, "", "pop"], [158, 2, 1, "", "popitem"], [158, 2, 1, "", "setdefault"], [158, 2, 1, "", "split"], [158, 2, 1, "", "update"], [158, 2, 1, "", "values"]], "sup3r.preprocessing.data_handlers.exo.ExoDataHandler": [[159, 3, 1, "", "cache_files"], [159, 2, 1, "", "get_all_step_data"], [159, 2, 1, "", "get_exo_rasterizer"], [159, 2, 1, "", "get_exo_steps"], [159, 2, 1, "", "get_single_step_data"]], "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep": [[160, 2, 1, "", "clear"], [160, 2, 1, "", "copy"], [160, 2, 1, "", "fromkeys"], [160, 2, 1, "", "get"], [160, 2, 1, "", "items"], [160, 2, 1, "", "keys"], [160, 2, 1, "", "pop"], [160, 2, 1, "", "popitem"], [160, 2, 1, "", "setdefault"], [160, 3, 1, "", "shape"], [160, 2, 1, "", "update"], [160, 2, 1, "", "values"]], "sup3r.preprocessing.data_handlers.nc_cc": [[162, 1, 1, "", "DataHandlerNCforCC"], [163, 1, 1, "", "DataHandlerNCforCCwithPowerLaw"]], "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC": [[162, 2, 1, "", "check_registry"], [162, 3, 1, "", "data"], [162, 2, 1, "", "derive"], [162, 2, 1, "", "do_level_interpolation"], [162, 2, 1, "", "get_clearsky_ghi"], [162, 2, 1, "", "get_inputs"], [162, 2, 1, "", "get_multi_level_data"], [162, 2, 1, "", "get_single_level_data"], [162, 2, 1, "", "get_time_slice"], [162, 2, 1, "", "has_interp_variables"], [162, 2, 1, "", "map_new_name"], [162, 2, 1, "", "no_overlap"], [162, 2, 1, "", "post_init_log"], [162, 2, 1, "", "run_input_checks"], [162, 2, 1, "", "run_wrap_checks"], [162, 2, 1, "", "scale_clearsky_ghi"], [162, 3, 1, "", "shape"], [162, 2, 1, "", "wrap"]], "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw": [[163, 2, 1, "", "check_registry"], [163, 3, 1, "", "data"], [163, 2, 1, "", "derive"], [163, 2, 1, "", "do_level_interpolation"], [163, 2, 1, "", "get_clearsky_ghi"], [163, 2, 1, "", "get_inputs"], [163, 2, 1, "", "get_multi_level_data"], [163, 2, 1, "", "get_single_level_data"], [163, 2, 1, "", "get_time_slice"], [163, 2, 1, "", "has_interp_variables"], [163, 2, 1, "", "map_new_name"], [163, 2, 1, "", "no_overlap"], [163, 2, 1, "", "post_init_log"], [163, 2, 1, "", "run_input_checks"], [163, 2, 1, "", "run_wrap_checks"], [163, 2, 1, "", "scale_clearsky_ghi"], [163, 3, 1, "", "shape"], [163, 2, 1, "", "wrap"]], "sup3r.preprocessing.derivers": [[165, 0, 0, "-", "base"], [168, 0, 0, "-", "methods"], [188, 0, 0, "-", "utilities"]], "sup3r.preprocessing.derivers.base": [[166, 1, 1, "", "BaseDeriver"], [167, 1, 1, "", "Deriver"]], "sup3r.preprocessing.derivers.base.BaseDeriver": [[166, 2, 1, "", "check_registry"], [166, 3, 1, "", "data"], [166, 2, 1, "", "derive"], [166, 2, 1, "", "do_level_interpolation"], [166, 2, 1, "", "get_inputs"], [166, 2, 1, "", "get_multi_level_data"], [166, 2, 1, "", "get_single_level_data"], [166, 2, 1, "", "has_interp_variables"], [166, 2, 1, "", "map_new_name"], [166, 2, 1, "", "no_overlap"], [166, 2, 1, "", "post_init_log"], [166, 3, 1, "", "shape"], [166, 2, 1, "", "wrap"]], "sup3r.preprocessing.derivers.base.Deriver": [[167, 2, 1, "", "check_registry"], [167, 3, 1, "", "data"], [167, 2, 1, "", "derive"], [167, 2, 1, "", "do_level_interpolation"], [167, 2, 1, "", "get_inputs"], [167, 2, 1, "", "get_multi_level_data"], [167, 2, 1, "", "get_single_level_data"], [167, 2, 1, "", "has_interp_variables"], [167, 2, 1, "", "map_new_name"], [167, 2, 1, "", "no_overlap"], [167, 2, 1, "", "post_init_log"], [167, 3, 1, "", "shape"], [167, 2, 1, "", "wrap"]], "sup3r.preprocessing.derivers.methods": [[169, 1, 1, "", "ClearSkyRatio"], [170, 1, 1, "", "ClearSkyRatioCC"], [171, 1, 1, "", "CloudMask"], [172, 1, 1, "", "DerivedFeature"], [173, 1, 1, "", "PressureWRF"], [174, 1, 1, "", "SurfaceRH"], [175, 1, 1, "", "Sza"], [176, 1, 1, "", "Tas"], [177, 1, 1, "", "TasMax"], [178, 1, 1, "", "TasMin"], [179, 1, 1, "", "TempNCforCC"], [180, 1, 1, "", "USolar"], [181, 1, 1, "", "UWind"], [182, 1, 1, "", "UWindPowerLaw"], [183, 1, 1, "", "VSolar"], [184, 1, 1, "", "VWind"], [185, 1, 1, "", "VWindPowerLaw"], [186, 1, 1, "", "Winddirection"], [187, 1, 1, "", "Windspeed"]], "sup3r.preprocessing.derivers.methods.ClearSkyRatio": [[169, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.ClearSkyRatioCC": [[170, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.CloudMask": [[171, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.DerivedFeature": [[172, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.PressureWRF": [[173, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.SurfaceRH": [[174, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.Sza": [[175, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.Tas": [[176, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.TasMax": [[177, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.TasMin": [[178, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.TempNCforCC": [[179, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.USolar": [[180, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.UWind": [[181, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.UWindPowerLaw": [[182, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.VSolar": [[183, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.VWind": [[184, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.VWindPowerLaw": [[185, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.Winddirection": [[186, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.methods.Windspeed": [[187, 2, 1, "", "compute"]], "sup3r.preprocessing.derivers.utilities": [[189, 1, 1, "", "SolarZenith"], [190, 5, 1, "", "invert_uv"], [191, 5, 1, "", "parse_feature"], [192, 5, 1, "", "transform_rotate_wind"], [193, 5, 1, "", "windspeed_log_law"]], "sup3r.preprocessing.derivers.utilities.SolarZenith": [[189, 2, 1, "", "get_zenith"]], "sup3r.preprocessing.loaders": [[195, 1, 1, "", "Loader"], [196, 0, 0, "-", "base"], [198, 0, 0, "-", "h5"], [200, 0, 0, "-", "nc"], [202, 0, 0, "-", "utilities"]], "sup3r.preprocessing.loaders.base": [[197, 1, 1, "", "BaseLoader"]], "sup3r.preprocessing.loaders.base.BaseLoader": [[197, 2, 1, "", "BASE_LOADER"], [197, 3, 1, "", "data"], [197, 3, 1, "", "file_paths"], [197, 2, 1, "", "post_init_log"], [197, 3, 1, "", "shape"], [197, 2, 1, "", "wrap"]], "sup3r.preprocessing.loaders.h5": [[199, 1, 1, "", "LoaderH5"]], "sup3r.preprocessing.loaders.h5.LoaderH5": [[199, 4, 1, "", "BASE_LOADER"], [199, 3, 1, "", "data"], [199, 3, 1, "", "file_paths"], [199, 2, 1, "", "post_init_log"], [199, 2, 1, "", "scale_factor"], [199, 3, 1, "", "shape"], [199, 2, 1, "", "wrap"]], "sup3r.preprocessing.loaders.nc": [[201, 1, 1, "", "LoaderNC"]], "sup3r.preprocessing.loaders.nc.LoaderNC": [[201, 2, 1, "", "BASE_LOADER"], [201, 3, 1, "", "data"], [201, 3, 1, "", "file_paths"], [201, 2, 1, "", "post_init_log"], [201, 3, 1, "", "shape"], [201, 2, 1, "", "wrap"]], "sup3r.preprocessing.loaders.utilities": [[203, 5, 1, "", "standardize_names"], [204, 5, 1, "", "standardize_values"]], "sup3r.preprocessing.names": [[206, 1, 1, "", "Dimension"]], "sup3r.preprocessing.names.Dimension": [[206, 2, 1, "", "__add__"], [206, 2, 1, "", "__mul__"], [206, 2, 1, "", "capitalize"], [206, 2, 1, "", "casefold"], [206, 2, 1, "", "center"], [206, 2, 1, "", "coords_2d"], [206, 2, 1, "", "coords_3d"], [206, 2, 1, "", "coords_4d"], [206, 2, 1, "", "coords_4d_pres"], [206, 2, 1, "", "count"], [206, 2, 1, "", "dims_2d"], [206, 2, 1, "", "dims_3d"], [206, 2, 1, "", "dims_3d_bc"], [206, 2, 1, "", "dims_4d"], [206, 2, 1, "", "dims_4d_bc"], [206, 2, 1, "", "dims_4d_pres"], [206, 2, 1, "", "encode"], [206, 2, 1, "", "endswith"], [206, 2, 1, "", "expandtabs"], [206, 2, 1, "", "find"], [206, 2, 1, "", "flat_2d"], [206, 2, 1, "", "format"], [206, 2, 1, "", "format_map"], [206, 2, 1, "", "index"], [206, 2, 1, "", "isalnum"], [206, 2, 1, "", "isalpha"], [206, 2, 1, "", "isascii"], [206, 2, 1, "", "isdecimal"], [206, 2, 1, "", "isdigit"], [206, 2, 1, "", "isidentifier"], [206, 2, 1, "", "islower"], [206, 2, 1, "", "isnumeric"], [206, 2, 1, "", "isprintable"], [206, 2, 1, "", "isspace"], [206, 2, 1, "", "istitle"], [206, 2, 1, "", "isupper"], [206, 2, 1, "", "join"], [206, 2, 1, "", "ljust"], [206, 2, 1, "", "lower"], [206, 2, 1, "", "lstrip"], [206, 2, 1, "", "maketrans"], [206, 2, 1, "", "order"], [206, 2, 1, "", "partition"], [206, 2, 1, "", "removeprefix"], [206, 2, 1, "", "removesuffix"], [206, 2, 1, "", "replace"], [206, 2, 1, "", "rfind"], [206, 2, 1, "", "rindex"], [206, 2, 1, "", "rjust"], [206, 2, 1, "", "rpartition"], [206, 2, 1, "", "rsplit"], [206, 2, 1, "", "rstrip"], [206, 2, 1, "", "split"], [206, 2, 1, "", "splitlines"], [206, 2, 1, "", "startswith"], [206, 2, 1, "", "strip"], [206, 2, 1, "", "swapcase"], [206, 2, 1, "", "title"], [206, 2, 1, "", "translate"], [206, 2, 1, "", "upper"], [206, 2, 1, "", "zfill"]], "sup3r.preprocessing.rasterizers": [[208, 0, 0, "-", "base"], [210, 0, 0, "-", "dual"], [212, 0, 0, "-", "exo"], [218, 0, 0, "-", "extended"]], "sup3r.preprocessing.rasterizers.base": [[209, 1, 1, "", "BaseRasterizer"]], "sup3r.preprocessing.rasterizers.base.BaseRasterizer": [[209, 2, 1, "", "check_target_and_shape"], [209, 3, 1, "", "data"], [209, 2, 1, "", "get_closest_row_col"], [209, 2, 1, "", "get_lat_lon"], [209, 2, 1, "", "get_raster_index"], [209, 3, 1, "", "grid_shape"], [209, 3, 1, "", "lat_lon"], [209, 2, 1, "", "post_init_log"], [209, 2, 1, "", "rasterize_data"], [209, 3, 1, "", "shape"], [209, 3, 1, "", "target"], [209, 3, 1, "", "time_slice"], [209, 2, 1, "", "wrap"]], "sup3r.preprocessing.rasterizers.dual": [[211, 1, 1, "", "DualRasterizer"]], "sup3r.preprocessing.rasterizers.dual.DualRasterizer": [[211, 2, 1, "", "check_regridded_lr_data"], [211, 3, 1, "", "data"], [211, 2, 1, "", "get_regridder"], [211, 2, 1, "", "post_init_log"], [211, 3, 1, "", "shape"], [211, 2, 1, "", "update_hr_data"], [211, 2, 1, "", "update_lr_data"], [211, 2, 1, "", "wrap"]], "sup3r.preprocessing.rasterizers.exo": [[213, 1, 1, "", "BaseExoRasterizer"], [214, 1, 1, "", "ExoRasterizer"], [215, 1, 1, "", "ExoRasterizerH5"], [216, 1, 1, "", "ExoRasterizerNC"], [217, 1, 1, "", "SzaRasterizer"]], "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer": [[213, 3, 1, "", "cache_file"], [213, 3, 1, "", "coords"], [213, 3, 1, "", "data"], [213, 2, 1, "", "get_data"], [213, 2, 1, "", "get_distance_upper_bound"], [213, 3, 1, "", "hr_lat_lon"], [213, 3, 1, "", "hr_shape"], [213, 3, 1, "", "hr_time_index"], [213, 3, 1, "", "lr_shape"], [213, 3, 1, "", "nn"], [213, 3, 1, "", "source_data"], [213, 3, 1, "", "source_handler"], [213, 3, 1, "", "source_lat_lon"], [213, 3, 1, "", "tree"]], "sup3r.preprocessing.rasterizers.exo.ExoRasterizer": [[214, 3, 1, "", "cache_file"], [214, 3, 1, "", "coords"], [214, 3, 1, "", "data"], [214, 2, 1, "", "get_data"], [214, 2, 1, "", "get_distance_upper_bound"], [214, 3, 1, "", "hr_lat_lon"], [214, 3, 1, "", "hr_shape"], [214, 3, 1, "", "hr_time_index"], [214, 3, 1, "", "lr_shape"], [214, 3, 1, "", "nn"], [214, 3, 1, "", "source_data"], [214, 3, 1, "", "source_handler"], [214, 3, 1, "", "source_lat_lon"], [214, 3, 1, "", "tree"]], "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5": [[215, 3, 1, "", "cache_file"], [215, 3, 1, "", "coords"], [215, 3, 1, "", "data"], [215, 2, 1, "", "get_data"], [215, 2, 1, "", "get_distance_upper_bound"], [215, 3, 1, "", "hr_lat_lon"], [215, 3, 1, "", "hr_shape"], [215, 3, 1, "", "hr_time_index"], [215, 3, 1, "", "lr_shape"], [215, 3, 1, "", "nn"], [215, 3, 1, "", "source_data"], [215, 3, 1, "", "source_handler"], [215, 3, 1, "", "source_lat_lon"], [215, 3, 1, "", "tree"]], "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC": [[216, 3, 1, "", "cache_file"], [216, 3, 1, "", "coords"], [216, 3, 1, "", "data"], [216, 2, 1, "", "get_data"], [216, 2, 1, "", "get_distance_upper_bound"], [216, 3, 1, "", "hr_lat_lon"], [216, 3, 1, "", "hr_shape"], [216, 3, 1, "", "hr_time_index"], [216, 3, 1, "", "lr_shape"], [216, 3, 1, "", "nn"], [216, 3, 1, "", "source_data"], [216, 3, 1, "", "source_handler"], [216, 3, 1, "", "source_lat_lon"], [216, 3, 1, "", "tree"]], "sup3r.preprocessing.rasterizers.exo.SzaRasterizer": [[217, 3, 1, "", "cache_file"], [217, 3, 1, "", "coords"], [217, 3, 1, "", "data"], [217, 2, 1, "", "get_data"], [217, 2, 1, "", "get_distance_upper_bound"], [217, 3, 1, "", "hr_lat_lon"], [217, 3, 1, "", "hr_shape"], [217, 3, 1, "", "hr_time_index"], [217, 3, 1, "", "lr_shape"], [217, 3, 1, "", "nn"], [217, 3, 1, "", "source_data"], [217, 3, 1, "", "source_handler"], [217, 3, 1, "", "source_lat_lon"], [217, 3, 1, "", "tree"]], "sup3r.preprocessing.rasterizers.extended": [[219, 1, 1, "", "Rasterizer"]], "sup3r.preprocessing.rasterizers.extended.Rasterizer": [[219, 2, 1, "", "check_target_and_shape"], [219, 3, 1, "", "data"], [219, 2, 1, "", "get_closest_row_col"], [219, 2, 1, "", "get_lat_lon"], [219, 2, 1, "", "get_raster_index"], [219, 3, 1, "", "grid_shape"], [219, 3, 1, "", "lat_lon"], [219, 2, 1, "", "post_init_log"], [219, 2, 1, "", "rasterize_data"], [219, 2, 1, "", "save_raster_index"], [219, 3, 1, "", "shape"], [219, 3, 1, "", "target"], [219, 3, 1, "", "time_slice"], [219, 2, 1, "", "wrap"]], "sup3r.preprocessing.samplers": [[221, 0, 0, "-", "base"], [223, 0, 0, "-", "cc"], [225, 0, 0, "-", "dc"], [227, 0, 0, "-", "dual"], [229, 0, 0, "-", "utilities"]], "sup3r.preprocessing.samplers.base": [[222, 1, 1, "", "Sampler"]], "sup3r.preprocessing.samplers.base.Sampler": [[222, 3, 1, "", "data"], [222, 2, 1, "", "get_sample_index"], [222, 3, 1, "", "hr_exo_features"], [222, 3, 1, "", "hr_features"], [222, 3, 1, "", "hr_features_ind"], [222, 3, 1, "", "hr_out_features"], [222, 3, 1, "", "hr_sample_shape"], [222, 3, 1, "", "lr_only_features"], [222, 2, 1, "", "post_init_log"], [222, 2, 1, "", "preflight"], [222, 3, 1, "", "sample_shape"], [222, 3, 1, "", "shape"], [222, 2, 1, "", "wrap"]], "sup3r.preprocessing.samplers.cc": [[224, 1, 1, "", "DualSamplerCC"]], "sup3r.preprocessing.samplers.cc.DualSamplerCC": [[224, 2, 1, "", "check_for_consistent_shapes"], [224, 3, 1, "", "data"], [224, 2, 1, "", "get_features"], [224, 2, 1, "", "get_middle_days"], [224, 2, 1, "", "get_sample_index"], [224, 3, 1, "", "hr_exo_features"], [224, 3, 1, "", "hr_features"], [224, 3, 1, "", "hr_features_ind"], [224, 3, 1, "", "hr_out_features"], [224, 3, 1, "", "hr_sample_shape"], [224, 3, 1, "", "lr_only_features"], [224, 2, 1, "", "post_init_log"], [224, 2, 1, "", "preflight"], [224, 2, 1, "", "reduce_high_res_sub_daily"], [224, 3, 1, "", "sample_shape"], [224, 3, 1, "", "shape"], [224, 2, 1, "", "wrap"]], "sup3r.preprocessing.samplers.dc": [[226, 1, 1, "", "SamplerDC"]], "sup3r.preprocessing.samplers.dc.SamplerDC": [[226, 3, 1, "", "data"], [226, 2, 1, "", "get_sample_index"], [226, 3, 1, "", "hr_exo_features"], [226, 3, 1, "", "hr_features"], [226, 3, 1, "", "hr_features_ind"], [226, 3, 1, "", "hr_out_features"], [226, 3, 1, "", "hr_sample_shape"], [226, 3, 1, "", "lr_only_features"], [226, 2, 1, "", "post_init_log"], [226, 2, 1, "", "preflight"], [226, 3, 1, "", "sample_shape"], [226, 3, 1, "", "shape"], [226, 2, 1, "", "update_weights"], [226, 2, 1, "", "wrap"]], "sup3r.preprocessing.samplers.dual": [[228, 1, 1, "", "DualSampler"]], "sup3r.preprocessing.samplers.dual.DualSampler": [[228, 2, 1, "", "check_for_consistent_shapes"], [228, 3, 1, "", "data"], [228, 2, 1, "", "get_features"], [228, 2, 1, "", "get_sample_index"], [228, 3, 1, "", "hr_exo_features"], [228, 3, 1, "", "hr_features"], [228, 3, 1, "", "hr_features_ind"], [228, 3, 1, "", "hr_out_features"], [228, 3, 1, "", "hr_sample_shape"], [228, 3, 1, "", "lr_only_features"], [228, 2, 1, "", "post_init_log"], [228, 2, 1, "", "preflight"], [228, 3, 1, "", "sample_shape"], [228, 3, 1, "", "shape"], [228, 2, 1, "", "wrap"]], "sup3r.preprocessing.samplers.utilities": [[230, 5, 1, "", "daily_time_sampler"], [231, 5, 1, "", "nsrdb_reduce_daily_data"], [232, 5, 1, "", "nsrdb_sub_daily_sampler"], [233, 5, 1, "", "uniform_box_sampler"], [234, 5, 1, "", "uniform_time_sampler"], [235, 5, 1, "", "weighted_box_sampler"], [236, 5, 1, "", "weighted_time_sampler"]], "sup3r.preprocessing.utilities": [[238, 5, 1, "", "check_signatures"], [239, 5, 1, "", "composite_info"], [240, 5, 1, "", "composite_sig"], [241, 5, 1, "", "compute_if_dask"], [242, 5, 1, "", "contains_ellipsis"], [243, 5, 1, "", "dims_array_tuple"], [244, 5, 1, "", "expand_paths"], [245, 5, 1, "", "get_class_kwargs"], [246, 5, 1, "", "get_date_range_kwargs"], [247, 5, 1, "", "get_input_handler_class"], [248, 5, 1, "", "get_obj_params"], [249, 5, 1, "", "get_source_type"], [250, 5, 1, "", "is_type_of"], [251, 5, 1, "", "log_args"], [252, 5, 1, "", "lower_names"], [253, 5, 1, "", "lowered"], [254, 5, 1, "", "make_time_index_from_kws"], [255, 5, 1, "", "numpy_if_tensor"], [256, 5, 1, "", "ordered_array"], [257, 5, 1, "", "ordered_dims"], [258, 5, 1, "", "parse_ellipsis"], [259, 5, 1, "", "parse_features"], [260, 5, 1, "", "parse_keys"], [261, 5, 1, "", "parse_to_list"]], "sup3r.qa": [[263, 0, 0, "-", "qa"], [265, 0, 0, "-", "qa_cli"], [266, 0, 0, "-", "utilities"]], "sup3r.qa.qa": [[264, 1, 1, "", "Sup3rQa"]], "sup3r.qa.qa.Sup3rQa": [[264, 2, 1, "", "bias_correct_input_handler"], [264, 2, 1, "", "close"], [264, 2, 1, "", "coarsen_data"], [264, 2, 1, "", "export"], [264, 3, 1, "", "features"], [264, 2, 1, "", "get_dset_out"], [264, 2, 1, "", "get_node_cmd"], [264, 3, 1, "", "output_names"], [264, 3, 1, "", "output_type"], [264, 2, 1, "", "run"], [264, 3, 1, "", "source_features"]], "sup3r.qa.utilities": [[267, 5, 1, "", "continuous_dist"], [268, 5, 1, "", "direct_dist"], [269, 5, 1, "", "frequency_spectrum"], [270, 5, 1, "", "gradient_dist"], [271, 5, 1, "", "time_derivative_dist"], [272, 5, 1, "", "tke_frequency_spectrum"], [273, 5, 1, "", "tke_wavenumber_spectrum"], [274, 5, 1, "", "wavenumber_spectrum"]], "sup3r.solar": [[276, 0, 0, "-", "solar"], [278, 0, 0, "-", "solar_cli"]], "sup3r.solar.solar": [[277, 1, 1, "", "Solar"]], "sup3r.solar.solar.Solar": [[277, 3, 1, "", "clearsky_ratio"], [277, 2, 1, "", "close"], [277, 3, 1, "", "cloud_mask"], [277, 3, 1, "", "dhi"], [277, 3, 1, "", "dist"], [277, 3, 1, "", "dni"], [277, 2, 1, "", "get_node_cmd"], [277, 2, 1, "", "get_nsrdb_data"], [277, 2, 1, "", "get_sup3r_fps"], [277, 3, 1, "", "ghi"], [277, 3, 1, "", "idnn"], [277, 3, 1, "", "nsrdb_tslice"], [277, 3, 1, "", "out_of_bounds"], [277, 2, 1, "", "preflight"], [277, 2, 1, "", "run_temporal_chunks"], [277, 3, 1, "", "solar_zenith_angle"], [277, 3, 1, "", "time_index"], [277, 2, 1, "", "write"]], "sup3r.solar.solar_cli": [[279, 5, 1, "", "kickoff_local_job"], [280, 5, 1, "", "kickoff_slurm_job"]], "sup3r.utilities": [[282, 1, 1, "", "ModuleName"], [283, 0, 0, "-", "cli"], [286, 0, 0, "-", "era_downloader"], [288, 0, 0, "-", "interpolation"], [290, 0, 0, "-", "loss_metrics"], [307, 0, 0, "-", "pytest"], [324, 0, 0, "-", "utilities"]], "sup3r.utilities.ModuleName": [[282, 2, 1, "", "__add__"], [282, 2, 1, "", "__mul__"], [282, 2, 1, "", "all_names"], [282, 2, 1, "", "capitalize"], [282, 2, 1, "", "casefold"], [282, 2, 1, "", "center"], [282, 2, 1, "", "count"], [282, 2, 1, "", "encode"], [282, 2, 1, "", "endswith"], [282, 2, 1, "", "expandtabs"], [282, 2, 1, "", "find"], [282, 2, 1, "", "format"], [282, 2, 1, "", "format_map"], [282, 2, 1, "", "index"], [282, 2, 1, "", "isalnum"], [282, 2, 1, "", "isalpha"], [282, 2, 1, "", "isascii"], [282, 2, 1, "", "isdecimal"], [282, 2, 1, "", "isdigit"], [282, 2, 1, "", "isidentifier"], [282, 2, 1, "", "islower"], [282, 2, 1, "", "isnumeric"], [282, 2, 1, "", "isprintable"], [282, 2, 1, "", "isspace"], [282, 2, 1, "", "istitle"], [282, 2, 1, "", "isupper"], [282, 2, 1, "", "join"], [282, 2, 1, "", "ljust"], [282, 2, 1, "", "lower"], [282, 2, 1, "", "lstrip"], [282, 2, 1, "", "maketrans"], [282, 2, 1, "", "partition"], [282, 2, 1, "", "removeprefix"], [282, 2, 1, "", "removesuffix"], [282, 2, 1, "", "replace"], [282, 2, 1, "", "rfind"], [282, 2, 1, "", "rindex"], [282, 2, 1, "", "rjust"], [282, 2, 1, "", "rpartition"], [282, 2, 1, "", "rsplit"], [282, 2, 1, "", "rstrip"], [282, 2, 1, "", "split"], [282, 2, 1, "", "splitlines"], [282, 2, 1, "", "startswith"], [282, 2, 1, "", "strip"], [282, 2, 1, "", "swapcase"], [282, 2, 1, "", "title"], [282, 2, 1, "", "translate"], [282, 2, 1, "", "upper"], [282, 2, 1, "", "zfill"]], "sup3r.utilities.cli": [[284, 1, 1, "", "BaseCLI"], [285, 1, 1, "", "SlurmManager"]], "sup3r.utilities.cli.BaseCLI": [[284, 2, 1, "", "add_status_cmd"], [284, 2, 1, "", "check_module_name"], [284, 2, 1, "", "from_config"], [284, 2, 1, "", "from_config_preflight"], [284, 2, 1, "", "kickoff_local_job"], [284, 2, 1, "", "kickoff_slurm_job"]], "sup3r.utilities.cli.SlurmManager": [[285, 2, 1, "", "change_qos"], [285, 2, 1, "", "check_status"], [285, 2, 1, "", "check_status_using_job_id"], [285, 2, 1, "", "format_walltime"], [285, 2, 1, "", "hold"], [285, 2, 1, "", "make_path"], [285, 2, 1, "", "make_sh"], [285, 2, 1, "", "parse_queue_str"], [285, 2, 1, "", "query_queue"], [285, 3, 1, "", "queue"], [285, 3, 1, "", "queue_job_ids"], [285, 3, 1, "", "queue_job_names"], [285, 2, 1, "", "release"], [285, 2, 1, "", "rm"], [285, 2, 1, "", "s"], [285, 2, 1, "", "sbatch"], [285, 2, 1, "", "scancel"], [285, 2, 1, "", "scontrol"], [285, 2, 1, "", "submit"]], "sup3r.utilities.era_downloader": [[287, 1, 1, "", "EraDownloader"]], "sup3r.utilities.era_downloader.EraDownloader": [[287, 2, 1, "", "add_pressure"], [287, 2, 1, "", "all_vars_exist"], [287, 2, 1, "", "convert_z"], [287, 3, 1, "", "days"], [287, 2, 1, "", "download_file"], [287, 2, 1, "", "download_process_combine"], [287, 2, 1, "", "get_cds_client"], [287, 2, 1, "", "get_hours"], [287, 2, 1, "", "get_monthly_file"], [287, 2, 1, "", "get_tmp_file"], [287, 3, 1, "", "level_file"], [287, 2, 1, "", "make_yearly_file"], [287, 2, 1, "", "make_yearly_var_file"], [287, 3, 1, "", "monthly_file"], [287, 2, 1, "", "prep_var_lists"], [287, 2, 1, "", "process_and_combine"], [287, 2, 1, "", "process_level_file"], [287, 2, 1, "", "process_surface_file"], [287, 2, 1, "", "run"], [287, 2, 1, "", "run_for_var"], [287, 2, 1, "", "run_month"], [287, 2, 1, "", "run_qa"], [287, 3, 1, "", "surface_file"], [287, 3, 1, "", "variables"]], "sup3r.utilities.interpolation": [[289, 1, 1, "", "Interpolator"]], "sup3r.utilities.interpolation.Interpolator": [[289, 2, 1, "", "get_level_masks"], [289, 2, 1, "", "interp_to_level"]], "sup3r.utilities.loss_metrics": [[291, 1, 1, "", "CoarseMseLoss"], [292, 1, 1, "", "ExpLoss"], [293, 1, 1, "", "LowResLoss"], [294, 1, 1, "", "MaterialDerivativeLoss"], [295, 1, 1, "", "MmdLoss"], [296, 1, 1, "", "MmdMseLoss"], [297, 1, 1, "", "MseExpLoss"], [298, 1, 1, "", "SpatialExtremesLoss"], [299, 1, 1, "", "SpatialExtremesOnlyLoss"], [300, 1, 1, "", "SpatialFftOnlyLoss"], [301, 1, 1, "", "SpatiotemporalExtremesLoss"], [302, 1, 1, "", "SpatiotemporalFftOnlyLoss"], [303, 1, 1, "", "StExtremesFftLoss"], [304, 1, 1, "", "TemporalExtremesLoss"], [305, 1, 1, "", "TemporalExtremesOnlyLoss"], [306, 5, 1, "", "gaussian_kernel"]], "sup3r.utilities.loss_metrics.CoarseMseLoss": [[291, 2, 1, "", "__call__"], [291, 2, 1, "", "call"], [291, 2, 1, "", "from_config"], [291, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.ExpLoss": [[292, 2, 1, "", "__call__"], [292, 2, 1, "", "call"], [292, 2, 1, "", "from_config"], [292, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.LowResLoss": [[293, 2, 1, "", "__call__"], [293, 2, 1, "", "call"], [293, 2, 1, "", "from_config"], [293, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.MaterialDerivativeLoss": [[294, 2, 1, "", "__call__"], [294, 2, 1, "", "call"], [294, 2, 1, "", "from_config"], [294, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.MmdLoss": [[295, 2, 1, "", "__call__"], [295, 2, 1, "", "call"], [295, 2, 1, "", "from_config"], [295, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.MmdMseLoss": [[296, 2, 1, "", "__call__"], [296, 2, 1, "", "call"], [296, 2, 1, "", "from_config"], [296, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.MseExpLoss": [[297, 2, 1, "", "__call__"], [297, 2, 1, "", "call"], [297, 2, 1, "", "from_config"], [297, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.SpatialExtremesLoss": [[298, 2, 1, "", "__call__"], [298, 2, 1, "", "call"], [298, 2, 1, "", "from_config"], [298, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.SpatialExtremesOnlyLoss": [[299, 2, 1, "", "__call__"], [299, 2, 1, "", "call"], [299, 2, 1, "", "from_config"], [299, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.SpatialFftOnlyLoss": [[300, 2, 1, "", "__call__"], [300, 2, 1, "", "call"], [300, 2, 1, "", "from_config"], [300, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.SpatiotemporalExtremesLoss": [[301, 2, 1, "", "__call__"], [301, 2, 1, "", "call"], [301, 2, 1, "", "from_config"], [301, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.SpatiotemporalFftOnlyLoss": [[302, 2, 1, "", "__call__"], [302, 2, 1, "", "call"], [302, 2, 1, "", "from_config"], [302, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.StExtremesFftLoss": [[303, 2, 1, "", "__call__"], [303, 2, 1, "", "call"], [303, 2, 1, "", "from_config"], [303, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.TemporalExtremesLoss": [[304, 2, 1, "", "__call__"], [304, 2, 1, "", "call"], [304, 2, 1, "", "from_config"], [304, 2, 1, "", "get_config"]], "sup3r.utilities.loss_metrics.TemporalExtremesOnlyLoss": [[305, 2, 1, "", "__call__"], [305, 2, 1, "", "call"], [305, 2, 1, "", "from_config"], [305, 2, 1, "", "get_config"]], "sup3r.utilities.pytest": [[308, 0, 0, "-", "helpers"]], "sup3r.utilities.pytest.helpers": [[309, 1, 1, "", "BatchHandlerTesterCC"], [310, 1, 1, "", "BatchHandlerTesterDC"], [311, 5, 1, "", "BatchHandlerTesterFactory"], [312, 4, 1, "", "DualSamplerTesterCC"], [313, 1, 1, "", "DummyData"], [314, 1, 1, "", "DummySampler"], [315, 1, 1, "", "SamplerTester"], [316, 4, 1, "", "SamplerTesterDC"], [317, 5, 1, "", "make_collect_chunks"], [318, 5, 1, "", "make_fake_cs_ratio_files"], [319, 5, 1, "", "make_fake_dset"], [320, 5, 1, "", "make_fake_h5_chunks"], [321, 5, 1, "", "make_fake_nc_file"], [322, 5, 1, "", "make_fake_tif"], [323, 5, 1, "", "test_sampler_factory"]], "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC": [[309, 1, 1, "", "Batch"], [309, 4, 1, "", "SAMPLER"], [309, 4, 1, "", "TRAIN_QUEUE"], [309, 4, 1, "", "VAL_QUEUE"], [309, 2, 1, "", "check_enhancement_factors"], [309, 2, 1, "", "check_features"], [309, 2, 1, "", "check_shared_attr"], [309, 3, 1, "", "container_weights"], [309, 3, 1, "", "data"], [309, 2, 1, "", "enqueue_batch"], [309, 2, 1, "", "enqueue_batches"], [309, 3, 1, "", "features"], [309, 2, 1, "", "get_batch"], [309, 2, 1, "", "get_container_index"], [309, 2, 1, "", "get_queue"], [309, 2, 1, "", "get_random_container"], [309, 3, 1, "", "hr_shape"], [309, 2, 1, "", "init_samplers"], [309, 2, 1, "", "log_queue_info"], [309, 3, 1, "", "lr_shape"], [309, 2, 1, "", "post_init_log"], [309, 2, 1, "", "post_proc"], [309, 2, 1, "", "preflight"], [309, 3, 1, "", "queue_shape"], [309, 3, 1, "", "queue_thread"], [309, 3, 1, "", "running"], [309, 2, 1, "", "sample_batch"], [309, 3, 1, "", "shape"], [309, 2, 1, "", "start"], [309, 2, 1, "", "stop"], [309, 2, 1, "", "transform"], [309, 2, 1, "", "wrap"]], "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC.Batch": [[309, 2, 1, "", "__add__"], [309, 2, 1, "", "__mul__"], [309, 2, 1, "", "count"], [309, 4, 1, "", "high_res"], [309, 2, 1, "", "index"], [309, 4, 1, "", "low_res"]], "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC": [[310, 1, 1, "", "Batch"], [310, 4, 1, "", "SAMPLER"], [310, 4, 1, "", "TRAIN_QUEUE"], [310, 4, 1, "", "VAL_QUEUE"], [310, 2, 1, "", "check_enhancement_factors"], [310, 2, 1, "", "check_features"], [310, 2, 1, "", "check_shared_attr"], [310, 3, 1, "", "container_weights"], [310, 3, 1, "", "data"], [310, 2, 1, "", "enqueue_batch"], [310, 2, 1, "", "enqueue_batches"], [310, 3, 1, "", "features"], [310, 2, 1, "", "get_batch"], [310, 2, 1, "", "get_container_index"], [310, 2, 1, "", "get_queue"], [310, 2, 1, "", "get_random_container"], [310, 3, 1, "", "hr_shape"], [310, 2, 1, "", "init_samplers"], [310, 2, 1, "", "log_queue_info"], [310, 3, 1, "", "lr_shape"], [310, 2, 1, "", "post_init_log"], [310, 2, 1, "", "post_proc"], [310, 2, 1, "", "preflight"], [310, 3, 1, "", "queue_shape"], [310, 3, 1, "", "queue_thread"], [310, 3, 1, "", "running"], [310, 2, 1, "", "sample_batch"], [310, 3, 1, "", "shape"], [310, 3, 1, "", "spatial_weights"], [310, 2, 1, "", "start"], [310, 2, 1, "", "stop"], [310, 3, 1, "", "temporal_weights"], [310, 2, 1, "", "transform"], [310, 2, 1, "", "update_record"], [310, 2, 1, "", "update_weights"], [310, 2, 1, "", "wrap"]], "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC.Batch": [[310, 2, 1, "", "__add__"], [310, 2, 1, "", "__mul__"], [310, 2, 1, "", "count"], [310, 4, 1, "", "high_res"], [310, 2, 1, "", "index"], [310, 4, 1, "", "low_res"]], "sup3r.utilities.pytest.helpers.DummyData": [[313, 3, 1, "", "data"], [313, 2, 1, "", "post_init_log"], [313, 3, 1, "", "shape"], [313, 2, 1, "", "wrap"]], "sup3r.utilities.pytest.helpers.DummySampler": [[314, 3, 1, "", "data"], [314, 2, 1, "", "get_sample_index"], [314, 3, 1, "", "hr_exo_features"], [314, 3, 1, "", "hr_features"], [314, 3, 1, "", "hr_features_ind"], [314, 3, 1, "", "hr_out_features"], [314, 3, 1, "", "hr_sample_shape"], [314, 3, 1, "", "lr_only_features"], [314, 2, 1, "", "post_init_log"], [314, 2, 1, "", "preflight"], [314, 3, 1, "", "sample_shape"], [314, 3, 1, "", "shape"], [314, 2, 1, "", "wrap"]], "sup3r.utilities.pytest.helpers.SamplerTester": [[315, 3, 1, "", "data"], [315, 2, 1, "", "get_sample_index"], [315, 3, 1, "", "hr_exo_features"], [315, 3, 1, "", "hr_features"], [315, 3, 1, "", "hr_features_ind"], [315, 3, 1, "", "hr_out_features"], [315, 3, 1, "", "hr_sample_shape"], [315, 3, 1, "", "lr_only_features"], [315, 2, 1, "", "post_init_log"], [315, 2, 1, "", "preflight"], [315, 3, 1, "", "sample_shape"], [315, 3, 1, "", "shape"], [315, 2, 1, "", "wrap"]], "sup3r.utilities.utilities": [[325, 1, 1, "", "Timer"], [326, 5, 1, "", "generate_random_string"], [327, 5, 1, "", "nn_fill_array"], [328, 5, 1, "", "pd_date_range"], [329, 5, 1, "", "preprocess_datasets"], [330, 5, 1, "", "safe_cast"], [331, 5, 1, "", "safe_serialize"], [332, 5, 1, "", "spatial_coarsening"], [333, 5, 1, "", "temporal_coarsening"], [334, 5, 1, "", "xr_open_mfdataset"]], "sup3r.utilities.utilities.Timer": [[325, 2, 1, "", "__call__"], [325, 3, 1, "", "elapsed"], [325, 3, 1, "", "elapsed_str"], [325, 2, 1, "", "start"], [325, 2, 1, "", "stop"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "std:cmdoption"}, "terms": {"": [7, 9, 10, 11, 12, 13, 25, 30, 32, 37, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 84, 105, 144, 158, 160, 189, 195, 197, 199, 201, 206, 231, 244, 277, 282, 285, 336, 339, 340, 341], "0": [5, 7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 27, 28, 30, 32, 36, 37, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 75, 84, 92, 96, 98, 101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 153, 154, 155, 156, 158, 159, 162, 163, 167, 171, 174, 222, 224, 226, 231, 235, 236, 267, 268, 269, 270, 271, 272, 273, 274, 277, 285, 295, 296, 298, 301, 303, 304, 306, 309, 310, 314, 315, 317, 320, 328, 332, 336, 339, 340, 341], "00": [51, 63], "0000": [206, 282], "0001": [45, 47, 49, 84], "0002": [42, 45, 47, 49, 57], "00022470": [182, 185], "001": [45, 49, 57], "002": [42, 45, 47, 49, 57], "005": [42, 45, 47, 49, 57], "0065": 59, "007f": [206, 282], "00h": 30, "01": [28, 30, 42, 45, 47, 49, 51, 57, 63], "01507": 339, "01736911": 59, "01mm": 30, "02": [51, 63], "024": 339, "07": 30, "07c": 59, "08go28308": [339, 340, 341], "0998": [42, 45, 47, 49, 57], "0d": [45, 47, 49, 57, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "1": [7, 9, 10, 11, 12, 13, 18, 23, 24, 28, 30, 32, 36, 37, 42, 45, 47, 49, 53, 54, 55, 57, 59, 72, 75, 84, 101, 103, 104, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 144, 148, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 171, 189, 197, 199, 201, 206, 209, 211, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 235, 258, 264, 268, 269, 270, 271, 272, 273, 274, 277, 282, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 313, 314, 315, 317, 320, 328, 332, 336, 339, 340, 343], "10": [7, 9, 10, 11, 12, 13, 30, 32, 49, 72, 101, 144, 182, 185, 189, 219, 277, 339, 341], "100": [49, 94, 144, 153, 154, 155, 156, 159, 162, 163, 166, 167, 174, 191, 213, 214, 336], "1000": 191, "100km": [213, 214, 339], "100m": [153, 154, 155, 156, 162, 163, 166, 167], "101": [30, 32], "101325": 59, "1038": [7, 9, 10, 11, 12, 13, 339], "10470503": [182, 185], "1080": [182, 185], "11": [341, 342], "12": [10, 11, 13, 30, 32, 36], "120": [30, 32], "130": [92, 96, 98, 336, 340], "14042894": 341, "15": [30, 51, 63, 72, 213, 214, 340], "157e": 30, "15min": 271, "15th": 30, "16": [28, 30, 57, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 222, 224, 226, 228, 309, 310], "17": [30, 32], "170": 339, "18": 339, "180": [92, 96, 98, 204], "19086": 340, "1970814": 339, "1977": [182, 185], "1d": [7, 9, 10, 11, 12, 13, 30, 32, 94, 213, 214, 215, 216, 217, 269, 272, 273, 274, 277], "1mm": 30, "1st": [30, 32, 55, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "2": [22, 23, 24, 25, 28, 30, 32, 41, 45, 47, 49, 57, 59, 72, 75, 92, 96, 98, 101, 103, 104, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 144, 148, 150, 153, 154, 155, 156, 158, 160, 162, 163, 166, 167, 174, 189, 190, 192, 197, 199, 201, 209, 211, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 230, 231, 235, 236, 264, 294, 309, 310, 313, 314, 315, 317, 318, 320, 332, 339, 340, 343], "20": [49, 144, 219, 235, 317, 320, 336], "2000": 340, "2006": 30, "2007": 339, "2013": 339, "2014": [7, 9, 10, 11, 12, 13], "2015": [23, 24, 28, 30, 32, 37, 339], "2021": 339, "2022": 282, "2023": [339, 340], "2024": [102, 147, 339, 340, 341], "20km": 59, "216": 339, "225": 174, "24": [30, 32, 57, 224, 230, 232, 277, 336], "2407": 340, "24156": 174, "2421": [28, 30], "2442": [28, 30], "24hour": 57, "25": [13, 28, 30, 92, 96, 98, 336], "25328": 59, "25984": 339, "25km": [213, 214], "26": 282, "27": 339, "28": [30, 32], "2d": [24, 30, 54, 59, 72, 75, 101, 206, 209, 213, 214, 215, 216, 217, 219, 233, 264, 277, 332], "2gb": 75, "2km": 340, "2nd": [54, 55, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 160], "2x": [72, 320], "3": [28, 30, 45, 49, 55, 57, 59, 72, 101, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 159, 206, 224, 231, 235, 264, 277, 282, 287, 336, 340, 341, 342], "30": [30, 32, 51, 63], "30km": [45, 47, 49, 51, 57, 59, 159, 340], "360": [92, 96, 98, 268, 270, 271, 317, 320], "366": [30, 32], "3d": [21, 22, 23, 24, 25, 36, 37, 55, 59, 72, 101, 140, 158, 190, 192, 206, 208, 209, 332], "3rd": [23, 24, 25, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "4": [7, 9, 10, 11, 12, 13, 16, 23, 24, 28, 30, 37, 59, 69, 72, 89, 108, 134, 135, 141, 213, 214, 235, 264, 280, 284, 310, 328, 333, 336, 341, 342], "40": [235, 268, 270, 271], "40m": [153, 154, 155, 156, 162, 163, 166, 167], "4364": [7, 9, 10, 11, 12, 13], "44307": 59, "45": [30, 45, 49, 51, 57, 63], "48": [277, 336], "4d": [24, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 140, 158, 206, 289, 310, 332], "4km": [57, 213, 214, 268, 270, 339], "4x": [213, 214], "5": [13, 30, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 72, 108, 226, 264, 277, 282, 310, 336, 339, 340], "50": [13, 92, 96, 98], "51870": 75, "5281": 341, "5839": 339, "5d": [41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 140, 141, 224, 231, 291, 310, 332, 333], "5x": [159, 320], "6": [28, 30, 45, 49, 57, 339], "60min": [45, 47, 49, 51, 57, 59], "64": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "69231": 59, "6938": [30, 32], "6959": [30, 32], "6km": 159, "7": [30, 72, 277], "72": 224, "75": 13, "8": [57, 72, 102, 147, 206, 224, 236, 282, 285, 336, 339], "80": [92, 96, 98], "86": 174, "9": [45, 49, 57, 224, 268, 270, 271, 339], "9223372036854775807": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "95": [13, 45, 49, 57, 336], "99": [13, 45, 49, 57, 268, 270, 271, 277], "9924283": 59, "99th": [268, 270, 271], "A": [7, 9, 10, 11, 12, 13, 30, 32, 41, 42, 45, 47, 49, 51, 54, 55, 57, 59, 66, 75, 159, 206, 211, 213, 214, 222, 224, 226, 228, 244, 264, 282, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 314, 315, 328, 336, 339, 340], "As": [75, 264, 282, 339], "At": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "Be": [24, 37], "But": 24, "By": [15, 16, 68, 69, 84, 88, 89, 144, 279, 280, 284], "For": [7, 9, 10, 11, 12, 13, 27, 28, 30, 32, 53, 54, 55, 59, 75, 92, 96, 98, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 126, 127, 128, 129, 130, 131, 132, 153, 154, 155, 156, 158, 160, 162, 163, 209, 213, 214, 224, 268, 270, 271, 277, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 309, 325, 336, 339, 341, 342], "If": [7, 9, 10, 11, 12, 13, 15, 16, 22, 23, 24, 25, 28, 30, 32, 36, 37, 41, 42, 45, 47, 49, 55, 57, 66, 68, 69, 72, 75, 84, 86, 88, 89, 92, 94, 96, 98, 99, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 144, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 195, 197, 199, 201, 206, 209, 211, 213, 214, 219, 222, 224, 226, 231, 232, 235, 236, 247, 259, 260, 264, 267, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 282, 284, 287, 289, 309, 310, 314, 315, 318, 332, 339, 340], "In": [7, 9, 10, 11, 12, 13, 28, 30, 32, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 158, 160, 206, 282, 309, 310, 339, 340], "It": [24, 30, 32, 55, 72, 104, 211, 277], "Its": 24, "No": [54, 339, 340, 341], "Not": [42, 45, 47, 49, 57, 153], "Of": [147, 224], "One": [7, 9, 10, 11, 12, 13, 30, 32, 36, 37, 94, 244, 249], "The": [7, 9, 10, 11, 12, 13, 24, 27, 28, 30, 32, 34, 37, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 75, 92, 96, 98, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 135, 144, 157, 158, 159, 160, 166, 195, 197, 199, 201, 206, 209, 211, 213, 214, 215, 216, 217, 219, 224, 228, 277, 282, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 310, 336, 339, 340, 341, 342], "Then": 287, "There": [30, 32, 37, 112, 336, 339, 340], "These": [20, 36, 37, 72, 75, 99, 101, 104, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 137, 147, 148, 153, 154, 155, 156, 162, 163, 195, 197, 199, 200, 201, 219, 221, 222, 224, 226, 227, 228, 264, 277, 309, 314, 315], "To": [30, 101, 108, 112, 144, 158, 189, 286, 336, 339, 340, 341], "Will": [153, 154, 155, 156, 162, 163, 166, 167, 195, 197, 199, 201, 219], "With": [55, 57, 206, 220, 282, 340], "_": [84, 287], "__add__": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 206, 282, 309, 310], "__call__": [105, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 325], "__contains__": [153, 154, 155, 156, 162, 163, 166, 167], "__getattr__": 101, "__getitem__": [101, 197, 199, 201, 206, 242, 282], "__init__": 251, "__mul__": [101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 206, 282, 309, 310], "__name__": 105, "__next__": [222, 224, 226, 228, 314, 315], "__signature__": 105, "__subclasscheck__": 105, "_adder": [22, 25, 36], "_combin": 287, "_d": [101, 104], "_get_pad_width": 72, "_grid_shap": [209, 219], "_group": 94, "_hr_crop_slic": 72, "_mean": [42, 45, 47, 49, 57], "_param": [23, 24, 30, 32, 37], "_s_hr_crop_slic": 72, "_s_hr_slice": 72, "_s_lr_crop_slic": 72, "_s_lr_pad_slic": 72, "_s_lr_slice": 72, "_scalar": [22, 25, 36], "_stdev": [42, 45, 47, 49, 57], "_t_hr_crop_slic": 72, "_t_lr_crop_slic": 72, "_t_lr_pad_slic": 72, "_target": [209, 219], "_temporal_pad": [55, 57], "ab": [206, 282], "abatzogl": [28, 30], "abc": [5, 41, 42, 82, 105, 122, 172, 197, 213], "abcmeta": 105, "abil": 200, "abl": 198, "about": [41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 221, 309, 310, 339], "abov": [92, 96, 98, 182, 185, 193, 268, 270, 271, 289], "absolut": [37, 42, 45, 47, 49, 57], "abstract": [53, 82, 125, 126, 172, 196, 213, 214, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "abstractbatchqueu": [110, 111, 113, 114, 115, 117, 118, 119, 124, 137], "abstractbiascorrect": [9, 32], "abstractinterfac": [45, 47, 51, 53], "abstractsinglemodel": [45, 47], "ac36": [339, 340, 341], "accept": [28, 30, 293, 333, 339, 340, 341], "access": [7, 9, 10, 11, 12, 13, 30, 32, 34, 99, 101, 104, 172, 197, 199, 201, 232, 315, 338], "accessor": [153, 154, 155, 156, 162, 163, 172, 206], "accord": [72, 75, 107, 140, 141, 158, 159, 160, 225, 264, 332, 333], "accordingli": [6, 159, 213, 214], "account": [72, 268, 270, 271], "accross": 72, "accur": 339, "accuraci": [294, 298, 299, 300, 301, 302, 303, 304, 305], "achiev": 193, "acknowledg": 338, "across": [7, 9, 10, 11, 12, 13, 30, 32, 49, 60, 72, 75, 108, 134, 135, 138, 150, 188, 189, 226, 237, 277, 301, 303, 310, 324, 339], "activ": [22, 23, 24, 25, 285, 325, 341, 342], "actual": [32, 45, 49, 57, 277, 336, 339], "ad": [66, 94, 144, 153, 336], "adam": [42, 45, 47, 49, 57], "adapt": [45, 49, 57, 108, 134, 135, 219, 310], "adaptive_update_bound": [45, 49, 57], "adaptive_update_fract": [45, 49, 57], "add": [41, 45, 47, 49, 55, 57, 59, 75, 94, 101, 144, 153, 154, 155, 156, 159, 162, 163, 166, 167, 277, 287], "add_coord_meta": 144, "add_dataset": 94, "add_dims_to_data_var": 101, "add_pressur": 287, "add_status_cmd": 284, "adder": [7, 9, 10, 11, 12, 13, 21, 22, 25, 27, 30, 32, 94], "adder_rang": 25, "addit": [16, 42, 45, 47, 49, 54, 57, 59, 69, 89, 92, 96, 98, 101, 103, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 162, 163, 166, 167, 194, 195, 197, 199, 201, 209, 211, 219, 221, 222, 224, 226, 228, 264, 280, 284, 285, 293, 299, 305, 309, 310, 313, 314, 315, 339], "address": [30, 45, 47, 49, 57], "adher": 336, "adjust": [7, 9, 10, 11, 12, 13, 30, 32, 57, 59, 72], "advanc": [339, 340, 341], "advers": 285, "adversari": [45, 49, 57, 341], "affect": [9, 10, 11, 12, 13, 27, 30, 32], "after": [42, 45, 47, 49, 57, 78, 84, 94, 103, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 162, 163, 166, 167, 197, 199, 201, 206, 209, 211, 213, 214, 219, 222, 224, 226, 228, 277, 282, 285, 309, 310, 313, 314, 315, 336], "again": [339, 340], "against": [18, 84], "agenc": 341, "agg_factor": 277, "aggreg": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 51, 59, 104, 162, 163, 213, 214, 215, 216, 217, 264, 277], "agnost": [263, 264], "air": [59, 176, 177, 178, 179], "aka": 94, "al": [23, 24, 30, 32, 37, 339], "alia": [108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 155, 156, 199, 309, 310, 312, 316], "align": [24, 192], "all": [7, 9, 10, 11, 12, 13, 18, 19, 28, 30, 32, 35, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 75, 82, 84, 86, 92, 94, 96, 98, 99, 100, 101, 102, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 144, 148, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 169, 170, 172, 195, 197, 199, 201, 204, 206, 209, 211, 219, 220, 222, 252, 256, 259, 260, 264, 277, 282, 284, 285, 287, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 309, 310, 314, 315, 336, 339, 340], "all_nam": 282, "all_vars_exist": 287, "allevi": [9, 10, 11, 12, 13, 27, 30, 32], "allianc": [339, 340, 341], "alloc": [16, 69, 89, 280, 284, 285, 336], "allow": [7, 9, 10, 11, 12, 13, 25, 30, 32, 45, 49, 57, 66, 75, 105, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 220, 268, 270, 271, 339, 340, 341], "allowed_const": [66, 75], "almost": [291, 292, 294, 295, 296, 297, 299, 300, 302, 305], "along": [30, 32, 59, 75, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 153, 154, 155, 156, 159, 162, 163, 167, 264, 339], "alpha": [206, 282], "alphabet": [206, 282], "alreadi": [7, 9, 10, 11, 12, 13, 18, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 75, 99, 101, 153, 154, 155, 156, 162, 163, 166, 167, 172], "also": [7, 9, 10, 11, 12, 13, 19, 24, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 75, 94, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 123, 136, 144, 147, 148, 150, 153, 154, 155, 156, 158, 159, 162, 163, 166, 167, 172, 200, 206, 208, 209, 211, 213, 214, 219, 221, 222, 224, 226, 228, 246, 254, 264, 282, 285, 287, 309, 310, 314, 315, 336, 339, 340], "altern": [7, 9, 10, 11, 12, 13, 30, 32, 153, 154, 155, 156, 162, 163, 166, 167, 264], "alwai": [42, 45, 47, 49, 53, 54, 55, 57, 72, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 196, 224], "ambient": 174, "ametsoc": 174, "amount": [45, 49, 57], "amplitud": [269, 272, 273, 274], "an": [7, 9, 10, 11, 12, 13, 23, 24, 28, 30, 32, 36, 37, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 75, 94, 101, 103, 104, 105, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 206, 209, 213, 214, 219, 222, 224, 228, 230, 232, 242, 250, 258, 259, 264, 267, 268, 270, 271, 277, 282, 285, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 309, 310, 313, 314, 315, 327, 339, 340], "analyst": 343, "analyt": [30, 32], "analyz": [28, 30], "ancillari": 340, "andrew": [339, 341], "angl": [175, 189, 190, 192, 277], "ani": [7, 9, 10, 11, 12, 13, 30, 32, 59, 66, 72, 75, 92, 96, 98, 101, 153, 154, 155, 156, 159, 162, 163, 166, 167, 171, 172, 206, 211, 213, 214, 222, 224, 226, 228, 244, 264, 282, 314, 315, 327, 336, 339], "annot": 251, "annual": [12, 22, 25, 30, 32, 36, 339, 340], "anoth": [13, 41, 264, 268, 270, 271], "anyon": 339, "anyth": [30, 51, 59, 207], "api": [286, 287, 339, 340], "appar": 121, "append": [101, 264, 284], "appli": [18, 21, 23, 24, 28, 29, 30, 31, 33, 37, 42, 45, 47, 49, 57, 72, 104, 122, 241, 264, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 329, 339], "applic": [66, 155, 156, 161, 223, 224, 339, 340], "approach": 102, "appropri": [75, 94, 158, 211, 285], "approxim": [7, 9, 10, 11, 12, 13, 30, 32, 277], "ar": [7, 9, 10, 11, 12, 13, 19, 22, 23, 24, 25, 28, 30, 32, 36, 37, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 75, 84, 92, 94, 96, 98, 99, 101, 102, 104, 107, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 147, 148, 153, 154, 155, 156, 158, 160, 162, 163, 166, 167, 169, 171, 195, 197, 199, 200, 201, 206, 207, 209, 211, 219, 221, 222, 224, 225, 226, 227, 228, 264, 277, 282, 289, 294, 309, 310, 314, 315, 329, 336, 339, 340, 341, 342], "arang": 72, "arbitrari": 153, "architectur": 64, "area": [75, 287], "arg": [7, 9, 10, 11, 12, 13, 23, 24, 25, 30, 32, 42, 45, 47, 49, 51, 57, 59, 61, 66, 75, 82, 84, 86, 94, 101, 104, 105, 144, 153, 154, 155, 156, 162, 163, 167, 206, 251, 264, 277, 282, 284, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 315, 328, 336], "arg1": 336, "arg2": 336, "args_dict": [103, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 162, 163, 166, 167, 197, 199, 201, 209, 211, 219, 222, 224, 226, 228, 309, 310, 313, 314, 315], "argument": [7, 9, 10, 11, 12, 13, 24, 30, 32, 34, 41, 45, 47, 49, 51, 52, 53, 54, 55, 57, 59, 66, 75, 84, 103, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 162, 163, 166, 167, 172, 195, 197, 199, 201, 206, 209, 211, 219, 222, 224, 226, 228, 238, 264, 277, 282, 285, 287, 309, 310, 313, 314, 315, 336], "around": [7, 9, 10, 11, 12, 13, 30, 32, 59, 104], "arr": [28, 30, 59, 233, 241, 243, 255], "arr_siz": 77, "arrai": [7, 9, 10, 11, 12, 13, 18, 19, 22, 23, 24, 25, 28, 30, 32, 34, 36, 37, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 74, 75, 77, 84, 92, 94, 96, 98, 101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 140, 141, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 182, 189, 190, 192, 195, 197, 199, 201, 209, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 230, 231, 233, 235, 241, 243, 255, 256, 258, 264, 267, 269, 272, 273, 274, 277, 289, 309, 310, 314, 315, 317, 318, 320, 327, 332, 333], "arrang": [92, 96, 98], "articl": [339, 340, 341], "arxiv": 340, "as_arrai": 101, "asarrai": [110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 137, 309], "ascii": [206, 282], "ascr": [339, 340, 341], "ask": 166, "assign": 101, "assign_coord": 101, "associ": [23, 24, 25, 30, 42, 45, 47, 49, 57, 108, 226, 269, 272, 273, 274, 310, 336], "assum": [9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 30, 32, 34, 37, 41, 45, 47, 49, 55, 57, 84, 92, 96, 98, 104, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 153, 170, 206, 209, 219, 231, 232, 276, 277, 282, 294, 318, 341, 342], "attempt": 59, "attent": [30, 32], "attr": [82, 84, 86, 92, 93, 94, 96, 98, 101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 309, 310], "attribut": [7, 9, 10, 11, 12, 13, 19, 30, 32, 36, 37, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 74, 75, 82, 84, 86, 92, 93, 94, 96, 98, 101, 103, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 159, 160, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 195, 197, 199, 201, 206, 209, 211, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 256, 264, 277, 282, 285, 287, 291, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 309, 310, 313, 314, 315, 325, 339], "attrribut": [82, 84, 86, 92, 93, 96, 98], "author": [339, 340, 341], "auto": [144, 153, 154, 155, 156, 159, 162, 163, 195, 197, 199, 201, 213, 214, 215, 216, 217, 219, 287, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305], "autom": 336, "automat": [23, 24, 25, 45, 49, 57, 94, 144, 209], "avail": [9, 10, 11, 12, 13, 30, 32, 42, 45, 47, 49, 53, 54, 55, 57, 84, 94, 101, 122, 153, 154, 155, 156, 162, 163, 166, 167, 191, 195, 197, 199, 201, 209, 211, 219, 233, 234, 235, 236, 248, 259, 282, 339, 340], "averag": [7, 9, 10, 11, 12, 13, 25, 30, 32, 42, 45, 47, 49, 57, 59, 104, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 153, 162, 163, 170, 264, 273, 274, 276, 277, 291, 293, 310, 333, 336], "avg": [5, 7, 9, 10, 11, 12, 13, 30, 32], "avoid": [246, 326], "aw": [94, 339, 340], "awai": [23, 36, 37, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 153, 154, 155, 156, 162, 163, 209, 219, 309, 310], "ax": [22, 23, 24, 25, 51, 59, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 293, 309, 310], "axi": [23, 24, 25, 45, 49, 51, 55, 57, 59, 63, 140, 153, 154, 155, 156, 162, 163, 167, 224, 230, 231, 232, 273, 274, 277, 332], "b": [193, 336, 339, 340], "back": [24, 75, 92, 101, 190, 277], "background": [285, 336], "background_stdout": 285, "bam": 174, "base": [1, 5, 9, 10, 11, 12, 13, 18, 19, 27, 28, 30, 32, 41, 42, 43, 47, 49, 51, 53, 54, 55, 57, 59, 61, 66, 72, 74, 75, 84, 86, 96, 98, 101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 150, 158, 159, 160, 162, 163, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 195, 198, 199, 200, 201, 206, 211, 213, 214, 215, 216, 217, 219, 224, 225, 226, 228, 235, 236, 248, 264, 277, 282, 283, 284, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 310, 313, 314, 315, 325, 336, 339, 340], "base_": [23, 24, 30, 32, 36, 37], "base_data": [7, 9, 10, 11, 12, 13, 30, 32], "base_dh_inst": [7, 9, 10, 11, 12, 13, 30, 32], "base_dist": [7, 9, 10, 11, 12, 13, 30, 32], "base_dset": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 336], "base_fp": [7, 9, 10, 11, 12, 13, 30, 32, 336], "base_gid": [7, 9, 10, 11, 12, 13, 30, 32], "base_handl": [7, 9, 10, 11, 12, 13, 30, 32], "base_handler_kwarg": [7, 9, 10, 11, 12, 13, 30, 32], "base_load": [155, 156, 197, 199, 201], "base_ti": 30, "basecollector": [84, 86], "basederiv": 167, "baseexoraster": [214, 215, 216, 217], "baselin": [7, 9, 10, 11, 12, 13, 30, 32, 63], "baseload": [153, 154, 155, 156, 162, 163, 195, 199, 201, 219], "basemodel": [41, 45, 47, 49, 57], "basenam": 191, "baseraster": 219, "basi": [10, 12, 22, 25], "basic": [45, 47, 66, 75, 100, 103, 142, 143, 145, 165, 221, 222, 339], "batch": [41, 42, 43, 45, 47, 49, 53, 54, 55, 57, 61, 99, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 147, 197, 199, 201, 222, 224, 226, 309, 310, 311, 314, 315, 335, 339, 340], "batch_handl": [42, 45, 47, 49, 57, 61], "batch_job": 336, "batch_len": [42, 45, 47, 49, 57], "batch_siz": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 222, 224, 226, 228, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 310, 314, 315], "batcher": [99, 200], "batchhandl": [45, 47, 49, 57, 61, 99, 103, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 162, 163, 166, 167, 197, 199, 201, 209, 211, 219, 222, 224, 226, 228, 309, 310, 313, 314, 315], "batchhandlerclass": 311, "batchhandlerdc": [49, 110, 111, 112, 119, 309, 310], "batchhandlerfactori": 108, "batchqueu": [99, 110, 111, 119, 122, 124, 126, 137, 221, 309], "batchqueuedc": [108, 112, 135, 310], "bc": 20, "bc_file": [18, 36, 37], "bc_kwarg": [34, 35], "bc_method": [34, 35], "bc_util": [23, 24, 30, 32, 37], "becaus": [75, 148, 150, 162, 163], "been": [30, 59, 72, 75, 101, 102, 104, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 137, 147, 206, 224, 277, 282, 287, 309], "befor": [7, 9, 10, 11, 12, 13, 30, 32, 45, 49, 57, 66, 72, 92, 96, 98, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 153, 154, 155, 156, 159, 162, 163, 166, 167, 206, 213, 214, 264, 277, 282, 309, 310, 329, 336], "beforehand": 144, "begin": [51, 63, 206, 230, 232, 282], "behavior": [15, 16, 68, 69, 84, 88, 89, 279, 280, 284], "behind": 94, "being": [7, 9, 10, 11, 12, 13, 15, 16, 22, 23, 24, 25, 30, 32, 42, 45, 47, 49, 57, 59, 68, 69, 84, 88, 89, 94, 101, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 144, 268, 270, 271, 279, 280, 284], "belong": [84, 103, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 162, 163, 166, 167, 197, 199, 201, 209, 211, 219, 222, 224, 226, 228, 309, 310, 313, 314, 315], "below": [42, 45, 47, 49, 57, 277, 336, 339, 341, 342], "benefit": 339, "benton": [339, 340, 341], "best": [59, 72, 75, 339, 340], "better": [24, 102], "between": [7, 9, 10, 11, 12, 13, 30, 32, 42, 45, 47, 49, 57, 59, 72, 75, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 159, 204, 206, 213, 214, 222, 224, 226, 228, 267, 277, 282, 309, 310, 314, 315, 317, 320, 325, 341], "beyond": [9, 10, 11, 12, 13, 27, 30, 32], "bia": [42, 45, 47, 49, 57, 59, 75, 206, 264, 335, 339], "bias": [7, 8, 9, 10, 11, 12, 13, 23, 24, 27, 30, 32, 37, 336], "bias_": [23, 24, 30, 32, 37], "bias_calc": [36, 37, 336], "bias_calc_class": 336, "bias_correct_input_handl": 264, "bias_correct_kwarg": [75, 264], "bias_correct_method": [34, 35, 75, 264], "bias_data": [7, 9, 10, 11, 12, 13, 27, 30, 32], "bias_dh": [7, 9, 10, 11, 12, 13, 30, 32], "bias_dist": [7, 9, 10, 11, 12, 13, 30, 32], "bias_featur": [7, 9, 10, 11, 12, 13, 30, 32, 36, 37, 336], "bias_fp": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 30, 32, 336], "bias_fsp": [30, 32], "bias_fut_": [23, 24, 30, 32, 37], "bias_fut_data": [30, 32], "bias_fut_fp": [30, 32], "bias_fut_handler_kwarg": [30, 32], "bias_fut_ti": 30, "bias_future_data": 30, "bias_gid": [7, 9, 10, 11, 12, 13, 30, 32], "bias_handl": [7, 9, 10, 11, 12, 13, 30, 32], "bias_handler_kwarg": [7, 9, 10, 11, 12, 13, 30, 32], "bias_ti": 30, "bias_transform": [30, 32, 34, 75, 264], "biased_arrai": 24, "bicub": 59, "bigger": [72, 75], "bilinear": [59, 63], "bin": [49, 108, 110, 111, 119, 134, 135, 226, 267, 268, 270, 271, 309, 310], "block": [54, 59, 66, 121, 144, 336], "blow": [23, 24, 37], "bool": [7, 9, 10, 11, 12, 13, 18, 19, 23, 24, 25, 27, 30, 32, 37, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 66, 75, 84, 86, 92, 94, 96, 98, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 140, 144, 162, 163, 206, 211, 213, 214, 215, 216, 217, 264, 267, 268, 270, 271, 282, 284, 285, 287, 289, 325, 332], "boolean": [30, 32, 94, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 277, 285, 309, 310], "both": [30, 51, 55, 59, 72, 75, 84, 101, 152, 301, 303], "bound": [7, 9, 10, 11, 12, 13, 30, 32, 45, 49, 57, 277, 287], "boundari": [66, 72, 92, 96, 98, 206, 282], "box": 287, "brace": [206, 282], "branch": [341, 342], "brandon": [339, 341], "break": [42, 45, 47, 49, 57, 206, 282, 285], "breakdown": [42, 45, 47, 49, 57], "bring": [24, 341], "browser": [45, 47, 49, 57], "bucket": [94, 339, 340], "build": [99, 103, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 193, 197, 199, 201, 222, 226, 309, 310, 314, 315, 323], "built": [41, 45, 47, 49, 51, 57, 59, 105, 106, 110, 111, 113, 114, 115, 117, 118, 119, 151, 213, 214, 215, 216, 217, 336], "buster": [339, 340, 341], "byte": 94, "bytestr": 94, "c": [15, 16, 28, 30, 59, 68, 69, 88, 89, 193, 279, 280, 284, 285, 336, 339, 340], "cach": [75, 143, 144, 145, 152, 153, 154, 155, 156, 159, 162, 163, 209, 211, 213, 214, 215, 216, 217, 219], "cache_data": [144, 211], "cache_dir": [159, 213, 214, 215, 216, 217], "cache_fil": [159, 213, 214, 215, 216, 217], "cache_fp": [213, 214, 215, 216, 217], "cache_kwarg": [144, 153, 154, 155, 156, 162, 163, 211], "cache_pattern": [144, 153, 154, 155, 156, 162, 163, 211], "cacher": [85, 91, 95, 152, 153, 154, 155, 156, 162, 163, 213, 214, 215, 216, 217], "cal_val_loss": [45, 49, 57], "calc": [7, 9, 10, 11, 12, 13, 15, 22, 23, 24, 25, 30, 32, 335], "calc_k_factor": 30, "calc_loss": [42, 45, 47, 49, 57], "calc_loss_cond_mom": 47, "calc_loss_disc": [45, 49, 57], "calc_loss_gen_adv": [45, 49, 57], "calc_loss_gen_cont": [45, 49, 57], "calc_loss_kwarg": [42, 45, 47, 49, 57], "calc_tau_fut": 30, "calc_val_loss": [45, 47, 49, 57], "calc_val_loss_gen": 49, "calc_val_loss_gen_cont": 49, "calcul": [3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 20, 23, 24, 26, 30, 32, 37, 42, 45, 47, 49, 57, 59, 72, 75, 101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 134, 135, 150, 159, 162, 163, 174, 213, 214, 219, 220, 268, 270, 271, 276, 277, 293, 309, 310, 336], "calibr": 27, "call": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 27, 30, 32, 45, 49, 57, 66, 75, 82, 84, 86, 99, 101, 104, 105, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 162, 163, 172, 206, 211, 222, 224, 226, 228, 264, 277, 282, 284, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 310, 314, 315, 325, 336], "call_id": 325, "callabl": [34, 42, 45, 47, 49, 57, 153, 154, 155, 156, 162, 163, 195, 197, 199, 201, 219], "callback": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "can": [6, 7, 9, 10, 11, 12, 13, 17, 18, 20, 22, 23, 24, 25, 27, 30, 32, 33, 34, 37, 41, 42, 45, 47, 49, 52, 54, 55, 57, 59, 66, 72, 75, 84, 94, 101, 103, 104, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 143, 144, 145, 148, 150, 153, 154, 155, 156, 158, 159, 162, 163, 165, 166, 167, 171, 172, 189, 195, 197, 199, 201, 206, 208, 209, 211, 213, 214, 218, 219, 221, 222, 224, 226, 228, 231, 238, 246, 249, 251, 254, 260, 263, 264, 268, 270, 271, 277, 282, 285, 287, 289, 293, 309, 310, 313, 314, 315, 336, 339, 340], "canada": [110, 111, 113, 114, 115, 117, 118, 119], "cancel": [285, 336], "cannon": [23, 24, 30, 32, 37], "cannon2015": [30, 32], "cannot": [12, 72, 339], "capac": 94, "capit": [206, 282], "captur": [285, 336], "carbon": 341, "care": [24, 30, 32, 37, 211], "case": [7, 9, 10, 11, 12, 13, 30, 32, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 153, 154, 155, 156, 158, 160, 162, 163, 166, 167, 206, 220, 252, 253, 282, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305], "casefold": [206, 282], "caseless": [206, 282], "cast": [55, 84, 101, 104, 255, 330], "castelao": 341, "categor": [291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "caution": [339, 340], "cayan": [7, 9, 10, 11, 12, 13, 28, 30], "cc": [153, 162, 163, 170], "cd": [286, 287, 341, 342], "cdf": [24, 30], "cdsapi": 286, "cdsapirc": 286, "ceil": [21, 22, 23, 24, 25, 37], "celsiu": [176, 177, 178, 179, 204], "center": [7, 9, 10, 11, 12, 13, 30, 32, 51, 57, 63, 206, 224, 267, 268, 270, 271, 282], "centric": [48, 49, 107, 108, 110, 111, 119, 133, 225, 309, 310], "certain": [42, 45, 47, 49, 57, 75, 264], "ceser": 341, "cf": 94, "cg": 285, "chang": [7, 9, 10, 11, 12, 13, 28, 30, 32, 42, 45, 47, 49, 57, 59, 161, 162, 163, 170, 176, 177, 178, 179, 223, 224, 285, 328, 339], "change_qo": 285, "channel": [54, 55, 59, 92, 96, 98, 222, 224, 226, 228, 314, 315], "char": [206, 282], "charact": [206, 282, 285], "check": [30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 72, 75, 78, 92, 94, 96, 98, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 148, 150, 153, 154, 155, 156, 159, 162, 163, 166, 167, 211, 222, 224, 226, 228, 242, 250, 264, 277, 285, 287, 309, 310, 314, 315, 341], "check_batch_handler_attr": [45, 49, 57], "check_boundary_slic": 72, "check_enhancement_factor": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "check_featur": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "check_for_consistent_shap": [224, 228], "check_module_nam": 284, "check_registri": [153, 154, 155, 156, 162, 163, 166, 167], "check_regridded_lr_data": 211, "check_shared_attr": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 148, 150, 309, 310], "check_statu": 285, "check_status_using_job_id": 285, "check_target_and_shap": [209, 219], "checkpoint": [42, 45, 47, 49, 57], "checkpoint_int": [42, 45, 47, 49, 57], "chernyakhovskii": 340, "choic": 104, "choos": 37, "chunk": [22, 23, 24, 25, 30, 66, 71, 72, 73, 74, 75, 77, 82, 84, 86, 92, 94, 96, 98, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 144, 153, 154, 155, 156, 159, 162, 163, 189, 195, 197, 199, 201, 211, 213, 214, 215, 216, 217, 219, 224, 234, 236, 277, 287, 317, 318, 320, 325, 336, 339, 340], "chunk_data": 144, "chunk_finish": 75, "chunk_idx": 75, "chunk_index": [66, 72, 75], "chunk_lookup": 72, "chunk_mask": 75, "chunk_shap": 72, "chunk_siz": 77, "chunk_slic": 144, "chunksiz": [144, 287], "citat": 338, "citi": 339, "cl": [7, 9, 10, 11, 12, 13, 30, 32, 59], "class": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 247, 263, 264, 276, 277, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 313, 314, 315, 324, 325, 336], "classmethod": [7, 9, 10, 11, 12, 13, 18, 19, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 82, 84, 86, 92, 93, 94, 96, 98, 144, 159, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 206, 264, 277, 282, 284, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "clean": [45, 47, 49, 52, 263, 339, 340], "clear": [158, 160, 169, 170, 171, 277], "clearski": [55, 162, 163, 169, 170, 231, 275, 276, 277, 318, 336], "clearsky_dhi": 277, "clearsky_dni": 277, "clearsky_ghi": [153, 162, 163, 170, 277], "clearsky_ratio": [55, 153, 162, 163, 224, 232, 276, 277], "cli": [2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 30, 32, 66, 67, 68, 69, 70, 82, 84, 86, 87, 88, 89, 246, 264, 265, 277, 278, 279, 280, 282, 336, 339, 340, 341], "cli_gen": 285, "click": [15, 16, 68, 69, 88, 89, 279, 280, 282, 284], "climat": [7, 9, 10, 11, 12, 13, 28, 30, 32, 57, 161, 162, 163, 170, 176, 177, 178, 179, 223, 224, 286, 287, 336, 339], "clockwis": [92, 96, 98], "clone": [339, 340, 343], "close": [94, 264, 268, 270, 271, 277, 328], "closer": [153, 154, 155, 156, 162, 163, 166, 167], "closest": [209, 219, 289], "cloud": [171, 277], "cloud_mask": [171, 277], "cloud_threshold": 277, "cloudi": [171, 277], "cluster": [339, 340], "cmd": [15, 16, 68, 69, 88, 89, 279, 280, 284, 285], "cmip": 336, "cmip6": [30, 339], "coars": [7, 9, 10, 11, 12, 13, 30, 32, 72, 75, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 291, 310, 320, 332, 333, 339, 340, 341], "coarse_data": 333, "coarse_shap": 72, "coarsen": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 99, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 153, 154, 155, 156, 158, 162, 163, 167, 211, 220, 222, 224, 226, 228, 264, 293, 309, 310, 314, 315, 332, 333], "coarsen_data": 264, "coarser": [162, 163], "code": [54, 59, 66, 95, 144, 206, 282, 339, 341, 342], "codebas": 101, "codec": [206, 282], "coeffici": 37, "coincid": [339, 340], "col": [7, 9, 10, 11, 12, 13, 30, 32, 94, 153, 154, 155, 156, 162, 163, 209, 219, 233, 234, 235, 236], "col_slic": 84, "collabor": 341, "collect": [81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 96, 98, 103, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 120, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 153, 154, 155, 156, 162, 163, 166, 167, 197, 199, 201, 209, 211, 219, 222, 224, 226, 228, 282, 309, 310, 313, 314, 315, 317, 335], "collect_featur": 84, "collected_output_fil": 336, "collector": 336, "collis": 326, "column": [42, 45, 47, 49, 57, 92, 94, 96, 98, 285], "com": [174, 182, 185, 341, 342], "combin": [30, 42, 45, 47, 49, 55, 66, 84, 91, 158, 287], "combine_all_fil": 287, "combine_typ": [54, 66, 158, 159, 160], "come": [104, 144, 158, 166, 209, 222, 224, 226, 228, 314, 315], "command": [15, 16, 38, 68, 69, 88, 89, 240, 279, 280, 282, 284, 285, 336, 339, 340, 341, 342], "commanddocument": 240, "commit": [341, 342], "common": [257, 336], "compar": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 45, 49, 57, 206, 268, 269, 270, 271, 272, 273, 274, 282, 339], "compare_dist": [7, 9, 10, 11, 12, 13, 30, 32], "comparison": [63, 206, 282], "comparison_kei": [45, 49, 57], "compat": [20, 101, 224, 228], "compil": [291, 292, 294, 295, 296, 297, 299, 300, 302, 305], "complet": [84, 86, 104, 110, 111, 113, 114, 115, 117, 118, 119, 148, 211, 285], "complex": [66, 75], "compliant": 285, "compon": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 42, 45, 47, 49, 57, 75, 92, 96, 98, 180, 181, 182, 183, 184, 185, 272, 273, 287, 294], "compos": [75, 152, 154, 158, 224, 228], "composit": [55, 105, 106, 151, 239, 240], "compositetensor": [42, 45, 47, 49, 57], "compromis": [28, 30], "compuat": 170, "comput": [12, 17, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 94, 99, 101, 104, 108, 110, 111, 119, 149, 150, 153, 154, 155, 156, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 241, 271, 285, 309, 339, 340, 341], "concat": [41, 45, 47, 49, 57], "concaten": [55, 84, 206, 282, 329], "concept": [28, 30, 102], "concis": 246, "concurr": [45, 49, 57, 75], "conda": [285, 339, 340, 341, 342], "conda_env": 285, "condit": [42, 45, 49, 57, 113, 114, 115, 117, 118, 264, 340], "conditionalbatch": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "conditionalbatchqueu": [110, 111, 119, 127, 128, 129, 130, 309], "condmom_": 47, "conf": 62, "confid": [28, 30], "config": [7, 9, 10, 11, 12, 13, 30, 32, 42, 45, 47, 49, 57, 66, 82, 84, 86, 94, 264, 277, 284, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 336, 339, 340], "config_bia": 336, "config_collect": 336, "config_fil": [15, 16, 68, 69, 88, 89, 279, 280, 284, 336], "config_fwp": [336, 339], "config_fwp_spati": 340, "config_nam": 94, "config_pipelin": [336, 339, 340], "config_qa": 336, "config_solar": 336, "configur": [45, 47, 49, 57, 94, 336], "conform": 19, "confus": 339, "conifg": 284, "conjunct": [153, 154, 155, 156, 162, 163, 166, 167], "consecut": [42, 45, 47, 49, 57], "consid": [30, 32, 72, 75, 102, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 147, 206, 277, 282], "consist": [24, 30, 32, 42, 45, 47, 49, 57, 101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 146, 148, 162, 163, 228, 241, 309, 310], "consit": [30, 32], "consortium": 341, "const": 319, "constant": [66, 75, 104, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 141], "constantli": 101, "constitut": 47, "construct": [72, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 134, 135, 267], "contain": [18, 19, 36, 37, 45, 47, 49, 51, 53, 55, 59, 84, 92, 96, 98, 99, 100, 101, 102, 104, 107, 108, 110, 111, 113, 114, 115, 117, 118, 119, 120, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 142, 144, 146, 147, 148, 150, 153, 154, 155, 156, 159, 162, 163, 164, 166, 167, 172, 182, 194, 197, 199, 200, 201, 206, 207, 209, 211, 219, 220, 221, 222, 224, 225, 226, 227, 228, 237, 242, 256, 259, 260, 277, 282, 285, 287, 309, 310, 313, 314, 315, 336, 339], "container_weight": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 148, 150, 309, 310], "content": [45, 49, 57, 285, 290, 293, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306], "context": [15, 16, 68, 69, 88, 89, 279, 280, 284, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305], "contigu": 75, "continu": [153, 154, 155, 156, 162, 163, 166, 167, 222, 314, 315, 336], "contract": [339, 340, 341], "contrast": 124, "contrib": [102, 147], "control": [339, 340], "conu": [110, 111, 113, 114, 115, 117, 118, 119, 277], "convect": 339, "convert": [19, 66, 75, 92, 96, 98, 101, 153, 154, 155, 156, 162, 163, 195, 197, 199, 201, 206, 219, 275, 276, 277, 282, 287, 336], "convert_all_tif": 19, "convert_month_height_tif": 19, "convert_month_tif": 19, "convert_z": 287, "coord": [7, 9, 10, 11, 12, 13, 30, 32, 101, 144, 205, 213, 214, 215, 216, 217, 252], "coordin": [7, 9, 10, 11, 12, 13, 19, 23, 30, 32, 36, 37, 84, 92, 94, 96, 98, 101, 144, 153, 154, 155, 156, 159, 162, 163, 204, 206, 209, 219, 260, 287], "coordind": 84, "coords_2d": 206, "coords_3d": 206, "coords_4d": 206, "coords_4d_pr": 206, "copernicu": [286, 287], "copi": [66, 158, 160, 206, 264, 282, 339, 340], "core": [24, 34, 66, 72, 84, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 140, 141, 160, 162, 163, 189, 190, 192, 224, 226, 230, 231, 264, 277, 289, 310, 327, 332, 333, 336], "corner": [7, 9, 10, 11, 12, 13, 30, 32, 153, 154, 155, 156, 162, 163, 209, 219], "correct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 59, 75, 92, 101, 159, 206, 213, 214, 264, 336, 339, 341, 342], "corrected_fut_data": 30, "correctli": [158, 242], "correspond": [7, 9, 10, 11, 12, 13, 19, 30, 32, 34, 53, 54, 55, 59, 72, 75, 77, 92, 94, 96, 98, 101, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 158, 160, 209, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 232, 233, 264, 269, 272, 273, 274, 277, 284, 287, 289, 310, 314, 315, 317, 320, 339, 340], "could": [28, 30, 32, 59, 113, 114, 115, 117, 118, 122, 126, 127, 128, 129, 130, 131, 132, 144, 147, 152, 153, 154, 155, 156, 158, 162, 163, 166, 167, 172, 220, 264, 285, 339], "count": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 206, 267, 268, 270, 271, 282, 309, 310], "counter": [92, 96, 98, 311], "countri": [101, 340], "cours": [147, 224], "cover": [30, 32, 75, 84, 340], "cp": [339, 340], "cpu": [45, 47, 49], "creat": [30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 92, 94, 96, 98, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 158, 160, 277, 284, 285, 287, 309, 310, 336, 339, 340, 341, 342], "crop": [66, 72, 75], "crop_slic": 234, "cropped_slic": 72, "crossentropi": [291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "cs_ghi": [153, 162, 163], "cs_ratio": [169, 170, 224], "csl": [182, 185], "csr_ind": [224, 231, 232], "csv": [45, 47, 49, 336], "ctx": [15, 16, 68, 69, 88, 89, 279, 280, 284], "cuda": [341, 342], "current": [7, 9, 10, 11, 12, 13, 20, 22, 23, 24, 25, 30, 32, 42, 45, 47, 49, 57, 72, 336, 339, 340, 341], "curv": 219, "custom": [45, 47, 49, 55, 126, 275, 276, 277, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "custom_train": [291, 292, 294, 295, 296, 297, 299, 300, 302, 305], "customnetwork": [42, 45, 47, 49, 57], "cut": [30, 32, 66, 72], "cybersecur": 341, "cycl": [59, 339], "d": [7, 9, 10, 11, 12, 13, 28, 30, 32, 94, 101, 104, 158, 160, 270, 271, 285, 287], "d0": [30, 32, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "da": [34, 66, 72, 84, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 140, 141, 160, 162, 163, 189, 190, 192, 224, 226, 230, 231, 264, 277, 289, 310, 327, 332, 333], "dai": [7, 9, 10, 11, 12, 13, 24, 28, 30, 32, 57, 153, 154, 155, 156, 162, 163, 167, 224, 230, 232, 277, 287], "daili": [7, 9, 10, 11, 12, 13, 30, 32, 57, 59, 92, 96, 98, 101, 104, 153, 154, 155, 156, 162, 163, 167, 170, 177, 178, 224, 276, 318, 339], "daily_reduct": [5, 7, 9, 10, 11, 12, 13, 30, 32], "dailydatahandl": [155, 156], "dailylight": 231, "dash": 282, "dashboard": [45, 49, 57], "dask": [101, 144, 153, 154, 155, 156, 162, 163, 189, 195, 197, 199, 201, 219, 241], "dask_arrai": 101, "data": [0, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 32, 33, 34, 35, 36, 37, 41, 42, 43, 45, 47, 48, 49, 51, 53, 54, 55, 57, 58, 59, 64, 66, 72, 74, 75, 80, 82, 84, 86, 87, 88, 89, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 194, 195, 196, 197, 199, 200, 201, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 247, 249, 252, 256, 259, 260, 261, 264, 268, 270, 271, 275, 276, 277, 282, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 313, 314, 315, 317, 318, 319, 320, 321, 322, 332, 333, 335, 338, 341], "data1": 104, "data2": 104, "data_chunk": 66, "data_collect": 88, "data_handl": [30, 32, 72, 264], "data_list": [82, 84, 86, 92, 93, 96, 98], "data_shap": [233, 234, 235, 236, 313, 314], "data_var": [86, 101, 110, 113, 114, 115, 117, 118, 222, 259, 314, 315], "data_vers": 94, "dataarrai": [24, 101, 104, 153, 154, 155, 156, 162, 163, 166, 167, 256, 289], "datacentr": 226, "datafram": [42, 45, 47, 49, 57, 82, 84, 86, 92, 93, 94, 96, 98, 101, 144], "datahandl": [7, 9, 10, 11, 12, 13, 30, 32, 34, 36, 37, 99, 144, 152, 153, 161, 162, 247], "datahandlerncforcc": [7, 9, 10, 11, 12, 13, 30, 32, 163], "dataretrievalbas": [9, 32], "dataset": [5, 7, 9, 10, 11, 12, 13, 18, 19, 22, 23, 24, 25, 30, 32, 36, 37, 59, 82, 84, 86, 92, 93, 94, 96, 98, 101, 102, 103, 104, 122, 124, 144, 148, 153, 154, 155, 156, 158, 162, 163, 167, 170, 172, 195, 197, 199, 201, 203, 204, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 222, 226, 227, 228, 232, 243, 260, 264, 277, 287, 313, 314, 315, 329, 336, 339, 340], "datatre": [102, 147], "datatyp": [94, 104], "date": [339, 340], "date_rang": [23, 24, 25, 246, 254, 328], "date_range_kwarg": [23, 24, 25, 254], "datetim": [7, 9, 10, 11, 12, 13, 30, 32, 82, 84, 86, 92, 93, 94, 96, 98, 189], "datetime64": [317, 320], "datetimeindex": [7, 9, 10, 11, 12, 13, 23, 24, 25, 30, 32, 74, 82, 84, 86, 92, 93, 94, 96, 98, 189, 230, 232, 246, 254, 277], "daylight": [57, 224, 231, 232], "daylight_hour": 57, "daymet": 30, "dc": [45, 57], "de": [339, 340, 341], "deal": 336, "debug": [42, 45, 47, 49, 57, 336], "decad": 30, "decid": 339, "decim": [7, 9, 10, 11, 12, 13, 30, 32, 206, 277, 282], "decod": [94, 285], "decor": [105, 251], "decreas": [23, 24, 37, 42, 45, 47, 49, 57], "dedic": 122, "deep": 339, "def": [206, 282], "default": [7, 9, 10, 11, 12, 13, 15, 16, 23, 24, 30, 32, 37, 42, 45, 47, 49, 51, 57, 59, 63, 66, 68, 69, 75, 82, 84, 86, 88, 89, 92, 93, 94, 96, 98, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 144, 158, 159, 160, 195, 197, 199, 201, 206, 213, 214, 215, 216, 217, 219, 224, 228, 277, 279, 280, 282, 284, 285, 287, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 309, 310, 332, 334, 336], "default_coord": 260, "default_devic": [45, 47, 49, 57], "default_dim": 260, "default_featur": 260, "defin": [9, 10, 11, 12, 13, 23, 24, 27, 30, 32, 34, 35, 40, 41, 42, 45, 47, 49, 51, 57, 59, 75, 94, 100, 104, 105], "definit": [30, 32], "deg": 59, "degre": [7, 9, 10, 11, 12, 13, 30, 32, 59, 189, 190, 192, 268, 270, 271, 277], "delai": [144, 189, 220], "delet": [206, 282, 336], "delimit": [206, 282, 285], "delta": [23, 24, 29, 30, 31, 32, 37, 59], "delta_denom_min": [23, 24, 37], "delta_denom_zero": [23, 24, 37], "delta_rang": [23, 24, 37], "denomin": [23, 24, 37], "densiti": 294, "depart": [339, 340, 341], "depend": [16, 69, 84, 89, 94, 101, 110, 111, 119, 122, 126, 247, 280, 284, 285, 309, 336, 341, 342], "deploy": [339, 340, 341], "dequeu": [108, 110, 111, 119, 122, 124, 134, 135, 137, 309, 310], "deriv": [7, 9, 10, 11, 12, 13, 29, 30, 31, 32, 99, 105, 107, 134, 143, 145, 151, 152, 153, 154, 155, 156, 162, 163, 197, 199, 201, 207, 222, 226, 247, 264, 271, 294, 314, 315], "derivedfeatur": [153, 154, 155, 156, 162, 163, 167, 169, 170, 171, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187], "descent": [42, 45, 47, 49, 57], "describ": [42, 45, 47, 49, 66, 108, 110, 111, 113, 114, 115, 117, 118, 119, 158, 159, 222, 224, 226, 228, 309, 310, 314, 315], "descript": [59, 153, 154, 155, 156, 162, 163], "design": [277, 339, 340], "desir": [84, 86, 144, 153, 154, 155, 156, 162, 163, 289], "desktop": 339, "destin": 84, "detail": [42, 45, 47, 49, 57, 75, 264, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 336, 339, 340], "determin": [30, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 75, 94, 104, 110, 111, 119, 135, 224, 228, 267, 268, 270, 271, 277, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 309], "determinist": 311, "dettin": [7, 9, 10, 11, 12, 13], "dev": [101, 341, 342], "develop": [45, 47, 49, 339, 340, 343], "deviat": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 42, 45, 47, 49, 53, 54, 55, 57, 59, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 150, 295, 296, 306, 310], "devic": [42, 45, 47, 49, 57], "device_nam": [42, 45, 47, 49, 57], "dewpoint": 174, "df": 94, "df_str_decod": 94, "dhi": [275, 276, 277, 336], "dict": [7, 9, 10, 11, 12, 13, 19, 23, 24, 25, 27, 30, 32, 34, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 66, 74, 75, 82, 84, 86, 92, 93, 94, 96, 98, 101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 172, 195, 197, 199, 201, 211, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 246, 254, 264, 277, 284, 285, 287, 289, 309, 310, 314, 315, 318], "dict_to_tensorboard": [42, 43, 45, 47, 49, 57], "dictionari": [7, 9, 10, 11, 12, 13, 15, 16, 19, 27, 30, 32, 34, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 68, 69, 75, 82, 84, 86, 88, 89, 92, 93, 94, 96, 98, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 195, 197, 199, 201, 203, 206, 211, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 246, 254, 264, 279, 280, 282, 284, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 310, 314, 315], "didnt": 264, "diff": [42, 45, 47, 49, 57, 267], "diff_max": [268, 270, 271], "differ": [30, 32, 42, 45, 47, 49, 55, 57, 59, 75, 84, 86, 99, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 148, 150, 153, 154, 155, 156, 159, 162, 163, 166, 167, 211, 221, 267, 268, 269, 270, 271, 272, 273, 274, 291, 292, 294, 297, 309, 310, 339], "digit": [206, 282], "dim": [72, 101, 144, 153, 154, 155, 156, 162, 163, 205, 231, 243, 252, 256, 257, 263, 264], "dim_num": 258, "dimens": [9, 10, 11, 12, 13, 19, 24, 30, 32, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 82, 84, 86, 92, 93, 96, 98, 101, 104, 112, 124, 140, 141, 144, 153, 154, 155, 156, 159, 162, 163, 190, 192, 205, 209, 213, 214, 215, 216, 217, 219, 222, 224, 226, 230, 243, 256, 257, 258, 260, 264, 293, 314, 315, 317, 318, 320, 332, 333], "dimension": 30, "dims_2d": 206, "dims_3d": 206, "dims_3d_bc": 206, "dims_4d": 206, "dims_4d_bc": 206, "dims_4d_pr": 206, "dir": [82, 84, 86, 336, 341, 342], "direct": [75, 92, 96, 98, 190, 192, 268, 339, 340, 341], "directli": [30, 32, 101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 159, 195, 197, 199, 201, 211, 219, 309, 310, 336, 339, 340], "directori": [41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 159, 213, 214, 277, 285, 336, 338, 340], "disabl": 211, "disc": [41, 42, 45, 47, 49, 51, 57, 59, 275, 276, 277], "disc_lay": [45, 49], "disc_loss_bound": [45, 49, 57], "disc_out_gen": [45, 49, 57], "disc_out_tru": [45, 49, 57], "discard": [206, 282], "discontinu": [92, 96, 98], "discrep": [295, 296], "discrimin": [42, 45, 47, 49, 57], "discriminator_weight": [45, 49, 57], "disk": [41, 42, 45, 47, 49, 57, 94, 101, 264, 277, 336], "displac": 193, "dist": [7, 9, 10, 11, 12, 13, 30, 32, 277], "dist_param": 24, "distanc": [7, 9, 10, 11, 12, 13, 23, 30, 32, 36, 37, 84, 153, 154, 155, 156, 159, 162, 163, 209, 213, 214, 215, 216, 217, 219, 277], "distance_upper_bound": [7, 9, 10, 11, 12, 13, 30, 32, 159, 213, 214, 215, 216, 217], "distinct": 148, "distingush": 325, "distribut": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 59, 72, 73, 75, 121, 158, 267, 268, 270, 271, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 336], "diurnal": [59, 339], "divid": [42, 45, 47, 49, 57, 72, 75, 108, 110, 113, 114, 115, 117, 118, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 294, 310, 315], "divis": [23, 24, 37, 211], "divisor": 59, "dn": [291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "dni": [275, 276, 277, 336], "do": [7, 9, 10, 11, 12, 13, 27, 30, 32, 42, 45, 47, 49, 51, 55, 57, 59, 92, 96, 98, 99, 101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 148, 150, 153, 154, 155, 156, 159, 162, 163, 166, 167, 207, 211, 213, 214, 263, 264, 277, 309, 310, 336, 339, 340, 341], "do_level_interpol": [153, 154, 155, 156, 162, 163, 166, 167], "doc": [101, 239, 240, 251, 339], "document": 240, "doe": [41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 72, 94, 99, 111, 113, 114, 115, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 137, 158, 160, 209, 219, 222, 224, 226, 228, 247, 277, 285, 299, 305, 309, 314, 315, 336, 339, 340, 341], "doesn": [42, 45, 47, 49, 57, 92, 96, 98, 285], "doesnt": [45, 49, 51, 59], "doi": [7, 9, 10, 11, 12, 13, 24, 30, 32, 182, 185, 339, 341], "domain": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 27, 30, 32, 34, 42, 45, 47, 49, 57, 63, 72, 75, 82, 84, 86, 108, 134, 135, 189, 209, 211, 235, 269, 272, 273, 274, 287, 298, 299, 300, 302, 303, 310], "don": [75, 153, 154, 155, 156, 162, 163, 339], "done": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 30, 32, 42, 45, 47, 49, 57, 158, 162, 163, 206, 282], "down": [20, 92, 96, 98, 224], "download": [17, 286, 287, 339, 340], "download_fil": 287, "download_process_combin": 287, "downscal": [8, 55, 59, 336, 339, 340], "downscale_arr": 59, "downscale_pr": 59, "downscale_rh": 59, "downscale_temp": 59, "downstream": [59, 339], "drizzl": [7, 9, 10, 11, 12, 13, 30, 32], "drop": [153, 154, 155, 156, 162, 163, 167], "drop_leap": [246, 254], "dry": [7, 9, 10, 11, 12, 13, 30, 336], "ds_name": 94, "dset": [18, 82, 84, 86, 92, 93, 94, 96, 98, 104, 144, 243, 277, 329], "dset_arrai": 94, "dset_data": 94, "dset_nam": [94, 264], "dset_slic": 94, "dset_suffix": 264, "dt": 271, "dtype": [82, 84, 86, 92, 93, 94, 96, 98, 101, 104], "dual": [103, 104, 107, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 144, 148, 150, 153, 154, 155, 156, 162, 163, 166, 167, 197, 199, 201, 209, 219, 220, 222, 224, 226, 309, 310, 313, 314, 315], "dualbatchhandl": [99, 104, 112], "dualbatchqueu": [107, 111, 112, 119, 124, 211, 309], "dualraster": [99, 104], "dualsampl": [103, 104, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 162, 163, 166, 167, 197, 199, 201, 209, 211, 219, 222, 224, 226, 309, 310, 313, 314, 315], "dualsamplercc": 111, "due": 66, "dummi": [144, 257, 313, 314, 318, 319, 321, 322], "dummy_time_index": 72, "dump": 331, "dure": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 104, 107, 108, 133, 134, 135, 225, 226, 232, 310], "dx": [270, 339], "dynam": 133, "e": [7, 9, 10, 11, 12, 13, 23, 24, 25, 28, 30, 32, 37, 42, 45, 47, 49, 51, 54, 57, 59, 63, 66, 72, 75, 92, 94, 96, 98, 101, 102, 103, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 169, 170, 171, 172, 191, 197, 199, 201, 204, 209, 211, 213, 214, 219, 222, 224, 226, 228, 235, 236, 243, 257, 264, 267, 268, 269, 270, 271, 272, 273, 274, 277, 284, 287, 289, 293, 309, 310, 313, 314, 315, 336, 339, 340, 341, 342], "each": [9, 10, 11, 12, 13, 19, 22, 23, 24, 25, 27, 30, 32, 42, 45, 47, 49, 53, 54, 55, 57, 59, 66, 72, 75, 84, 86, 92, 96, 98, 104, 107, 111, 119, 126, 135, 137, 144, 148, 150, 158, 159, 206, 213, 214, 222, 264, 269, 272, 273, 274, 277, 282, 309, 314, 336, 339, 340], "eager": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "eagl": 285, "earli": [42, 45, 47, 49, 57], "early_stop": [42, 45, 47, 49, 57], "early_stop_n_epoch": [42, 45, 47, 49, 57], "early_stop_on": [42, 45, 47, 49, 57], "early_stop_threshold": [42, 45, 47, 49, 57], "earth3": 336, "earthscienc": 174, "easi": 107, "easiest": 211, "easili": [209, 219], "ec2": [339, 340], "eda": 287, "edg": 66, "eer": 341, "effect": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 59, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 148, 150, 277, 285, 309, 310, 339, 340], "effici": [45, 47, 49, 222, 226, 314, 315, 339, 340, 341], "either": [45, 49, 55, 57, 84, 94, 101, 103, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 197, 199, 201, 209, 211, 219, 222, 224, 226, 228, 249, 264, 287, 293, 294, 309, 310, 313, 314, 315, 336, 339], "elaps": 325, "elapsed_str": 325, "electr": 341, "element": [30, 32, 72, 104, 241], "elev": [54, 59, 101, 289], "elimin": [268, 270, 271], "ellips": 242, "ellipsi": 258, "els": [158, 160, 207], "emerg": 341, "empir": [30, 32], "emploi": [153, 154, 155, 156, 162, 163, 166, 167], "empti": [51, 59, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 158, 160, 206, 259, 260, 282, 285, 309, 310], "en": [101, 294], "enabl": [101, 110, 111, 119, 153, 309], "encod": [206, 282], "encourag": [294, 298, 299, 300, 301, 302, 303, 304, 305], "end": [24, 66, 72, 77, 84, 86, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 206, 222, 224, 226, 228, 282, 314, 315], "end_t_pad": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "endswith": [206, 282], "energi": [0, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 269, 272, 273, 310, 339, 340, 341], "enforc": [59, 92, 96, 98], "enforce_limit": [92, 96, 98], "enhanc": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 66, 72, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 141, 153, 158, 159, 211, 213, 214, 215, 216, 217, 224, 228, 264, 309, 310], "enhanced_data": [140, 141], "enough": [75, 222, 314], "enqueu": [108, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "enqueue_batch": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "ensembl": 339, "ensemble_mean": 287, "ensemble_memb": 287, "ensemble_spread": 287, "ensur": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "entir": [59, 84, 135], "entri": [2, 14, 22, 23, 24, 25, 42, 43, 45, 47, 49, 53, 54, 55, 57, 59, 66, 67, 70, 72, 87, 101, 110, 113, 114, 115, 117, 118, 153, 154, 155, 156, 158, 159, 162, 163, 166, 167, 222, 243, 258, 265, 278, 285, 287, 289, 314, 315], "enum": [206, 282], "enumer": [7, 9, 10, 11, 12, 13, 30, 32, 339], "env": [339, 340, 341, 342], "environ": [285, 339, 340, 341, 342], "epdf": [182, 185], "epoch": [42, 45, 47, 49, 57, 107, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "equal": [7, 9, 10, 11, 12, 13, 30, 32, 72, 75, 84, 108, 134, 135, 153, 154, 155, 156, 160, 162, 163, 206, 209, 219, 230, 232, 243, 282, 294, 310], "equat": [23, 24, 37, 59, 294], "equival": [30, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 336], "era": [17, 287], "era5": [174, 208, 211, 286, 287, 340], "era5_": 287, "era_": 287, "ern": [82, 84, 86, 110, 111, 113, 114, 115, 117, 118, 119, 222, 224, 226, 228, 309, 314, 315], "err": 285, "error": [23, 30, 32, 36, 37, 66, 153, 154, 155, 156, 162, 163, 206, 209, 219, 264, 282, 285, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305], "esm": 339, "especi": [45, 49, 57, 339], "essenti": 211, "estim": [24, 28, 30, 32, 92, 96, 98, 113, 114, 115, 117, 118, 125, 126, 127, 128, 129, 130, 131, 132], "et": [23, 24, 30, 32, 37, 339], "etc": [49, 66, 99, 101, 104, 108, 110, 111, 119, 122, 124, 134, 135, 137, 204, 235, 309, 310, 339], "eu": 286, "euclidean": [23, 36, 37, 153, 154, 155, 156, 162, 163, 209, 219], "evalu": [6, 42, 45, 47, 49, 57, 293], "even": [42, 45, 47, 49, 57, 75, 189, 261], "evenli": [108, 110, 113, 114, 115, 117, 118, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 226, 310], "event": 339, "everi": [5, 9, 10, 11, 12, 13, 30, 32, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 144, 224, 264, 289, 293, 333, 339, 340], "everyth": [99, 277], "ex_loss": 293, "ex_loss_metr": 293, "exactli": 12, "exampl": [12, 15, 16, 24, 28, 30, 45, 49, 57, 68, 69, 75, 88, 89, 92, 96, 98, 101, 104, 105, 110, 111, 112, 113, 114, 115, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 153, 154, 155, 156, 158, 160, 162, 163, 167, 172, 206, 208, 213, 214, 222, 224, 228, 244, 264, 277, 279, 280, 282, 284, 285, 289, 309, 314, 315, 325, 336], "exceed": 75, "except": [72, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "excess": [45, 49, 57], "exclud": [55, 264], "execut": [264, 284, 285, 336, 339, 340], "execution_control": 336, "exist": [18, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 75, 82, 84, 86, 92, 93, 96, 98, 101, 153, 154, 155, 156, 162, 163, 166, 167, 219, 277, 285, 287, 339], "exit": [45, 49, 57, 61, 336], "exo": [41, 45, 47, 49, 57, 66, 75], "exo_cach": [159, 213, 214, 215, 216, 217], "exo_data": [42, 45, 47, 49, 57, 66, 74, 75, 158], "exo_handler_kwarg": [66, 75], "exo_sourc": [7, 9, 10, 11, 12, 13, 30, 32], "exodata": [42, 45, 47, 49, 53, 55, 75], "exodatahandl": [75, 157, 212], "exogen": [41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 157, 158, 159, 162, 163, 213, 214, 215, 216, 217, 222, 224, 226, 228, 314, 315, 339, 340], "exogenous_data": [41, 42, 45, 47, 49, 51, 53, 54, 55, 59, 158, 160], "exoraster": [212, 215, 216], "exorasterizerh5": [213, 214], "exorasterizernc": [213, 214], "expand": [148, 206, 224, 244, 282, 340], "expandtab": [206, 282], "expect": [24, 30, 32, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 110, 111, 113, 114, 115, 117, 118, 119, 222, 224, 228, 309, 314, 315, 339], "experienc": 339, "expert": 341, "explicit": [82, 84, 86, 101, 153, 154, 155, 156, 162, 163, 264], "explicitli": [101, 285], "explor": [198, 339, 340], "expon": 59, "exponenti": [59, 291, 292, 297], "export": [30, 45, 49, 57, 264], "expos": [166, 209], "express": [206, 282, 339, 340, 341], "ext": [75, 82, 84, 86], "extend": [9, 10, 11, 12, 13, 27, 30, 32, 101, 150, 152, 155, 156, 162, 167], "extens": [144, 153, 154, 155, 156, 162, 163], "extent": [9, 10, 11, 12, 13, 27, 30, 32, 75, 84, 99, 108, 153, 154, 155, 156, 158, 162, 163, 172, 182, 207, 209, 219, 228, 233, 236], "extern": 294, "extra": [30, 42, 45, 47, 49, 57, 66, 72], "extra_attr": 30, "extra_pad": 72, "extract": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 75, 94, 99, 153, 154, 155, 156, 159, 162, 163, 164, 197, 199, 201, 207, 209, 211, 213, 214, 219, 233, 234, 235, 236, 264], "extrapol": [182, 185], "extrem": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 293], "f": [158, 160, 206, 269, 272, 282], "f_data": 84, "f_rang": [269, 272], "factor": [5, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 23, 27, 30, 32, 36, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 66, 72, 84, 94, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 141, 153, 154, 155, 156, 158, 159, 162, 163, 167, 199, 206, 211, 213, 214, 224, 228, 264, 268, 270, 271, 277, 293, 309, 310, 332, 333, 336], "factori": [99, 105, 309, 311], "fail": 66, "failur": [206, 282], "fake": [45, 49, 57, 317, 320], "fals": [7, 9, 10, 11, 12, 13, 18, 19, 23, 24, 25, 30, 32, 37, 42, 45, 47, 49, 51, 57, 59, 63, 66, 75, 94, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 140, 144, 206, 211, 213, 214, 215, 216, 217, 267, 268, 270, 271, 282, 285, 287, 325, 332], "fan": 153, "far": [9, 10, 11, 12, 13, 27, 30, 32, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 277], "faster": 94, "fastest": 121, "featur": [7, 9, 10, 11, 12, 13, 16, 19, 21, 22, 23, 24, 25, 30, 32, 34, 35, 36, 37, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 72, 75, 82, 84, 86, 89, 92, 93, 96, 98, 99, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 144, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 197, 199, 201, 205, 207, 209, 211, 213, 214, 215, 216, 217, 219, 221, 222, 224, 226, 228, 230, 231, 232, 247, 253, 256, 259, 260, 261, 264, 277, 280, 284, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 313, 314, 315, 317, 319, 320, 321, 332, 333, 336], "feature_data": 101, "feature_inds_oth": 59, "feature_inds_pr": 59, "feature_inds_rh": 59, "feature_inds_temp": 59, "feature_nam": [22, 23, 24, 25], "feature_registri": [153, 154, 155, 156, 162, 163, 166, 167], "feature_set": [108, 110, 111, 113, 114, 115, 117, 118, 119, 222, 224, 226, 228, 309, 310, 314, 315], "featureregistri": [153, 154, 155, 156, 162, 163, 166, 167], "fecm": 341, "fed": [8, 54], "fetch": [153, 154, 155, 156, 162, 163, 166, 167], "few": 339, "fft": [269, 272, 273, 274, 303], "fft_weight": 303, "field": [45, 49, 57, 59, 63, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 203, 206, 252, 273, 274, 282, 293, 309, 310], "fifo": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "figur": 121, "file": [7, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 30, 32, 36, 37, 41, 42, 43, 45, 47, 49, 51, 57, 59, 66, 69, 75, 81, 82, 83, 84, 85, 86, 89, 90, 92, 93, 94, 96, 98, 99, 108, 110, 111, 113, 114, 115, 117, 118, 119, 144, 150, 153, 154, 155, 156, 159, 162, 163, 176, 177, 178, 179, 195, 196, 197, 198, 199, 201, 206, 207, 209, 213, 214, 215, 216, 217, 219, 244, 247, 249, 264, 277, 280, 284, 285, 286, 287, 309, 310, 317, 318, 320, 321, 326, 334, 336, 339, 340], "file_id": [75, 336], "file_nam": 321, "file_path": [7, 9, 10, 11, 12, 13, 30, 32, 72, 75, 82, 84, 86, 94, 153, 154, 155, 156, 159, 162, 163, 195, 197, 199, 200, 201, 213, 214, 215, 216, 217, 219, 249, 336], "file_pattern": 287, "filenam": [30, 32, 84, 86, 277, 285], "filepath": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 30, 32, 36, 37, 45, 47, 49, 82, 84, 86, 92, 93, 94, 96, 98, 159, 213, 214, 264, 277, 317, 320, 339, 340], "fill": [9, 10, 11, 12, 13, 19, 27, 30, 32, 75, 101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 206, 211, 282, 309, 310, 327], "fill_and_smooth": [9, 10, 11, 12, 13, 27, 30, 32], "fill_extend": [5, 9, 10, 11, 12, 13, 27, 30, 32], "fillandsmoothmixin": [9, 32], "fillchar": [206, 282], "filter": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 162, 163, 310], "final": [19, 30, 55, 82, 84, 86, 92, 93, 94, 96, 98, 289], "final_meta": 84, "final_time_index": 84, "find": [30, 84, 99, 153, 154, 155, 156, 162, 163, 166, 167, 206, 209, 219, 230, 232, 282, 318], "fine": 198, "finish": [42, 45, 47, 49, 57, 75, 339, 340], "finish_epoch": [42, 45, 47, 49, 57], "finit": [28, 30], "first": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 72, 75, 84, 94, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 153, 154, 155, 156, 158, 160, 162, 163, 166, 167, 206, 211, 222, 226, 236, 264, 282, 294, 309, 310, 314, 315, 336, 339, 340], "fit": [291, 292, 294, 295, 296, 297, 299, 300, 302, 305], "fix": [7, 9, 10, 11, 12, 13, 30, 32, 55, 57, 59, 108], "fix_bia": 59, "fix_downscaled_bia": 59, "flag": [7, 9, 10, 11, 12, 13, 16, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 69, 84, 86, 89, 94, 140, 162, 163, 211, 264, 280, 284, 285, 332, 336], "flat_2d": 206, "flatten": [7, 9, 10, 11, 12, 13, 19, 30, 32, 101, 144, 153, 154, 155, 156, 162, 163, 206, 208, 218, 219, 222, 226, 314, 315], "flexibl": 104, "flist": 84, "flist_chunk": 84, "float": [7, 9, 10, 11, 12, 13, 16, 18, 21, 22, 23, 24, 25, 27, 28, 30, 32, 36, 37, 42, 45, 47, 49, 57, 59, 69, 84, 89, 94, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 153, 154, 155, 156, 159, 162, 163, 193, 209, 213, 214, 215, 216, 217, 219, 268, 270, 271, 277, 280, 284, 285, 289, 295, 296, 298, 301, 303, 304, 306, 310], "float32": [82, 84, 86, 92, 93, 96, 98, 150, 171], "float64": 150, "floor": [21, 22, 23, 24, 25, 37], "flow": 193, "fname": 285, "folder": [339, 340], "follow": [30, 45, 49, 57, 59, 75, 101, 158, 160, 206, 257, 282, 286, 306, 336, 339], "footprint": 86, "forc": 294, "form": [84, 92, 101, 199, 285, 339, 340, 341], "format": [16, 19, 20, 69, 75, 84, 89, 92, 94, 144, 153, 154, 155, 156, 162, 163, 206, 213, 214, 215, 216, 217, 219, 280, 282, 284, 285, 287, 325], "format_map": [206, 282], "format_walltim": 285, "forward": [20, 22, 23, 24, 25, 34, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 65, 66, 67, 68, 71, 72, 73, 75, 90, 92, 96, 98, 159, 160, 264, 277, 317, 320, 325, 335, 339, 340], "forward_pass": [15, 16, 68, 69, 279, 280, 336], "forwardpass": [75, 76], "forwardpasschunk": [66, 75], "forwardpassstrategi": [34, 35, 66, 72, 73, 76, 336], "fossil": 341, "found": [45, 49, 57, 158, 159, 160, 166, 169, 171, 206, 231, 264, 282, 285, 336], "four": [22, 23, 24, 25, 219, 336], "foward": 75, "fowardpasschunk": [66, 75], "fp": [244, 318], "fp_out": [5, 9, 10, 11, 12, 13, 19, 30, 32, 277], "fp_out_suffix": 277, "fp_pattern": [277, 318, 336], "fp_set": 277, "fpath": 84, "fraction": [30, 42, 45, 47, 49, 57], "framework": [52, 84, 86], "frequenc": [7, 9, 10, 11, 12, 13, 30, 32, 269, 272, 300, 302, 303], "friction": 193, "from": [7, 9, 10, 11, 12, 13, 17, 19, 22, 23, 24, 25, 27, 30, 32, 34, 36, 37, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 62, 63, 66, 72, 75, 82, 84, 86, 92, 94, 96, 98, 99, 101, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 165, 166, 167, 168, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 196, 200, 205, 206, 207, 209, 213, 214, 215, 216, 217, 219, 221, 222, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 240, 246, 247, 254, 264, 267, 268, 270, 271, 277, 282, 284, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 310, 314, 315, 327, 336, 339, 340, 343], "from_arrai": [153, 154, 155, 156, 162, 163, 195, 197, 199, 201, 219], "from_config": [284, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "from_config_preflight": 284, "fromkei": [158, 160], "front": [206, 282], "fsspec": 94, "full": [7, 9, 10, 11, 12, 13, 20, 22, 23, 24, 25, 30, 32, 42, 45, 47, 49, 57, 66, 72, 75, 82, 84, 86, 92, 93, 94, 96, 98, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 153, 154, 155, 156, 158, 162, 163, 209, 211, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 233, 234, 235, 236, 277, 309, 310, 314, 315, 339, 340], "full_lat_lon": [209, 219], "full_meta": 84, "full_version_record": 94, "fulli": [102, 147], "func": [251, 325], "function": [14, 20, 24, 30, 32, 33, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 60, 67, 75, 76, 87, 101, 105, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 188, 202, 219, 229, 237, 254, 264, 266, 278, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 324, 325, 336], "fund": [339, 340, 341], "fundament": [99, 102, 103], "futur": [30, 32, 339], "fwp": 318, "fwp_chunk_shap": [66, 72, 75, 336], "fwp_chunk_siz": 72, "fwp_mask": 75, "g": [7, 9, 10, 11, 12, 13, 23, 24, 25, 30, 32, 42, 45, 47, 49, 51, 54, 57, 59, 63, 66, 72, 75, 92, 94, 96, 98, 101, 102, 103, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 169, 170, 171, 172, 197, 199, 201, 204, 209, 211, 213, 214, 219, 222, 224, 226, 228, 235, 236, 243, 257, 264, 267, 268, 269, 270, 271, 272, 273, 274, 277, 284, 287, 289, 293, 309, 310, 313, 314, 315, 336, 339, 340], "gan": [41, 45, 47, 49, 53, 54, 55, 57, 61, 63, 66, 75, 222, 224, 226, 228, 275, 276, 277, 314, 315, 318, 336], "gan_": [45, 49, 57], "gap": [1, 9, 10, 11, 12, 13, 27, 30, 32, 285], "gaussian": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 162, 163, 295, 296, 306, 310], "gaussian_filt": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32], "gb": [16, 69, 89, 280, 284, 285, 339, 340], "gcm": [7, 8, 9, 10, 11, 12, 13, 30, 32, 153, 154, 155, 156, 159, 162, 163, 167, 208, 213, 214, 336, 339], "gdo": [339, 340, 341], "gen": [42, 45, 47, 49, 57], "gen_lay": [45, 47, 49], "gener": [34, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 73, 74, 75, 99, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 136, 139, 153, 222, 224, 228, 264, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 314, 315, 326, 336, 339, 340, 341], "generator_weight": [42, 45, 47, 49, 57], "geopotenti": [287, 289], "gepotenti": 287, "gershunov": [7, 9, 10, 11, 12, 13], "get": [7, 9, 10, 11, 12, 13, 18, 19, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 62, 66, 72, 75, 77, 82, 84, 86, 92, 93, 94, 96, 98, 99, 101, 103, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 182, 185, 191, 197, 199, 201, 209, 211, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 239, 240, 245, 246, 247, 248, 249, 259, 264, 267, 273, 274, 277, 285, 287, 289, 309, 310, 313, 314, 315, 341], "get_all_data": 19, "get_all_step_data": 159, "get_attr": 94, "get_base_data": [7, 9, 10, 11, 12, 13, 30, 32], "get_base_gid": [7, 9, 10, 11, 12, 13, 30, 32], "get_batch": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "get_bc_factor": 18, "get_bias_data": [7, 9, 10, 11, 12, 13, 30, 32], "get_bias_gid": [7, 9, 10, 11, 12, 13, 30, 32], "get_cds_client": 287, "get_chunk": 158, "get_chunk_indic": [72, 75, 82, 84, 86], "get_chunk_slic": 144, "get_chunks": 144, "get_clearsky_ghi": [162, 163], "get_closest_row_col": [209, 219], "get_collection_attr": 84, "get_combine_type_data": 158, "get_config": [42, 45, 47, 49, 57, 94, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "get_container_index": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "get_coordinate_indic": 84, "get_cropped_slic": 72, "get_data": [84, 213, 214, 215, 216, 217], "get_data_pair": [7, 9, 10, 11, 12, 13, 30, 32], "get_date_range_kwarg": 254, "get_distance_upper_bound": [213, 214, 215, 216, 217], "get_dset_attr": [82, 84, 86, 92, 93, 96, 98], "get_dset_out": 264, "get_dset_properti": 94, "get_exo_cache_fil": 75, "get_exo_kwarg": 75, "get_exo_raster": 159, "get_exo_step": 159, "get_featur": [224, 228], "get_flist_chunk": 84, "get_height_fil": 19, "get_high_res_exo_input": [42, 45, 47, 49, 57], "get_hour": 287, "get_hr_slic": 72, "get_input": [153, 154, 155, 156, 162, 163, 166, 167], "get_input_chunk": 66, "get_input_fil": 19, "get_lat_lon": [19, 92, 96, 98, 209, 219], "get_level_mask": 289, "get_linear_correct": [9, 10, 11, 12, 13], "get_loss_fun": [42, 45, 47, 49, 57], "get_mean": 150, "get_meta_arr": 94, "get_middle_dai": 224, "get_model_step_exo": 158, "get_month": 19, "get_monthly_fil": 287, "get_multi_level_data": [153, 154, 155, 156, 162, 163, 166, 167], "get_node_cmd": [7, 9, 10, 11, 12, 13, 30, 32, 66, 82, 84, 86, 264, 277, 284], "get_nsrdb_data": 277, "get_optimizer_config": [42, 45, 47, 49, 57], "get_optimizer_st": [42, 45, 47, 49, 57], "get_output_fil": 19, "get_pad_width": 72, "get_padded_slic": 72, "get_qdm_param": [30, 32], "get_queu": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "get_random_contain": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "get_raster_index": [198, 209, 219], "get_regridd": 211, "get_renamed_featur": [92, 96, 98], "get_s_enhance_from_lay": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59], "get_sam_df": 94, "get_sampl": 310, "get_sample_index": [107, 222, 224, 226, 228, 314, 315], "get_scale_factor": 94, "get_single_grad": [42, 45, 47, 49, 57], "get_single_level_data": [153, 154, 155, 156, 162, 163, 166, 167], "get_single_step_data": 159, "get_slic": 84, "get_spatial_slic": 72, "get_std": 150, "get_sup3r_fp": 277, "get_t_enhance_from_lay": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59], "get_target_and_masked_meta": 84, "get_tim": [92, 96, 98], "get_time_dim_nam": [82, 84, 86, 92, 93, 96, 98], "get_time_slic": [72, 162, 163], "get_tmp_fil": 287, "get_unique_chunk_fil": 84, "get_unit": 94, "get_weight_update_fract": [45, 49, 57], "get_zenith": 189, "getpass": 285, "getus": 285, "ghi": [24, 153, 162, 163, 169, 170, 264, 275, 276, 277, 336], "gid": [7, 9, 10, 11, 12, 13, 30, 32, 74, 92, 94, 96, 98], "git": [339, 340, 341, 342], "github": [341, 342], "give": [41, 45, 47, 49, 51, 53, 54, 55, 57, 72, 99, 101, 209, 219, 224, 268, 269, 270, 271, 272, 273, 274], "given": [9, 10, 11, 12, 13, 18, 19, 23, 24, 27, 28, 30, 32, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 75, 82, 84, 86, 92, 93, 96, 98, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 144, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 193, 199, 206, 209, 219, 224, 239, 253, 258, 268, 269, 270, 271, 272, 273, 274, 277, 282, 284, 285, 286, 287, 289, 293, 298, 301, 303, 304, 309, 310, 326, 336], "glaw": [339, 340, 341], "glob": [75, 159, 213, 214, 264, 318], "global": [7, 9, 10, 11, 12, 13, 18, 21, 30, 32, 82, 84, 86, 92, 93, 94, 96, 98, 144, 336, 339], "global_attr": [19, 82, 84, 86, 92, 93, 94, 96, 98, 144], "global_scalar": 18, "globalatla": 17, "go": [8, 42, 45, 47, 49, 57, 66, 72, 74, 75, 92, 96, 98, 153, 211, 264, 339, 340], "goal": 341, "good": [30, 32, 263, 336], "gov": [182, 185, 339], "govern": [339, 340, 341], "gpu": [42, 45, 47, 49, 57, 341, 342], "gracefulli": 61, "grad": [42, 45, 47, 49, 57], "gradient": [42, 45, 47, 49, 57, 270], "grant": [339, 341], "grantbust": 224, "greater": [72, 231], "grid": [7, 9, 10, 11, 12, 13, 19, 30, 32, 63, 72, 75, 92, 96, 98, 99, 101, 153, 154, 155, 156, 159, 162, 163, 192, 209, 211, 213, 214, 215, 216, 217, 219, 226, 233, 234, 235, 236, 339, 340, 341], "grid_shap": [101, 209, 219], "grid_siz": 72, "gridpoint": 30, "ground": [42, 45, 47, 49, 57, 193, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 339], "group": [84, 86, 94, 101, 152, 250], "group_spatial_chunk": 86, "guarante": 37, "guess": [101, 159, 213, 214, 264], "guilherm": 341, "h5": [7, 9, 10, 11, 12, 13, 18, 19, 30, 32, 36, 37, 66, 75, 80, 81, 82, 86, 92, 93, 94, 98, 144, 153, 154, 155, 156, 159, 162, 163, 169, 171, 195, 197, 201, 208, 209, 213, 214, 215, 217, 219, 244, 249, 263, 264, 277, 317, 318, 320, 336, 339], "h5_file": 94, "h5py": 94, "h5pyd": 94, "ha": [7, 9, 10, 11, 12, 13, 30, 32, 41, 45, 47, 49, 55, 57, 59, 66, 72, 75, 84, 86, 92, 96, 98, 101, 102, 111, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 147, 158, 159, 160, 180, 183, 190, 192, 206, 213, 214, 224, 267, 268, 270, 271, 277, 282, 309, 317, 318, 320, 336, 339, 340], "half": [30, 32, 236], "hand": [101, 294], "handl": [6, 7, 16, 30, 32, 65, 69, 89, 91, 92, 94, 95, 96, 97, 121, 127, 128, 129, 130, 131, 153, 154, 155, 156, 162, 163, 167, 206, 213, 214, 215, 216, 217, 219, 280, 282, 284, 285, 287, 289, 328, 331, 336], "handler": [7, 9, 10, 11, 12, 13, 30, 32, 33, 34, 36, 37, 42, 45, 47, 49, 57, 61, 66, 75, 94, 99, 102, 107, 110, 111, 112, 113, 114, 115, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 133, 147, 150, 153, 157, 159, 162, 198, 213, 214, 222, 224, 226, 228, 247, 264, 277, 287, 309, 310, 311, 314, 315], "handlerclass": 247, "happen": 336, "hardwar": [339, 340], "has_interp_vari": [153, 154, 155, 156, 162, 163, 166, 167], "hassanali": 341, "have": [22, 23, 24, 25, 30, 32, 34, 42, 45, 47, 49, 51, 57, 59, 72, 75, 82, 84, 86, 99, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 158, 159, 162, 163, 166, 167, 206, 213, 214, 221, 224, 256, 264, 267, 268, 270, 271, 277, 282, 285, 286, 287, 309, 310, 315, 339, 340, 341, 342], "hdf": [24, 244], "hdf5": [30, 32], "head": 75, "head_nod": 75, "header": 285, "heat": 339, "hegewisch": [28, 30], "height": [19, 59, 92, 96, 98, 153, 154, 155, 156, 162, 163, 166, 167, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 193, 206, 287, 288, 289, 294], "held": 285, "help": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 59, 92, 96, 98, 219, 336], "helper": 307, "henc": [30, 32], "here": [24, 30, 32, 37, 45, 49, 57, 59, 72, 75, 99, 104, 124, 153, 169, 171, 212, 263, 286, 336, 339, 340], "hh": 285, "hi": [45, 49, 57, 159, 213, 214], "hi_r": [42, 45, 47, 49, 51, 53, 54, 55, 57, 59], "hi_res_gen": [45, 49, 57], "hi_res_pr": 59, "hi_res_rh": 59, "hi_res_temp": 59, "hi_res_topo": [42, 45, 47, 49], "hi_res_tru": [42, 45, 47, 49, 57], "hidden": [42, 45, 47, 49, 57], "hidden_lay": [42, 45, 47, 49, 57], "high": [7, 9, 10, 11, 12, 13, 16, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 69, 72, 75, 89, 92, 96, 98, 99, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 152, 159, 162, 163, 190, 192, 211, 213, 214, 215, 216, 217, 222, 224, 226, 227, 228, 264, 280, 284, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 314, 315, 317, 320, 336, 339, 340, 341], "high_r": [42, 45, 47, 49, 57, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 210, 211, 224, 309, 310], "higher": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 159, 213, 214], "highest": [158, 206, 282], "histogram": [267, 268, 270, 271], "histor": [8, 13, 23, 24, 30, 32, 37, 339, 340], "histori": [42, 45, 47, 49, 57], "hold": 285, "home": [341, 342], "hook": [162, 341, 342], "host": 94, "hour": [16, 57, 69, 89, 224, 231, 232, 277, 280, 284, 285], "hourli": [7, 9, 10, 11, 12, 13, 30, 32, 57, 101, 104, 153, 213, 214, 224, 287, 339, 340], "how": [7, 9, 10, 11, 12, 13, 19, 30, 32, 41, 45, 47, 49, 51, 53, 57, 59, 75, 108, 110, 111, 113, 114, 115, 117, 118, 119, 135, 153, 154, 155, 156, 159, 160, 162, 163, 166, 167, 221, 222, 224, 226, 228, 277, 286, 309, 310, 314, 315, 336, 339, 340], "hpc": [16, 69, 89, 280, 284, 285, 336], "hr": [99, 104, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 211, 317], "hr_cache_kwarg": 211, "hr_crop_slic": [66, 72, 74], "hr_data": 211, "hr_exo": 159, "hr_exo_featur": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 108, 110, 111, 113, 114, 115, 117, 118, 119, 159, 222, 224, 226, 228, 309, 310, 314, 315], "hr_featur": [124, 222, 224, 226, 228, 314, 315], "hr_features_ind": [124, 222, 224, 226, 228, 314, 315], "hr_lat_lon": [74, 75, 213, 214, 215, 216, 217, 317], "hr_out_featur": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 159, 222, 224, 226, 228, 314, 315], "hr_sample_shap": [222, 224, 226, 228, 314, 315], "hr_shape": [45, 49, 57, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 213, 214, 215, 216, 217, 309, 310], "hr_slice": 72, "hr_spatial_coarsen": [153, 154, 155, 156, 162, 163, 167], "hr_time": [74, 317], "hr_time_index": [213, 214, 215, 216, 217], "hr_topo": [54, 59], "hrrr": 336, "hrrr_2015": 336, "hsd": [94, 339, 340], "hsds_kwarg": 94, "html": [101, 182, 185], "http": [7, 9, 10, 11, 12, 13, 17, 101, 174, 182, 185, 286, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 339], "hub": [19, 59, 180, 183, 289, 294], "humid": [54, 59, 174, 339, 340], "hurrican": 339, "hydrolog": [28, 30], "hydrometeorologi": [28, 30], "i": [7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 22, 23, 24, 25, 27, 28, 30, 32, 34, 36, 37, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 68, 69, 72, 75, 84, 88, 89, 92, 94, 96, 98, 101, 103, 104, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 144, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 170, 171, 172, 173, 174, 190, 191, 192, 193, 195, 196, 197, 199, 201, 206, 209, 211, 212, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 231, 232, 235, 236, 242, 243, 246, 247, 250, 255, 258, 259, 260, 261, 264, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 282, 284, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 305, 309, 310, 313, 314, 315, 318, 332, 336, 339, 340, 341, 342], "i_t_chunk": 336, "id": [277, 285, 325], "ident": [42, 45, 47, 49, 57, 213, 214], "identifi": [30, 92, 94, 96, 98, 206, 282], "idf": 264, "idf_solar": 55, "idf_wind": 55, "idf_wind_out": 55, "idnn": 277, "idx": [101, 104], "ie": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "ignor": [23, 24, 28, 30, 37, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 206, 277, 282, 310], "imag": 59, "impact": 339, "imperfect": 339, "implement": [30, 107, 162, 206, 282, 306], "impli": 94, "import": [41, 45, 47, 49, 51, 57, 59, 66, 75, 84, 101, 104, 264], "impos": 30, "improv": [7, 9, 10, 11, 12, 13, 18, 28, 30, 32], "in_featur": 19, "in_fil": 18, "in_height": 19, "includ": [19, 22, 23, 24, 25, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 75, 92, 94, 101, 104, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 153, 154, 155, 156, 162, 163, 166, 167, 170, 172, 200, 206, 208, 211, 222, 224, 226, 228, 246, 249, 254, 264, 277, 282, 284, 287, 289, 299, 305, 309, 310, 314, 315, 336, 339, 340], "inclus": 328, "incom": [42, 45, 47, 49, 57], "incompat": 287, "inconsist": 211, "increas": [23, 24, 37, 45, 49, 57, 92, 96, 98], "increment": 75, "independ": [101, 104, 148], "index": [18, 19, 25, 30, 32, 45, 47, 49, 54, 57, 59, 66, 72, 74, 75, 77, 82, 84, 86, 92, 93, 94, 96, 98, 101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 153, 154, 155, 156, 158, 159, 160, 162, 163, 167, 206, 209, 213, 214, 215, 216, 217, 219, 222, 224, 228, 230, 231, 232, 246, 254, 258, 264, 277, 282, 285, 289, 309, 310, 314, 315, 332], "index_slic": 77, "indexedslic": [42, 45, 47, 49, 57], "indic": [7, 9, 10, 11, 12, 13, 30, 32, 55, 72, 75, 82, 84, 86, 92, 94, 96, 98, 101, 209, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 246, 277, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 310, 314, 315, 323], "individu": 339, "infer": [41, 45, 47, 49, 53, 54, 55, 57], "info": [42, 43, 45, 47, 49, 53, 57, 75, 101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 159, 309, 310], "inform": [30, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 144, 221], "inherit": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 148, 150, 152, 309, 310], "init": [42, 45, 47, 49, 51, 57, 59, 94], "init_chunk": 75, "init_h5": 94, "init_input_handl": 75, "init_optim": [42, 45, 47, 49, 57], "init_sampl": [108, 110, 111, 113, 114, 115, 117, 118, 119, 309, 310], "init_weight": [45, 49, 57], "initi": [7, 9, 10, 11, 12, 13, 30, 32, 42, 45, 47, 49, 51, 57, 59, 66, 75, 84, 86, 94, 101, 103, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 159, 162, 163, 166, 167, 172, 182, 197, 199, 201, 209, 211, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 263, 264, 277, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 310, 313, 314, 315, 336, 339, 340, 341], "inject": [110, 111, 113, 114, 115, 117, 118, 119, 222, 224, 226, 228, 309, 314, 315], "input": [7, 9, 10, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 32, 34, 35, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 71, 72, 73, 75, 84, 92, 94, 96, 98, 104, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 139, 144, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 169, 171, 172, 180, 181, 182, 183, 184, 185, 197, 199, 201, 209, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 231, 232, 241, 247, 259, 264, 277, 284, 285, 314, 315, 318, 320, 327, 336, 339, 341], "input_data": [66, 74, 75], "input_dim": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59], "input_fil": [19, 75], "input_handl": [34, 35, 75, 264], "input_handler_kwarg": [75, 159, 213, 214, 215, 216, 217, 264, 336], "input_handler_nam": [75, 159, 213, 214, 215, 216, 217, 247, 264], "input_resolut": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59], "insert": [158, 160, 206, 282], "insid": [9, 10, 11, 12, 13, 27, 30, 32], "inspect": 339, "instal": 286, "instanc": [7, 9, 10, 11, 12, 13, 28, 30, 32, 36, 37, 42, 45, 47, 49, 57, 59, 66, 75, 94, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 159, 206, 211, 224, 228, 240, 250, 264, 268, 270, 271, 282, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 310, 339, 340], "instanti": [7, 9, 10, 11, 12, 13, 30, 32, 42, 45, 47, 49, 57, 78, 94, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "instead": [45, 49, 57, 84, 94, 104, 153, 154, 155, 156, 158, 162, 163, 167, 195, 197, 199, 201, 206, 209, 219, 220, 282, 341, 342], "instruct": [286, 339, 340, 341, 342], "int": [7, 9, 10, 11, 12, 13, 16, 18, 23, 24, 30, 32, 37, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 66, 69, 72, 74, 75, 77, 84, 89, 92, 94, 96, 98, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 141, 144, 153, 154, 155, 156, 158, 159, 160, 162, 163, 167, 182, 206, 209, 211, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 230, 231, 232, 234, 258, 264, 267, 268, 270, 271, 273, 274, 277, 280, 282, 284, 285, 287, 293, 309, 310, 314, 315, 325, 332, 333], "inteeg": 144, "integ": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 82, 84, 86, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 171, 206, 224, 230, 232, 282, 285, 309, 310], "integr": [85, 102, 147], "intend": [94, 159, 213, 214, 222, 224, 226, 228, 314, 315], "intention": [206, 282], "interact": [102, 104], "interest": [9, 10, 11, 12, 13, 27, 30, 32, 66, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 189, 339], "interfac": [4, 5, 38, 40, 41, 42, 51, 59, 101, 104, 123, 136, 200, 201, 221, 336, 341], "interior": [9, 10, 11, 12, 13, 27, 30, 32], "intermedi": 19, "intern": [101, 277, 294, 341], "interp": [19, 50, 51, 59, 63], "interp_kwarg": [153, 154, 155, 156, 162, 163, 166, 167, 289], "interp_method": 59, "interp_to_level": 289, "interpol": [19, 51, 59, 63, 92, 96, 98, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 141, 153, 154, 155, 156, 162, 163, 166, 167, 267, 268, 270, 271], "interpolate_na": [27, 101, 153, 154, 155, 156, 162, 163, 167], "interpret": [206, 282], "interrupt": 61, "intersect": 339, "interv": [42, 45, 47, 49, 57], "introduc": 59, "invers": [92, 96, 98], "invert": [92, 96, 98], "invert_uv": [66, 75, 92, 96, 98], "invert_uv_featur": [92, 96, 98], "invert_uv_single_pair": [92, 96, 98], "invlog": [30, 32], "invok": [282, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "irena": 17, "irradi": [162, 163, 277, 336, 339], "irrevoc": [339, 340, 341], "is_4d": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59], "is_5d": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59], "is_hsds_fil": 94, "is_increasing_lon": [92, 96, 98], "is_s3_fil": 94, "is_writ": 94, "isalnum": [206, 282], "isalpha": [206, 282], "isascii": [206, 282], "isdecim": [206, 282], "isdigit": [206, 282], "isel": [101, 104, 260], "isidentifi": [206, 282], "iskeyword": [206, 282], "island": 339, "islow": [206, 282], "isnumer": [206, 282], "isobar": [153, 154, 155, 156, 162, 163], "isol": 336, "isprint": [206, 282], "isspac": [206, 282], "issu": [7, 9, 10, 11, 12, 13, 30, 32, 121, 339], "istitl": [206, 282], "isupp": [206, 282], "item": [158, 160], "iter": [42, 45, 47, 49, 57, 61, 75, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 158, 160, 206, 222, 282, 309, 310], "ith": [75, 158], "its": [41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 206, 277, 282, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 341, 342], "itself": [53, 54, 55, 206, 282], "j": [28, 30, 32], "januari": [30, 32], "job": [2, 16, 69, 75, 84, 86, 89, 280, 284, 285, 336, 339, 340], "job_id": [16, 69, 89, 280, 284, 285], "job_nam": [84, 86, 284, 285], "join": [206, 282], "journal": [28, 30, 32, 174], "json": [42, 45, 47, 49, 51, 54, 57, 59, 66, 94, 144, 150, 331, 336, 339, 340], "jupyt": 339, "just": [12, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 75, 84, 102, 107, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 126, 150, 153, 154, 155, 156, 159, 162, 163, 180, 183, 207, 208, 211, 213, 214, 220, 260, 264, 287, 309, 310, 339, 340], "justifi": [206, 282], "k": [7, 9, 10, 11, 12, 13, 23, 28, 30, 32, 59, 158, 160, 273, 274], "k_rang": 23, "kdtree": [213, 214, 215, 216, 217, 277], "keep": [7, 9, 10, 11, 12, 13, 24, 30, 32, 42, 45, 47, 49, 51, 57, 59, 84, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 268, 270, 271, 285, 293, 309, 310, 315], "keep_sh": 285, "keepend": [206, 282], "kei": [7, 9, 10, 11, 12, 13, 19, 30, 32, 42, 45, 47, 49, 51, 54, 57, 59, 75, 94, 101, 104, 144, 153, 154, 155, 156, 158, 160, 162, 163, 166, 167, 206, 211, 242, 260, 264, 282, 285, 286, 287, 289, 293, 336], "kelvin": [176, 177, 178, 179], "kept": [51, 59], "kera": [42, 45, 47, 49, 57, 62, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 305], "kernel": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 295, 296, 306], "kestrel": 336, "keyboard": 61, "keyerror": [158, 160], "keyword": [23, 24, 25, 34, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 66, 75, 110, 111, 113, 114, 115, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 134, 135, 153, 154, 155, 156, 162, 163, 167, 172, 195, 197, 199, 201, 206, 219, 264, 282, 287, 309, 336], "kg": 30, "kick": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310, 336, 339, 340], "kickoff_local_job": 284, "kickoff_slurm_job": 284, "kind": 339, "kinet": [108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 272, 273, 310], "king": [339, 340, 341], "km": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 340], "know": [30, 32], "known": [211, 336, 339], "kolmogorov": [7, 9, 10, 11, 12, 13, 30, 32], "kwarg": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 66, 75, 78, 82, 84, 86, 94, 101, 104, 105, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 144, 153, 154, 155, 156, 159, 162, 163, 166, 167, 172, 197, 201, 206, 211, 213, 214, 219, 245, 246, 254, 264, 277, 282, 284, 289, 309, 310, 315, 328, 331, 334, 336], "label": [92, 96, 98, 101, 339], "laboratori": [339, 340, 341], "lack": [30, 32, 158, 160], "lai": 339, "lamar": [182, 185], "lanczo": 59, "land": 339, "landmark": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "laps": 59, "larg": [9, 10, 11, 12, 13, 22, 23, 24, 25, 27, 28, 30, 32, 37, 189, 219, 339], "larger": [30, 222, 224, 226, 228, 314, 315], "largest": [104, 211], "last": [41, 45, 47, 49, 55, 57, 72, 92, 96, 98, 101, 124, 158, 160, 190, 192, 209, 213, 214, 215, 216, 217, 219, 317, 318, 320], "lat": [7, 9, 10, 11, 12, 13, 19, 23, 24, 27, 30, 32, 34, 36, 37, 54, 59, 66, 75, 92, 94, 96, 98, 101, 153, 154, 155, 156, 162, 163, 189, 190, 192, 197, 209, 213, 214, 215, 216, 217, 219, 268, 269, 270, 271, 272, 273, 274, 289, 317, 318, 320], "lat_lon": [22, 23, 24, 25, 92, 94, 96, 98, 101, 172, 189, 190, 192, 209, 219], "lat_lon_arrai": [24, 101], "lat_slic": 34, "latest": 101, "latitud": [19, 22, 23, 24, 25, 94, 189, 222, 314], "latter": [7, 9, 10, 11, 12, 13, 30, 32, 92, 96, 98, 101], "launch": 75, "law": [163, 182, 185], "layer": [41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 158, 159, 160], "lazi": [20, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 220, 309, 310], "lazili": 196, "ldrd": [339, 340, 341], "lead": [206, 282, 341], "leap": [30, 32], "learn": [42, 45, 47, 49, 57, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 339], "learning_r": [42, 45, 47, 49, 57], "learning_rate_disc": [45, 49], "least": [206, 282], "left": [7, 9, 10, 11, 12, 13, 30, 32, 101, 153, 154, 155, 156, 162, 163, 206, 209, 219, 235, 282, 294], "legaci": 339, "len": [103, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 158, 162, 163, 166, 167, 197, 199, 201, 206, 209, 211, 219, 222, 224, 226, 228, 243, 258, 269, 272, 273, 274, 282, 309, 310, 313, 314, 315], "length": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 30, 32, 36, 42, 45, 47, 49, 57, 72, 77, 206, 277, 282, 326], "lengthli": 246, "less": [28, 30, 42, 45, 47, 49, 57, 72, 84, 230, 232], "let": 211, "lev_arrai": 289, "level": [42, 45, 47, 49, 57, 84, 86, 94, 153, 154, 155, 156, 162, 163, 166, 167, 174, 201, 206, 287, 289, 336, 339, 340], "level_fil": 287, "level_typ": 287, "leverag": 6, "librari": [7, 9, 10, 11, 12, 13, 24, 30, 32, 42, 45, 47, 49, 57], "licens": [339, 340, 341], "lifo": [158, 160], "like": [6, 8, 9, 10, 11, 12, 13, 27, 30, 32, 45, 49, 57, 75, 84, 101, 103, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 147, 148, 150, 153, 154, 155, 156, 158, 160, 162, 163, 166, 167, 169, 171, 197, 199, 201, 208, 209, 211, 219, 222, 224, 226, 228, 275, 276, 277, 287, 309, 310, 313, 314, 315, 336, 339], "limit": [30, 32, 75, 92, 96, 98, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 206, 219, 282, 285, 309, 310], "line": [38, 206, 282, 285, 336, 341], "linear": [9, 10, 11, 12, 13, 25, 30, 32, 36, 41, 45, 47, 49, 53, 54, 55, 57, 59, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 153, 154, 155, 156, 162, 163, 166, 167], "linearcorrect": [10, 12, 36, 336], "linearinterp": 59, "linearli": [30, 32, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "linearregress": 59, "lise": 277, "list": [7, 9, 10, 11, 12, 13, 19, 30, 32, 36, 37, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 75, 77, 82, 84, 86, 92, 93, 94, 96, 98, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 144, 147, 148, 150, 153, 154, 155, 156, 158, 159, 162, 163, 166, 167, 172, 195, 197, 199, 201, 206, 209, 213, 214, 219, 222, 224, 226, 228, 233, 235, 236, 244, 249, 253, 256, 258, 259, 261, 264, 269, 272, 273, 274, 277, 282, 285, 287, 309, 310, 314, 315, 317, 318, 320, 336], "littl": [52, 153, 154, 155, 156, 162, 163, 166, 167], "ljust": [206, 282], "ll": [339, 340], "ll_chunk": 189, "llc": [339, 340, 341], "lmjohns3": 306, "load": [7, 9, 10, 11, 12, 13, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 94, 99, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 152, 153, 154, 155, 156, 162, 163, 165, 172, 194, 195, 196, 197, 198, 199, 200, 201, 207, 209, 211, 213, 214, 215, 216, 217, 219, 220, 285, 309, 310, 336, 339, 340], "load_exo_data": 75, "load_featur": [153, 154, 155, 156, 162, 163], "load_network": [42, 45, 47, 49, 57], "load_saved_param": [42, 45, 47, 49, 57], "loader": [20, 99, 102, 144, 151, 152, 153, 154, 155, 156, 162, 163, 164, 172, 182, 207, 209, 213, 214, 215, 216, 217, 219, 222, 226, 263, 287, 314, 315], "loaderclass": [153, 154, 155, 156, 162, 163, 219], "loaderh5": 247, "loadernc": 247, "local": [15, 57, 59, 68, 88, 94, 277, 279, 284, 336, 339, 340], "local_linear_bc": 24, "local_qdm_bc": [30, 32], "locat": [20, 30, 32, 94, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 153, 154, 155, 156, 162, 163, 166, 167, 189, 195, 197, 199, 201, 231, 339, 340, 341], "log": [30, 32, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 75, 84, 86, 103, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 162, 163, 166, 167, 193, 197, 199, 201, 209, 211, 213, 214, 219, 222, 224, 226, 228, 246, 251, 287, 309, 310, 313, 314, 315, 325, 336, 339, 340], "log_": 336, "log_bas": [30, 32], "log_fil": [84, 86, 287, 336], "log_level": [84, 86, 336], "log_loss_detail": [42, 45, 47, 49, 57], "log_pattern": 336, "log_queue_info": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "logdir": [45, 47, 49, 57], "logger": [42, 45, 47, 49, 57, 325], "logic": 336, "logit": [45, 49, 57], "lon": [7, 9, 10, 11, 12, 13, 19, 23, 24, 27, 30, 32, 34, 36, 37, 54, 59, 66, 75, 92, 94, 96, 98, 101, 153, 154, 155, 156, 162, 163, 189, 190, 192, 197, 209, 213, 214, 215, 216, 217, 219, 268, 269, 270, 271, 272, 273, 274, 289, 317, 318, 320], "lon_slic": 34, "long": [30, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 101, 222, 226, 314, 315], "longer": 30, "longitud": [19, 22, 23, 24, 25, 92, 94, 96, 98, 189, 204, 222, 314], "look": [92, 96, 98, 166, 336], "lookup": [166, 206, 253, 264, 282], "lookuperror": [206, 282], "loss": [42, 45, 47, 49, 57, 107, 108, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 134, 135, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310], "loss_detail": [42, 43, 45, 47, 49, 57], "loss_disc": [45, 49, 57], "loss_gen": [45, 49, 57], "loss_gen_": [45, 49, 57], "loss_gen_adv": [45, 49, 57], "loss_metr": [42, 45, 47, 49, 57], "lot": [339, 340], "low": [7, 9, 10, 11, 12, 13, 22, 25, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 66, 72, 75, 92, 96, 98, 99, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 158, 159, 211, 213, 214, 215, 216, 217, 222, 224, 226, 227, 228, 264, 293, 309, 310, 314, 315, 318, 320, 336, 341], "low_r": [41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 210, 211, 309, 310], "low_res_lat_lon": [92, 96, 98, 318, 320], "low_res_tim": [92, 96, 98, 318, 320], "lower": [7, 9, 10, 11, 12, 13, 30, 32, 45, 49, 57, 101, 108, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 134, 135, 153, 154, 155, 156, 162, 163, 166, 167, 206, 209, 219, 252, 282, 310], "lower_model": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "lowercas": [206, 282], "lowest": [7, 9, 10, 11, 12, 13, 30, 32, 201, 206, 282], "lr": [99, 104, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 159, 211], "lr_cache_kwarg": 211, "lr_data": 211, "lr_featur": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 159], "lr_nei": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "lr_only_featur": [108, 110, 111, 113, 114, 115, 117, 118, 119, 124, 222, 224, 226, 228, 309, 310, 314, 315], "lr_pad_slic": 74, "lr_padded_slic": [22, 23, 24, 25], "lr_sample_shap": 224, "lr_shape": [45, 49, 57, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 213, 214, 215, 216, 217, 309, 310], "lr_slice": [72, 158], "lr_topo": [54, 59], "lstrip": [206, 282], "m": [7, 9, 10, 11, 12, 13, 15, 16, 54, 59, 68, 69, 88, 89, 92, 96, 98, 153, 154, 155, 156, 162, 163, 166, 167, 279, 280, 284, 285, 339, 340, 341, 342], "m2": [30, 162, 163, 277], "machin": [339, 340, 341, 342], "maclaurin": 340, "made": [153, 154, 155, 156, 162, 163], "mae": [57, 298, 299, 304, 305], "magic": 336, "magnitud": 30, "mai": [94, 104, 206, 282, 339, 340], "main": [32, 54, 59, 341, 342], "mainli": [206, 282], "mainqueueclass": 112, "maintain": [24, 42, 45, 47, 49, 57, 122], "make": [23, 24, 30, 32, 37, 45, 49, 55, 59, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 153, 154, 155, 156, 162, 163, 206, 211, 224, 228, 238, 254, 263, 264, 277, 282, 284, 285, 287, 309, 310, 317, 318, 319, 320, 321, 322, 336, 339, 340, 341, 342], "make_mask": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "make_output": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "make_path": 285, "make_sh": 285, "make_yearly_fil": 287, "make_yearly_var_fil": 287, "maketran": [206, 282], "malik": 341, "manag": [285, 339, 340, 341, 342], "mani": [7, 9, 10, 11, 12, 13, 30, 32, 336, 339], "manipul": [55, 57], "manual": [45, 49, 57, 153, 259], "map": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 84, 104, 153, 154, 155, 156, 159, 162, 163, 166, 167, 205, 206, 213, 214, 215, 216, 217, 282], "map_block": 189, "map_new_nam": [153, 154, 155, 156, 162, 163, 166, 167], "mappabl": 57, "mark": 232, "mask": [19, 47, 75, 84, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 153, 154, 155, 156, 162, 163, 167, 171, 277, 289], "mask1": 289, "mask2": 289, "masked_meta": 84, "match": [7, 9, 10, 11, 12, 13, 20, 24, 30, 32, 37, 51, 54, 55, 57, 59, 75, 92, 96, 98, 99, 108, 110, 111, 113, 114, 115, 117, 118, 119, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 144, 153, 154, 155, 156, 158, 159, 162, 163, 166, 167, 174, 210, 213, 214, 230, 245, 247, 264, 277, 282, 309, 310, 318], "match_zero_r": [7, 9, 10, 11, 12, 13, 30, 32], "materi": 294, "material_deriv": 294, "matter": [45, 49, 57, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "maurer": [28, 30], "max": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 59, 66, 72, 75, 92, 96, 98, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 153, 177, 264, 267, 268, 269, 270, 271, 272, 273, 274, 287, 295, 298, 299, 301, 303, 304, 305, 310, 333], "max_delta": 219, "max_lat": 287, "max_length": [273, 274], "max_lon": 287, "max_nod": [75, 336], "max_tim": [269, 272], "max_work": [5, 9, 10, 11, 12, 13, 18, 23, 24, 30, 32, 37, 84, 92, 96, 98, 121, 122, 124, 144, 213, 214, 215, 216, 217, 287, 336], "maximum": [7, 9, 10, 11, 12, 13, 30, 32, 66, 75, 92, 96, 98, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 159, 162, 163, 206, 209, 213, 214, 215, 216, 217, 219, 268, 270, 271, 282, 295, 296, 309, 310], "maxsplit": [206, 282], "mayb": [153, 212], "mean": [7, 9, 10, 11, 12, 13, 17, 19, 27, 30, 32, 42, 45, 47, 49, 53, 54, 55, 57, 59, 94, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 150, 162, 163, 193, 206, 282, 287, 295, 296, 309, 310, 339], "meanabsoluteerror": 293, "meansquarederror": [42, 45, 47, 49, 57, 293], "measur": [190, 192, 339], "median": [7, 9, 10, 11, 12, 13, 30, 32, 159, 213, 214], "meet": 72, "member": [104, 148, 152, 224, 228, 284], "memori": [16, 69, 75, 89, 92, 96, 98, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 153, 154, 155, 156, 162, 163, 195, 197, 199, 201, 219, 280, 284, 285, 309, 310], "memoryerror": 75, "mere": 196, "merra2": 339, "mesoscal": 339, "met": 72, "meta": [7, 9, 10, 11, 12, 13, 19, 27, 30, 32, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 82, 84, 86, 92, 93, 94, 96, 98, 101, 105, 144, 158, 162, 163, 213, 214, 215, 216, 217, 264, 277, 318], "meta_arr": 94, "meta_data": [92, 96, 98], "metal": [341, 342], "meteorolog": [58, 339], "meteorologi": [54, 339], "meter": [54, 59, 193], "method": [5, 7, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 66, 72, 74, 75, 76, 82, 84, 86, 92, 93, 94, 96, 98, 101, 103, 104, 105, 107, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 141, 144, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 166, 167, 189, 194, 195, 197, 198, 199, 201, 206, 207, 209, 211, 213, 214, 215, 216, 217, 219, 220, 222, 224, 226, 228, 237, 241, 251, 263, 264, 277, 282, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 310, 313, 314, 315, 325, 328, 333, 336, 339], "methodologi": 55, "metric": [290, 293], "mf": 30, "mh": 30, "mid": [42, 45, 47, 49, 66, 110, 111, 113, 114, 115, 117, 118, 119, 158, 222, 224, 226, 228, 309, 314, 315], "middl": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 224, 277], "midnight": 230, "might": [28, 30, 41, 45, 47, 49, 53, 54, 55, 57, 102, 158, 336, 339], "migrat": [102, 147], "mimick": [15, 16, 68, 69, 84, 88, 89, 279, 280, 284], "min": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 153, 178, 213, 214, 264, 267, 268, 269, 270, 271, 272, 273, 274, 287, 298, 299, 301, 303, 304, 305, 310, 333], "min_lat": 287, "min_length": [273, 274], "min_lon": 287, "min_tim": [269, 272], "mini": [42, 45, 47, 49, 57], "miniconda": [339, 340], "minim": [5, 7, 9, 10, 11, 12, 13, 30, 32, 59], "minimum": [23, 24, 28, 30, 32, 37, 72, 75, 144, 153, 154, 155, 156, 162, 163], "minor": 211, "minu": [59, 264], "minut": [153, 154, 155, 156, 162, 163, 167, 340], "miscellan": [138, 188, 229, 324], "mislead": 32, "miss": [9, 10, 11, 12, 13, 27, 30, 32, 101], "missus": [30, 32], "mixin": [43, 212], "mm": [28, 30, 285], "mmd": [295, 296, 306], "mode": [55, 57, 66, 94, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 141, 144, 284, 309, 310], "model": [7, 8, 9, 10, 11, 12, 13, 30, 32, 34, 66, 72, 75, 78, 92, 96, 98, 108, 110, 111, 113, 114, 115, 117, 118, 119, 123, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 139, 153, 157, 158, 159, 160, 213, 214, 221, 222, 224, 225, 226, 228, 264, 277, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 309, 310, 314, 315, 318, 336, 338, 341, 342], "model_class": [66, 75, 78], "model_dir": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 336], "model_kwarg": [53, 66, 75, 336], "model_meta": 318, "model_param": [41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59], "model_step": 158, "model_step_exo": 158, "modern": [339, 341], "modif": 57, "modul": [1, 3, 22, 23, 24, 25, 30, 32, 42, 45, 47, 49, 55, 57, 60, 65, 75, 79, 90, 99, 138, 188, 206, 262, 263, 264, 265, 275, 276, 277, 282, 284, 285, 324, 336, 339, 340], "module_class": 284, "module_nam": [15, 16, 68, 69, 88, 89, 279, 280, 284], "module_root": 285, "modulefil": 285, "modulenam": 284, "moldova": 340, "moment": [46, 47, 110, 111, 113, 114, 115, 117, 118, 119, 125, 126, 127, 128, 129, 130, 131, 132, 309], "monitor": [336, 339, 340], "month": [11, 18, 19, 25, 30, 32, 286, 287], "monthli": [10, 11, 12, 13, 19, 25, 30, 32, 36, 287], "monthly_averaged_ensemble_memb": 287, "monthly_averaged_reanalysi": 287, "monthly_fil": 287, "monthly_file_pattern": 287, "monthlylinearcorrect": [11, 13, 36], "more": [7, 9, 10, 11, 12, 13, 23, 30, 32, 36, 37, 42, 45, 47, 49, 53, 54, 55, 57, 59, 66, 75, 94, 101, 152, 153, 154, 155, 156, 157, 158, 162, 163, 206, 209, 219, 222, 226, 249, 263, 277, 282, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 314, 315, 336, 339, 340], "most": [45, 47, 49, 101, 104, 153, 154, 155, 156, 162, 163, 167], "mostli": 207, "move": 52, "mri": 339, "mro": 105, "mse": [47, 57, 291, 296, 297], "msg": 144, "mst": 277, "much": [162, 163, 222, 314, 340], "multi": [22, 41, 45, 47, 49, 51, 52, 53, 54, 55, 57, 75, 99, 121, 153, 154, 155, 156, 158, 162, 163, 166, 167, 320, 336], "multi_gpu": [42, 45, 47, 49, 57], "multifilensrdbx": 155, "multifileresourcex": [153, 154, 155, 156, 162, 163, 195, 197, 199, 201, 219], "multifilewindx": [156, 199, 219], "multipl": [21, 42, 45, 47, 49, 57, 59, 66, 75, 84, 94, 104, 121, 144, 148, 158, 159, 244, 277, 315, 324, 325, 336, 339, 340], "multipli": [18, 23, 45, 49, 57, 72, 101, 315], "multistep": 159, "multistepgan": [54, 55, 158, 159, 160], "murdock": [30, 32], "must": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 30, 32, 45, 49, 51, 54, 55, 57, 59, 75, 84, 92, 96, 98, 144, 153, 154, 155, 156, 162, 163, 170, 206, 211, 222, 224, 226, 228, 230, 232, 264, 277, 282, 287, 293, 314, 315], "mycalc": 30, "mydictdataset": 30, "myfil": [30, 244], "n": [24, 30, 32, 41, 45, 47, 49, 57, 59, 158, 206, 213, 214, 215, 216, 217, 222, 226, 258, 282, 294, 314, 315, 339, 340], "n_batch": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "n_chunk": 72, "n_dai": [57, 59], "n_epoch": [42, 45, 47, 49, 57], "n_featur": [42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 101, 224], "n_lat": [22, 23, 24, 25], "n_lon": [22, 23, 24, 25], "n_ob": [42, 45, 47, 49, 51, 53, 54, 57, 59, 140, 222, 224, 226, 228, 231, 293, 306, 314, 332], "n_observ": [42, 45, 47, 49, 57, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "n_quantil": [30, 32], "n_sampl": [30, 32], "n_space_bin": [49, 108, 134, 135, 310], "n_spatial_1_chunk": 72, "n_spatial_2_chunk": 72, "n_spatial_chunk": 72, "n_step": [234, 236], "n_sup3r_sit": 277, "n_tempor": [42, 45, 47, 49, 53, 54, 55, 57, 158], "n_time_bin": [49, 108, 134, 135, 310], "n_time_chunk": 72, "n_time_step": [30, 32, 224], "n_write": 84, "name": [7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 22, 23, 24, 25, 28, 30, 32, 34, 36, 37, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 68, 69, 75, 78, 82, 84, 86, 88, 89, 92, 93, 94, 96, 98, 101, 104, 105, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 191, 213, 214, 215, 216, 217, 222, 224, 226, 228, 247, 257, 260, 264, 277, 279, 280, 282, 284, 285, 287, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 305, 309, 314, 315, 317, 320, 325, 326, 336, 341, 342], "name1": 104, "name2": 104, "namedtupl": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "namespac": [42, 45, 47, 49, 57, 75, 82, 84, 86, 92, 93, 96, 98, 105, 264], "nan": [9, 10, 11, 12, 13, 27, 28, 30, 32, 101, 153, 154, 155, 156, 162, 163, 167, 169, 171, 211, 231, 232, 287, 327], "nan_method_kwarg": [153, 154, 155, 156, 162, 163, 167], "nation": [339, 340, 341], "natur": [206, 282, 339], "navier": 294, "navig": [339, 340], "nc": [7, 9, 10, 11, 12, 13, 30, 32, 144, 153, 154, 155, 156, 162, 163, 176, 177, 178, 179, 213, 214, 219, 249, 264, 287, 321, 336], "ndarrai": [7, 9, 10, 11, 12, 13, 18, 21, 22, 23, 24, 25, 28, 30, 32, 34, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 66, 72, 74, 82, 84, 86, 92, 93, 94, 96, 98, 101, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 140, 141, 153, 154, 155, 156, 158, 160, 162, 163, 166, 167, 169, 170, 171, 182, 189, 190, 192, 209, 213, 214, 215, 216, 217, 219, 224, 226, 230, 231, 235, 264, 267, 268, 269, 270, 271, 272, 273, 274, 277, 289, 310, 317, 320, 327, 332, 333], "nearbi": [153, 154, 155, 156, 162, 163, 166, 167], "nearest": [7, 9, 10, 11, 12, 13, 23, 24, 27, 30, 32, 36, 37, 59, 153, 154, 155, 156, 159, 162, 163, 209, 213, 214, 215, 216, 217, 219, 277, 327], "nearli": [28, 30, 42, 45, 47, 49, 57], "necessari": [7, 9, 10, 11, 12, 13, 30, 32, 66, 82, 84, 86, 264, 277, 284], "necessarili": [84, 339, 340, 341], "need": [7, 9, 10, 11, 12, 13, 19, 20, 24, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 73, 75, 92, 94, 96, 98, 101, 107, 112, 144, 153, 154, 155, 156, 159, 162, 163, 166, 167, 172, 173, 180, 181, 182, 183, 184, 185, 189, 198, 209, 211, 219, 224, 251, 259, 264, 268, 269, 270, 271, 272, 273, 274, 284, 286, 287, 336, 339], "neg": [7, 9, 10, 11, 12, 13, 30, 32, 92, 96, 98], "neglig": [28, 30, 32], "neighbor": [7, 9, 10, 11, 12, 13, 23, 27, 30, 32, 36, 37, 153, 154, 155, 156, 162, 163, 209, 213, 214, 215, 216, 217, 219, 277], "nest": [42, 45, 47, 49, 54, 57, 59, 75, 153, 154, 155, 156, 162, 163, 166, 167, 285], "netcdf": [19, 66, 75, 80, 81, 82, 85, 86, 98, 144, 153, 154, 155, 156, 159, 161, 162, 163, 170, 173, 195, 197, 199, 201, 209, 213, 214, 215, 216, 217, 219, 287], "network": [41, 42, 45, 47, 49, 53, 54, 55, 57, 66, 110, 111, 113, 114, 115, 117, 118, 119, 158, 222, 224, 226, 228, 309, 314, 315, 341], "never": [206, 282], "new": [6, 7, 9, 10, 11, 12, 13, 30, 32, 42, 45, 47, 49, 57, 61, 84, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 141, 153, 154, 155, 156, 158, 160, 162, 163, 165, 166, 167, 206, 207, 213, 214, 247, 277, 282, 285, 287, 309, 310, 332, 333, 341, 342], "new_data": [42, 45, 47, 49, 57], "new_dset": 101, "new_mean": [42, 45, 47, 49, 57], "new_meta": 84, "new_stdev": [42, 45, 47, 49, 57], "new_time_index": 84, "next": [339, 340], "nice": 220, "night": 231, "nightim": 232, "nighttim": [169, 171], "nn": [211, 213, 214, 215, 216, 217], "nn_fill_arrai": 27, "nn_threshold": 277, "no_overlap": [153, 154, 155, 156, 162, 163, 166, 167], "no_trend": [23, 24, 37], "noaa": [182, 185], "node": [7, 9, 10, 11, 12, 13, 16, 30, 32, 66, 69, 72, 75, 89, 121, 277, 280, 284, 285, 320, 336, 339], "node_chunk": 75, "node_finish": 75, "node_idx": 75, "node_index": [66, 336], "nohup": [285, 336], "nois": 59, "noise_add": 59, "nomin": [42, 45, 47, 49, 57], "non": [7, 9, 10, 11, 12, 13, 23, 24, 28, 30, 32, 37, 72, 75, 82, 84, 86, 104, 206, 219, 282, 327, 331], "noncach": 211, "none": [5, 7, 9, 10, 11, 12, 13, 15, 16, 18, 21, 22, 23, 24, 25, 30, 32, 34, 35, 36, 37, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 68, 69, 72, 75, 77, 82, 84, 86, 88, 89, 92, 93, 94, 96, 98, 101, 103, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 144, 148, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 195, 197, 199, 201, 206, 209, 211, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 232, 234, 238, 239, 247, 259, 260, 261, 264, 267, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 282, 284, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 305, 309, 310, 313, 314, 315, 319, 325], "nonetyp": [94, 285], "nonexclus": [339, 340, 341], "noon": [153, 154, 155, 156, 162, 163, 167], "norm_in": [41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59], "norm_input": [42, 45, 47, 49, 57], "normal": [42, 45, 47, 49, 53, 54, 55, 57, 59, 94, 101, 104, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 150, 171, 268, 270, 271], "north": [92, 96, 98], "notat": [206, 282], "note": [22, 23, 24, 25, 28, 30, 32, 37, 41, 42, 45, 47, 49, 57, 59, 72, 75, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 137, 206, 222, 276, 277, 282, 309, 314, 336, 339, 340, 341, 342], "notebook": [339, 340], "noth": [92, 96, 98], "now": [30, 45, 47, 57, 94, 264, 339, 340], "np": [7, 9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 28, 30, 32, 34, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 82, 84, 86, 92, 93, 94, 96, 98, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 153, 154, 155, 156, 158, 160, 162, 163, 190, 192, 224, 226, 230, 231, 264, 277, 289, 309, 310, 317, 320, 327, 332, 333], "np_arrai": 101, "nrel": [94, 213, 214, 336, 339, 340, 341, 342], "nsrdb": [7, 8, 9, 10, 11, 12, 13, 30, 32, 59, 159, 162, 163, 169, 171, 180, 183, 208, 213, 214, 219, 224, 275, 276, 277, 336, 339], "nsrdb_2015": 336, "nsrdb_agg": [162, 163], "nsrdb_clearski": 339, "nsrdb_fp": [277, 336], "nsrdb_smooth": [162, 163], "nsrdb_source_fp": [162, 163], "nsrdb_tslice": 277, "nt": [9, 10, 11, 12, 13], "ntime": 30, "nuanc": 338, "num_par": 47, "number": [7, 9, 10, 11, 12, 13, 18, 22, 23, 24, 25, 27, 28, 30, 32, 37, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 75, 84, 92, 96, 98, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 153, 154, 155, 156, 158, 162, 163, 167, 206, 211, 213, 214, 222, 224, 226, 258, 264, 267, 268, 270, 271, 277, 282, 285, 287, 294, 309, 310, 314, 315, 339, 340], "numer": [206, 282], "numpi": [75, 94, 101, 255, 264], "o": 330, "obj": [15, 16, 68, 69, 88, 89, 238, 239, 245, 248, 279, 280, 284, 331], "object": [6, 7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 22, 23, 24, 25, 27, 28, 30, 32, 42, 43, 45, 47, 49, 53, 55, 57, 59, 61, 66, 68, 69, 72, 74, 75, 82, 84, 86, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 189, 195, 197, 199, 201, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 221, 222, 224, 226, 227, 228, 232, 237, 238, 239, 247, 264, 277, 279, 280, 284, 287, 289, 309, 310, 313, 314, 315, 317, 320, 325, 331], "obkect": 287, "obs_axi": [140, 332], "obs_zero_r": 30, "observ": [7, 9, 10, 11, 12, 13, 18, 30, 32, 49, 54, 59, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 141, 222, 224, 226, 228, 309, 310, 314, 315, 332, 333, 339], "observation_index": 226, "obstacl": 193, "obtain": [30, 32], "occurr": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 206, 282, 309, 310], "ocean": 75, "oe": 341, "oedi": [339, 340], "off": [66, 72, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 226, 309, 310, 336, 339, 340], "offic": [339, 340, 341], "offset": [23, 94, 277], "often": [28, 30, 45, 49, 57], "oh": 30, "old": [15, 16, 45, 49, 57, 68, 69, 84, 88, 89, 206, 279, 280, 282, 284], "onc": [42, 45, 47, 49, 57, 84, 86, 102, 147, 219, 339, 340], "one": [7, 9, 10, 11, 12, 13, 30, 32, 36, 37, 42, 45, 47, 49, 53, 54, 55, 57, 72, 82, 84, 86, 94, 99, 104, 110, 111, 113, 114, 115, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 152, 157, 162, 163, 206, 277, 282, 285, 289, 336, 339, 340], "ones": [206, 282], "onli": [30, 32, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 75, 92, 94, 96, 98, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 152, 153, 154, 155, 156, 158, 162, 163, 206, 222, 224, 226, 228, 264, 277, 282, 287, 309, 310, 314, 315, 318, 339, 340], "open": [7, 9, 10, 11, 12, 13, 30, 32, 75, 94, 197, 264, 285, 334, 339, 340], "open_dataset": 94, "open_fil": 94, "open_mfdataset": [86, 153, 154, 155, 156, 162, 163, 195, 197, 199, 201, 219, 287, 329, 334], "openei": 339, "oper": [9, 10, 12, 20, 51, 59, 123, 136, 206, 207, 282, 293, 339, 340, 341], "optim": [42, 45, 47, 49, 57, 62], "optimizer_disc": [42, 45, 47, 49, 57], "option": [7, 9, 10, 11, 12, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 30, 32, 34, 37, 42, 45, 47, 49, 54, 55, 57, 59, 68, 69, 75, 84, 88, 89, 94, 108, 110, 111, 113, 114, 115, 117, 118, 119, 144, 153, 154, 155, 156, 162, 163, 166, 167, 172, 195, 197, 199, 201, 206, 219, 222, 224, 226, 228, 234, 264, 267, 268, 270, 271, 279, 280, 282, 284, 285, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 305, 309, 310, 314, 315, 333, 334, 336, 339, 340, 343], "order": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 92, 96, 98, 101, 104, 105, 108, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 158, 160, 190, 192, 205, 206, 209, 213, 214, 215, 216, 217, 219, 243, 256, 257, 260, 263, 264, 277, 310, 317, 318, 320], "ordin": [206, 282], "ordinari": [23, 24, 37, 94], "org": [7, 9, 10, 11, 12, 13, 17, 174, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 339], "organ": 24, "origin": [30, 92, 206, 282, 339], "orog": 287, "osx": [341, 342], "other": [7, 9, 10, 11, 12, 13, 28, 30, 32, 75, 101, 148, 201, 206, 277, 282, 285, 336, 339, 340, 341], "otherwis": [23, 24, 37, 75, 103, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 158, 160, 162, 163, 166, 167, 197, 199, 201, 206, 209, 211, 219, 222, 224, 226, 228, 259, 282, 309, 310, 313, 314, 315], "our": [24, 101, 339], "out": [7, 9, 10, 11, 12, 13, 19, 21, 22, 24, 25, 27, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 108, 110, 111, 119, 121, 122, 124, 134, 135, 137, 158, 160, 162, 163, 264, 277, 285, 289, 309, 310, 336, 339, 341], "out_data": [7, 9, 10, 11, 12, 13, 30, 32], "out_dir": [41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59], "out_featur": 19, "out_fil": [18, 74, 75, 82, 84, 86, 92, 93, 96, 98, 144, 287, 317, 320, 336], "out_file_path": [264, 336], "out_height": 19, "out_of_bound": 277, "out_pattern": [75, 336], "out_rang": [21, 22, 23, 24, 25, 37], "out_ti": [7, 9, 10, 11, 12, 13, 30, 32], "outfil": 322, "output": [7, 9, 10, 11, 12, 13, 18, 19, 21, 22, 23, 24, 25, 30, 32, 34, 36, 37, 41, 42, 45, 47, 49, 51, 52, 53, 54, 55, 57, 59, 63, 66, 72, 75, 82, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 110, 111, 113, 114, 115, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 144, 153, 154, 155, 156, 158, 159, 160, 162, 163, 213, 214, 222, 224, 226, 228, 246, 254, 264, 269, 272, 273, 274, 275, 276, 277, 285, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 314, 315, 317, 318, 320, 325, 327, 336, 339, 340], "output_arrai": 72, "output_data": 66, "output_fil": [19, 336], "output_gen": 47, "output_nam": 264, "output_resolut": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59], "output_tru": 47, "output_typ": 264, "output_work": [66, 75, 336], "outputhandl": [91, 96, 98], "outputmixin": [82, 92], "outpuunion": 72, "outsid": [9, 10, 11, 12, 13, 27, 30, 32, 45, 49, 57], "over": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 121, 153, 154, 155, 156, 162, 163, 166, 167, 219, 264, 267, 268, 270, 271, 273, 274, 277, 293, 333, 339], "overlap": [66, 72, 75, 82, 84, 86, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 206, 211, 277, 282], "overload": 49, "overrid": [57, 101, 107, 195, 214, 310, 315], "overwrit": [18, 19, 75, 84, 86, 211, 287], "own": [339, 340], "p": [28, 30, 173, 285, 340], "pa": 59, "packag": [30, 32, 94, 286, 341, 342], "pad": [52, 55, 57, 66, 72, 75, 82, 84, 86, 92, 96, 98, 110, 111, 113, 114, 115, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 206, 277, 282, 309], "pad_lat_lon": [92, 96, 98], "pad_source_data": 66, "pad_width": [66, 74], "padded_slic": 72, "page": [336, 339], "paid": [339, 340, 341], "pair": [59, 92, 94, 96, 98, 99, 101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 153, 154, 155, 156, 158, 160, 162, 163, 166, 167, 210, 220, 227, 228, 293, 309, 310, 336], "panda": [42, 45, 47, 49, 57, 82, 84, 86, 92, 93, 94, 96, 98, 189, 254], "paper": 30, "parallel": [9, 10, 11, 12, 13, 18, 30, 32, 42, 45, 47, 49, 55, 57, 72, 75, 84, 144, 189, 277, 336, 339, 340], "param": [24, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59], "paramet": [7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 32, 34, 36, 37, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 63, 66, 68, 69, 72, 75, 77, 82, 84, 86, 88, 89, 92, 93, 94, 96, 98, 101, 103, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 144, 148, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 170, 172, 182, 189, 190, 192, 193, 195, 197, 199, 201, 209, 211, 213, 214, 219, 222, 224, 226, 228, 230, 231, 232, 233, 234, 235, 236, 246, 247, 248, 249, 254, 256, 258, 259, 264, 267, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 284, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 313, 314, 315, 317, 318, 320, 325, 327, 332, 333, 336, 339, 340], "parameter": [59, 336], "parametr": [30, 32], "params_mf": [23, 24, 37], "params_mh": [23, 24, 37], "parent": [45, 47, 49, 57, 104, 105, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 134, 135, 195, 214, 277], "pars": [94, 101, 144, 191, 238, 242, 259, 261, 284, 285], "parse_chunk": 144, "parse_queue_str": 285, "part": [22, 23, 24, 25, 53, 54, 55, 72, 75, 101, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 206, 224, 282, 340, 341], "partial": 75, "partit": [206, 282], "partnership": 341, "pass": [7, 9, 10, 11, 12, 13, 20, 22, 23, 24, 25, 30, 32, 34, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 65, 66, 67, 68, 71, 72, 73, 75, 86, 90, 92, 96, 98, 105, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 153, 154, 155, 156, 159, 160, 162, 163, 167, 195, 197, 199, 201, 213, 214, 219, 246, 251, 254, 260, 264, 277, 287, 309, 310, 317, 320, 325, 335, 339, 340], "pass_context": [15, 16, 68, 69, 88, 89, 279, 280, 284], "pass_work": [75, 336], "password": 94, "past": [9, 10, 11, 12, 13], "pat": 249, "path": [16, 66, 69, 75, 82, 84, 86, 89, 92, 93, 94, 96, 98, 108, 110, 111, 113, 114, 115, 117, 118, 119, 150, 153, 154, 155, 156, 159, 162, 163, 195, 196, 197, 199, 201, 213, 214, 219, 244, 249, 264, 280, 284, 285, 309, 310, 339, 340], "path_pattern": 19, "pathlib": [153, 154, 155, 156, 162, 163, 195, 197, 199, 201, 219, 244], "patt": [82, 84, 86, 110, 111, 113, 114, 115, 117, 118, 119, 222, 224, 226, 228, 309, 314, 315], "pattern": [7, 9, 10, 11, 12, 13, 19, 30, 32, 75, 144, 153, 154, 155, 156, 162, 163, 166, 167, 277, 287, 318, 340], "pavlo": 341, "pb": 285, "pd": [7, 9, 10, 11, 12, 13, 23, 24, 25, 30, 32, 42, 45, 47, 49, 57, 82, 84, 86, 92, 93, 94, 96, 98, 144, 230, 232, 246, 254, 277, 285, 328, 339, 340], "pdf": [174, 268, 270, 271], "peak": 339, "pend": 285, "per": [32, 42, 45, 47, 49, 57, 59, 162, 163], "percent": 235, "percentil": [7, 9, 10, 11, 12, 13, 30, 32, 268, 270, 271], "perform": [6, 7, 9, 10, 11, 12, 13, 30, 32, 42, 45, 47, 49, 53, 57, 59, 72, 75, 92, 96, 98, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 153, 154, 155, 156, 157, 159, 162, 163, 165, 166, 167, 225, 226, 293, 309, 310, 339, 340, 341], "period": [30, 32, 108, 110, 111, 113, 114, 115, 117, 118, 119, 134, 135, 209, 219, 268, 270, 271, 310, 325, 340], "permut": 336, "perturb": 173, "phenomena": 339, "phygnn": [42, 45, 47, 49, 57], "physic": [23, 24, 37, 42, 45, 47, 49, 53, 54, 55, 57, 92, 96, 98, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "pierc": [7, 9, 10, 11, 12, 13, 28, 30], "pierce2015": [28, 30], "pil": 59, "pimenta": 341, "pinchuk": [340, 341], "pip": 343, "pipelin": [15, 16, 30, 84, 86, 88, 89, 279, 280, 284, 335, 339, 340], "pipeline_config": 336, "pipeline_step": [15, 16, 68, 69, 84, 88, 89, 279, 280, 284], "pixel": [7, 9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 159, 162, 163, 213, 214, 277], "pkl": [42, 45, 47, 49, 57], "place": [36, 42, 45, 47, 49, 57, 75, 92, 96, 98, 336], "placehold": 94, "placement": [42, 45, 47, 49, 57], "plane": 193, "pleas": [291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 339], "plu": [101, 296], "podgorni": 341, "point": [2, 7, 9, 10, 11, 12, 13, 14, 30, 32, 45, 47, 49, 57, 67, 70, 75, 87, 104, 159, 206, 213, 214, 265, 278, 282, 336], "point_loss_hour": 57, "pointwis": [57, 293], "polad": [7, 9, 10, 11, 12, 13], "polade2014": [7, 9, 10, 11, 12, 13, 30, 32], "pole": [92, 96, 98], "pool": [23, 24, 37], "pop": [158, 160], "popitem": [158, 160], "portion": [269, 272, 273, 274], "posit": [7, 9, 10, 11, 12, 13, 27, 30, 32, 92, 96, 98, 206, 282, 336], "possibl": [24, 30, 66, 72, 75, 92, 96, 98, 206, 259, 282, 339], "possibli": [7, 9, 10, 11, 12, 13, 30, 32], "post": [79, 108, 110, 111, 119, 122, 124, 134, 135, 137, 309, 310], "post_init_log": [103, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 162, 163, 166, 167, 197, 199, 201, 209, 211, 219, 222, 224, 226, 228, 309, 310, 313, 314, 315], "post_proc": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "postprocess": 336, "potenti": 285, "power": [163, 182, 185], "pq": [206, 282], "practic": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "pre": [37, 42, 45, 47, 49, 57, 75, 82, 84, 86, 92, 93, 94, 96, 98, 339, 341, 342], "pre_load": [7, 9, 10, 11, 12, 13, 30, 32], "precipit": [7, 9, 10, 11, 12, 13, 28, 30, 32, 75], "precis": [30, 32], "predefin": [75, 264], "predict": [30, 41, 45, 47, 49, 57, 59, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 339], "predictor": 47, "prefer": [101, 285], "prefix": [42, 45, 47, 49, 57, 206, 282], "preflight": [55, 75, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 222, 224, 226, 228, 277, 309, 310, 314, 315], "prelight": 75, "preload": [7, 9, 10, 11, 12, 13, 30, 32], "preload_sam": 94, "prep": 211, "prep_chunk_data": 75, "prep_var_list": 287, "prepar": [19, 75], "preprint": 340, "preprocess": [7, 9, 10, 11, 12, 13, 30, 32, 45, 47, 49, 57, 75, 264, 329], "pres_div": 59, "pres_exp": 59, "present": [42, 45, 47, 49, 55, 57, 84, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 158, 160, 206, 282, 309, 310], "preserv": [30, 32, 104], "presrat": [23, 28, 31], "pressur": [59, 153, 154, 155, 156, 162, 163, 166, 167, 172, 173, 174, 191, 206, 287, 288, 289, 340], "pressure_": [54, 59], "pretrain": [41, 45, 47, 49, 53, 54, 55, 57], "pretti": 212, "prevent": [23, 24, 37], "previou": [30, 45, 49, 57], "previous": [24, 34, 41, 45, 47, 49, 53, 54, 55, 57, 209, 285], "primarili": [92, 96, 98, 275, 276, 277], "print": [16, 45, 47, 49, 57, 69, 89, 280, 284, 285], "printabl": [206, 282], "printout": 285, "prior": [220, 284, 336, 341, 342], "priori": 134, "priorit": [42, 45, 47, 49, 57], "prioriti": 285, "probabl": [24, 32, 108, 236], "problem": [7, 9, 10, 11, 12, 13, 30, 32], "proc": [108, 110, 111, 119, 122, 124, 134, 135, 137, 309, 310], "proce": 122, "procedur": [29, 31], "process": [18, 23, 24, 25, 30, 32, 37, 59, 72, 75, 79, 108, 110, 111, 119, 122, 124, 134, 135, 137, 164, 277, 285, 287, 309, 310, 336, 340], "process_and_combin": 287, "process_level_fil": 287, "process_surface_fil": 287, "produc": [7, 9, 10, 11, 12, 13, 23, 24, 25, 30, 32, 59, 66, 112, 124, 254], "product": [23, 339], "product_typ": 287, "profil": [42, 43, 45, 47, 49, 57, 94, 193], "profile_to_tensorboard": [42, 43, 45, 47, 49, 57], "program": [339, 340, 341], "progress": [102, 144, 147, 339, 340], "project": [16, 69, 89, 182, 185, 211, 280, 284, 285, 336, 339, 340], "project_point": 94, "properti": [7, 9, 10, 11, 12, 13, 19, 30, 32, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 75, 94, 101, 103, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 159, 160, 162, 163, 166, 167, 197, 199, 201, 209, 211, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 264, 277, 285, 287, 309, 310, 313, 314, 315, 325], "proport": 193, "protobuf": 75, "provid": [30, 32, 42, 45, 47, 49, 55, 57, 59, 63, 66, 75, 84, 94, 99, 101, 104, 110, 111, 113, 114, 115, 117, 118, 119, 137, 144, 158, 159, 160, 162, 163, 197, 199, 201, 209, 213, 214, 219, 222, 224, 228, 235, 236, 246, 247, 264, 284, 309, 314, 315, 339, 340, 341], "public": [41, 42, 45, 47, 49, 51, 53, 54, 55, 59, 339, 340, 341], "publicli": [339, 340], "publish": [339, 340, 341], "pull": 336, "punctuat": [206, 282], "purpos": [32, 99, 148, 339, 340, 341], "py": 34, "python": [15, 16, 68, 69, 88, 89, 94, 206, 279, 280, 282, 284, 285, 339, 340, 341, 342], "q": [30, 32, 285], "qa": [101, 335], "qa_fp": 264, "qdm": [23, 24, 29, 30, 37], "qformat": 285, "qo": [16, 69, 89, 280, 284, 285], "qstat": 285, "quadrant": 235, "qualiti": 285, "quantifi": 339, "quantil": [23, 24, 29, 30, 31, 32, 37], "quantiledeltamap": [23, 24, 30, 32, 37], "quantiledeltamappingcorrect": [7, 9, 10, 11, 12, 13, 24, 30, 37], "quantiti": [28, 30], "query_queu": 285, "question": [174, 339], "queu": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 285, 309, 310], "queue": [102, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 285, 309, 310], "queue_cap": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "queue_dict": 285, "queue_job_id": 285, "queue_job_nam": 285, "queue_shap": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "queue_str": 285, "queue_thread": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "queuemom1": [113, 131], "queuemom1sf": [114, 132], "queuemom2": 115, "queuemom2sep": 117, "queuemom2sepsf": 118, "quit": 339, "quot": 285, "r": [7, 9, 10, 11, 12, 13, 28, 30, 32, 94, 206, 282, 285, 340], "r1i1p1f1": 339, "rais": [23, 36, 37, 75, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 153, 154, 155, 156, 158, 159, 160, 162, 163, 206, 209, 213, 214, 219, 282, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 309, 310], "ram": 339, "random": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 230, 232, 309, 310, 313, 314, 326], "randomli": [222, 226, 314], "rang": [25, 45, 49, 57, 72, 92, 96, 98, 206, 267, 268, 270, 271, 282], "raster": [7, 9, 10, 11, 12, 13, 20, 30, 32, 59, 72, 75, 99, 101, 102, 143, 145, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 163, 165, 166, 172, 182, 186, 187, 197, 198, 199, 222, 224, 226, 228, 247, 264, 314, 315], "raster_fil": [153, 154, 155, 156, 162, 163, 209, 219], "raster_index": [209, 219], "rasterize_data": [209, 219], "rate": [23, 28, 30, 42, 45, 47, 49, 57, 59], "rather": [99, 219], "ratio": [30, 55, 169, 170, 231, 275, 276, 277, 318, 336], "raw": [34, 45, 49, 57, 153, 154, 155, 156, 162, 163, 166, 167, 168, 172, 247, 285], "re": [7, 9, 10, 11, 12, 13, 24, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 75, 92, 95, 96, 98, 99, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 147, 158, 159, 190, 192, 211, 213, 214, 217, 222, 224, 226, 228, 264, 293, 309, 310, 314, 315, 318, 320, 336, 339, 340], "reach": 339, "read": [19, 94], "readi": 34, "real": [42, 45, 47, 49, 57, 277], "realist": [23, 24, 37], "realiz": 47, "realli": [45, 49, 53, 57], "reanalysi": [287, 339, 340], "reason": 104, "rec_nam": 94, "receiv": [42, 45, 47, 49, 53, 54, 55, 57, 75, 264], "recent": 340, "rechunk": 144, "recommend": [7, 9, 10, 11, 12, 13, 30, 32, 338, 343], "record": [8, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 94, 309, 310, 315, 339], "recurs": [153, 154, 155, 156, 162, 163, 166, 167], "reduc": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 66, 94, 199, 224, 231, 277], "reduce_high_res_sub_daili": 224, "reduct": [7, 9, 10, 11, 12, 13, 30, 32, 224, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305], "redund": [94, 95], "refactor": [6, 20, 45, 49, 57, 212, 263], "refer": [7, 9, 10, 11, 12, 13, 23, 24, 28, 30, 32, 36, 37, 101, 294, 306, 340], "reflect": [55, 57, 66], "regim": [7, 9, 10, 11, 12, 13], "region": [7, 9, 10, 11, 12, 13, 27, 30, 32, 59, 66, 72, 75, 108, 110, 111, 113, 114, 115, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 134, 135, 197, 199, 201, 209, 211, 219, 309, 310], "regist": [105, 206, 282], "register_error": [206, 282], "registri": [153, 154, 155, 156, 162, 163, 166, 167], "regr": 59, "regress": 59, "regrid": 211, "regrid_lr": 211, "regrid_work": 211, "regridd": [162, 163, 211], "regular": [63, 206, 209, 219, 282], "reinforc": 23, "reiniti": 104, "rel": [23, 24, 30, 32, 37, 42, 45, 47, 49, 54, 57, 59, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 148, 150, 174, 190, 192, 289, 309, 310, 340], "relat": [24, 29, 31, 104, 157, 193], "relationship": [104, 277], "relativehumid": 59, "relativehumidity_": [54, 59], "releas": [285, 339, 340], "reli": 158, "reload": 144, "remain": [158, 206, 282], "remov": [55, 84, 95, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 153, 158, 160, 206, 222, 224, 226, 228, 282, 285, 309, 310, 314, 315, 336], "removeprefix": [206, 282], "removesuffix": [206, 282], "renam": [92, 96, 98, 287], "renew": [0, 339, 340, 341], "replac": [23, 24, 27, 37, 101, 153, 154, 155, 156, 162, 163, 166, 167, 198, 206, 258, 282], "repo": [339, 340, 343], "report": [7, 9, 10, 11, 12, 13], "repr": [206, 282], "repres": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 42, 45, 47, 49, 55, 57, 59, 264, 339, 340, 341], "represent": 246, "reproduc": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 339, 340, 341], "request": [7, 9, 10, 11, 12, 13, 16, 19, 30, 32, 42, 45, 47, 49, 57, 69, 75, 82, 84, 86, 89, 92, 93, 96, 98, 111, 119, 137, 153, 154, 155, 156, 157, 158, 159, 162, 163, 166, 167, 209, 211, 219, 222, 224, 226, 228, 231, 259, 280, 284, 285, 287, 289, 309, 314, 315], "requir": [7, 9, 10, 11, 12, 13, 24, 30, 32, 37, 40, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 72, 75, 84, 86, 101, 108, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 153, 159, 172, 238, 259, 264, 336], "res_arrai": 94, "res_dset": 94, "res_kwarg": [86, 153, 154, 155, 156, 162, 163, 195, 197, 199, 201, 219, 287], "resampl": 59, "rescal": 84, "research": [339, 340, 341], "reserv": [206, 282], "reset": 310, "reshap": [222, 226, 264, 314, 315], "resiz": 59, "resolut": [7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 30, 32, 41, 42, 45, 47, 49, 50, 51, 53, 54, 55, 57, 59, 63, 66, 72, 75, 92, 94, 96, 98, 104, 105, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 152, 158, 159, 162, 163, 211, 213, 214, 215, 216, 217, 222, 224, 226, 227, 228, 264, 268, 270, 271, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 314, 315, 317, 320, 332, 333, 336, 339, 340, 341], "resolv": [0, 7, 9, 10, 11, 12, 13, 30, 32, 45, 47, 49, 57, 84, 105, 159, 213, 214, 264, 336], "resourc": [0, 7, 9, 10, 11, 12, 13, 30, 32, 37, 94, 287, 339, 340, 341], "resource_dataset": 94, "resourcedataset": 94, "respect": [30, 32, 153, 154, 155, 156, 162, 163, 195, 197, 199, 201, 211, 219, 282, 336], "respons": [75, 341], "rest": [206, 282], "restrict": [34, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 153, 154, 155, 156, 162, 163, 234], "result": [23, 24, 30, 32, 37, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 72, 75, 94, 108, 110, 111, 113, 114, 115, 117, 118, 119, 150, 193, 206, 282, 309, 310], "retain": [339, 340, 341], "retreiv": 84, "retriev": [6, 7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 30, 32, 36, 37, 54, 84, 94, 159, 162, 163, 219, 264, 277, 293], "return": [7, 9, 10, 11, 12, 13, 18, 19, 21, 22, 24, 25, 27, 28, 30, 32, 34, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 66, 72, 75, 77, 82, 84, 86, 92, 93, 94, 96, 98, 101, 103, 104, 105, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 144, 148, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 169, 170, 171, 182, 189, 190, 192, 193, 195, 197, 199, 201, 206, 209, 211, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 230, 231, 232, 233, 234, 235, 236, 243, 244, 246, 247, 249, 253, 254, 257, 259, 260, 261, 264, 267, 268, 269, 270, 271, 272, 273, 274, 277, 282, 284, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 313, 314, 315, 317, 318, 320, 325, 327, 332, 333], "rev": [15, 16, 68, 69, 84, 88, 89, 279, 280, 284, 285, 336], "review": 224, "rewrap": 104, "rex": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 189, 198, 339, 340], "rfind": [206, 282], "rh": 174, "right": [72, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 206, 235, 282, 309, 310], "rindex": [206, 282], "rjust": [206, 282], "rm": 285, "role": [7, 9, 10, 11, 12, 13, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "roll": [57, 153, 154, 155, 156, 162, 163, 167, 277], "romania": 340, "root": 285, "rougher": [162, 163], "round": [7, 9, 10, 11, 12, 13, 30, 32], "routin": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 92, 96, 98, 122, 153, 154, 155, 156, 162, 163, 166, 167, 211, 224, 287], "row": [7, 9, 10, 11, 12, 13, 30, 32, 42, 45, 47, 49, 57, 84, 92, 94, 96, 98, 153, 154, 155, 156, 162, 163, 209, 219, 233, 234, 235, 236, 285], "row_slic": 84, "rpartit": [206, 282], "rsd": [24, 162, 163, 170, 264], "rsplit": [206, 282], "rstrip": [206, 282, 285], "run": [5, 7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 30, 32, 42, 45, 47, 49, 55, 57, 61, 66, 68, 69, 72, 75, 82, 84, 86, 88, 89, 94, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 162, 163, 189, 224, 264, 277, 279, 280, 284, 285, 287, 309, 310, 336, 338, 341, 342], "run_attr": 94, "run_chunk": [66, 75], "run_config": [339, 340], "run_for_var": 287, "run_gener": 66, "run_gradient_desc": [42, 45, 47, 49, 57], "run_input_check": [162, 163], "run_level_check": [153, 154, 155, 156, 162, 163, 166, 167, 289], "run_month": 287, "run_qa": 287, "run_temporal_chunk": [277, 336], "run_wrap_check": [162, 163], "runn": 325, "runtim": 94, "ryan": [339, 341], "s1_hr_crop_slic": 72, "s1_hr_slice": 72, "s1_lr_pad_slic": 72, "s1_lr_slice": 72, "s2_hr_crop_slic": 72, "s2_hr_slice": 72, "s2_lr_pad_slic": 72, "s2_lr_slice": 72, "s3": [94, 339, 340], "s41560": 339, "s_enhanc": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 66, 72, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 159, 211, 213, 214, 215, 216, 217, 224, 228, 264, 293, 309, 310, 332, 336], "s_file": 84, "s_hr_crop_slic": 72, "s_hr_slice": 72, "s_lr_crop_slic": 72, "s_lr_pad_slic": 72, "s_lr_slice": 72, "s_pad": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "s_slices_hr": 320, "s_slices_lr": 320, "safe": 330, "sai": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 285], "sam": 94, "sam_config": 94, "sam_r": 94, "same": [24, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 84, 86, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 141, 144, 148, 150, 206, 211, 213, 214, 215, 216, 217, 222, 224, 226, 228, 231, 243, 264, 277, 282, 289, 309, 310, 314, 315, 325, 332, 333, 336, 340], "sampl": [7, 9, 10, 11, 12, 13, 30, 32, 49, 57, 99, 101, 104, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 148, 150, 200, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 309, 310, 311, 314, 315], "sample_batch": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "sample_index": [222, 314], "sample_q_linear": [30, 32], "sample_shap": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 222, 224, 226, 228, 233, 234, 235, 236, 309, 310, 314, 315], "sampler": [99, 102, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 148, 197, 199, 201, 309, 310, 314, 315, 323], "sampler_kwarg": [108, 110, 111, 113, 114, 115, 117, 118, 119, 309, 310], "samplerclass": [112, 311, 323], "samplerdc": [107, 108, 112], "samplertest": [309, 310, 312, 316], "samresourc": 94, "sanit": [45, 49, 57], "saniti": 75, "satisfi": [30, 42, 45, 47, 49, 57], "save": [24, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 75, 108, 110, 111, 113, 114, 115, 117, 118, 119, 144, 149, 150, 153, 154, 155, 156, 162, 163, 166, 167, 209, 213, 214, 215, 216, 217, 219, 264, 309, 310, 336], "save_param": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59], "save_raster_index": 219, "save_sourc": 264, "save_stat": 150, "sbatch": 285, "scalar": [7, 9, 10, 11, 12, 13, 18, 21, 22, 25, 27, 30, 32], "scalar_rang": 25, "scalarcorrect": 11, "scale": [30, 32, 59, 84, 94, 162, 163, 174, 199, 268, 270, 271], "scale_clearsky_ghi": [162, 163], "scale_factor": [84, 94, 199], "scancel": 285, "scenario": 339, "scheme": [42, 45, 47, 49, 57, 206, 282], "scientif": [7, 9, 10, 11, 12, 13, 339, 340, 341], "scipi": [30, 32], "scontrol": 285, "script": [15, 16, 68, 69, 88, 89, 279, 280, 284, 285], "se": 32, "seam": [9, 10, 11, 12, 13, 27, 30, 32, 59], "search": [82, 84, 86, 153, 154, 155, 156, 158, 162, 163, 166, 167, 172, 206, 282], "season": [9, 108, 226, 310], "second": [41, 45, 47, 49, 54, 57, 59, 72, 101, 129, 130, 131, 132, 211, 224, 236, 289], "secondari": 339, "secur": 341, "see": [23, 24, 28, 30, 37, 57, 66, 94, 108, 153, 154, 155, 156, 162, 163, 166, 167, 226, 264, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 310, 336, 339, 340], "seed": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59], "seem": [104, 158], "select": [24, 49, 75, 108, 153, 154, 155, 156, 158, 162, 163, 209, 211, 219, 222, 224, 226, 228, 235, 236, 289, 314, 315, 340], "self": [7, 9, 10, 11, 12, 13, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 75, 101, 104, 105, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 158, 162, 163, 166, 206, 209, 219, 222, 224, 226, 282, 309, 310, 314, 325], "send": [7, 9, 10, 11, 12, 13, 30, 32, 45, 49, 57, 66, 72, 75, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "sens": [30, 32], "sent": [72, 75], "sep": [206, 282], "separ": [45, 49, 57, 99, 132, 144, 206, 210, 282, 287], "sequenc": [30, 32, 244], "sequenti": [54, 277], "seri": [9, 30, 54, 159, 213, 214], "serial": [7, 9, 10, 11, 12, 13, 30, 32, 53, 72, 75, 84, 330, 336, 339, 340], "serializ": [150, 331], "server": [339, 340], "servic": 285, "set": [7, 9, 10, 11, 12, 13, 15, 16, 19, 21, 22, 23, 24, 25, 27, 30, 32, 37, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 68, 69, 72, 73, 75, 84, 88, 89, 94, 99, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 147, 148, 158, 159, 160, 206, 209, 211, 219, 222, 224, 226, 228, 239, 243, 252, 260, 269, 272, 273, 274, 277, 279, 280, 282, 284, 285, 298, 304, 309, 310, 314, 315, 318, 325, 336, 339, 341, 342], "set1": 336, "set_config": 94, "set_model_param": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59], "set_norm_stat": [42, 45, 47, 49, 57], "set_tag": 336, "set_version_attr": 94, "setdefault": [158, 160], "seto": [339, 340, 341], "setup": [121, 339, 340], "sever": [7, 9, 10, 11, 12, 13, 30, 32, 336, 339, 340], "sf": [114, 118, 128, 130, 132], "sh": 285, "shallow": [158, 160], "shape": [7, 9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 30, 32, 34, 36, 37, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 75, 84, 92, 94, 96, 98, 101, 103, 104, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 197, 199, 201, 209, 211, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 230, 231, 232, 234, 236, 243, 264, 277, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 310, 313, 314, 315, 317, 319, 320, 321, 322, 336], "share": [60, 138, 188, 285, 324], "shell": [15, 16, 68, 69, 88, 89, 279, 280, 284, 285], "shift": [30, 32, 92, 96, 98, 153, 154, 155, 156, 162, 163, 167], "short": 285, "should": [7, 9, 10, 11, 12, 13, 20, 30, 32, 36, 37, 42, 45, 47, 49, 53, 54, 55, 57, 66, 75, 82, 84, 86, 91, 94, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 144, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 172, 198, 213, 214, 222, 224, 226, 228, 263, 264, 277, 282, 287, 289, 309, 310, 314, 315, 336, 339, 340], "show": [285, 336, 339], "shown": [59, 285], "side": [30, 32, 55, 57, 72, 75, 294], "sigma": [295, 296, 306], "signatur": [105, 144, 238, 239, 240, 245, 248, 251], "significantli": [159, 213, 214], "similar": [7, 9, 10, 11, 12, 13, 30, 32, 104, 212], "simpl": [21, 22, 25, 50, 51, 59, 140, 247, 264, 277, 328], "simpli": [113, 127, 144], "simplifi": 158, "simplist": 339, "simul": [28, 30, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 310], "sinc": [30, 32, 42, 45, 47, 49, 84, 124, 153, 154, 155, 156, 162, 163, 166, 167, 173, 209, 219, 224, 315], "singl": [7, 9, 10, 11, 12, 13, 19, 21, 22, 23, 24, 25, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 75, 82, 84, 86, 92, 96, 98, 99, 101, 104, 112, 122, 124, 135, 144, 153, 154, 155, 156, 159, 162, 163, 166, 167, 174, 180, 183, 213, 214, 215, 216, 217, 222, 226, 264, 277, 287, 314, 315, 318, 336, 339, 340], "single_hr": 59, "single_hr_temp": 59, "single_lr": 59, "single_lr_pr": 59, "single_lr_rh": 59, "single_lr_temp": 59, "singlebatchqueu": [110, 111, 112, 119, 126, 134, 137, 309], "singleexodatastep": [75, 158], "site": [5, 7, 9, 10, 11, 12, 13, 22, 25, 30, 32, 94, 189, 277], "size": [7, 9, 10, 11, 12, 13, 30, 32, 45, 49, 57, 72, 75, 77, 84, 94, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 159, 162, 163, 195, 197, 199, 201, 206, 209, 213, 214, 219, 222, 224, 226, 228, 230, 231, 232, 233, 234, 235, 236, 282, 309, 310, 314, 315], "skill": 13, "skillassess": [7, 9, 10, 11, 12, 30, 32], "skillfulli": 339, "skip": [75, 285], "skip_param": [238, 239], "skip_row": 285, "sklearn": 59, "sky": [169, 170], "slater": 341, "slice": [22, 23, 24, 25, 34, 57, 66, 72, 74, 77, 84, 94, 101, 104, 144, 153, 154, 155, 156, 158, 162, 163, 206, 209, 219, 222, 226, 230, 231, 232, 233, 234, 235, 236, 241, 243, 258, 260, 277, 282, 314, 320], "slightli": [59, 339], "slow": 20, "slurm": [16, 69, 89, 280, 284, 285, 339, 340], "small": [7, 9, 10, 11, 12, 13, 23, 24, 25, 28, 30, 32, 37, 72, 189, 336], "smaller": [30, 32], "smallest": [66, 267, 339, 340], "smirnov": [7, 9, 10, 11, 12, 13, 30, 32], "smooth": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 162, 163, 309, 310], "smooth_extend": [5, 9, 10, 11, 12, 13, 27, 30, 32], "smooth_interior": [5, 9, 10, 11, 12, 13, 27, 30, 32], "smoothed_featur": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59], "smoothing_ignor": [108, 110, 111, 113, 114, 115, 117, 118, 119, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 309, 310], "snapshot": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "so": [19, 20, 45, 49, 55, 57, 72, 75, 86, 94, 101, 104, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 137, 144, 147, 153, 154, 155, 156, 162, 163, 167, 171, 172, 189, 197, 199, 201, 209, 219, 221, 224, 251, 256, 260, 268, 270, 271, 277, 285, 309, 339, 340, 341], "sobi": [30, 32], "softwar": [39, 44, 46, 48, 56, 339, 340, 341], "solar": [55, 57, 94, 175, 189, 335, 339, 340, 341], "solar_zenith_angl": 277, "solarcc": [52, 155], "solarmultistepgan": [52, 158], "some": [8, 45, 49, 55, 57, 59, 75, 94, 108, 110, 111, 119, 122, 124, 134, 135, 137, 158, 162, 163, 189, 200, 219, 264, 277, 309, 310, 339], "someth": 224, "soon": 122, "sort": [82, 84, 86, 244], "sourc": [5, 7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 32, 34, 35, 36, 37, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 62, 63, 66, 68, 69, 72, 74, 75, 77, 78, 82, 84, 86, 88, 89, 92, 93, 94, 96, 98, 101, 103, 104, 105, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 144, 148, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 197, 199, 201, 203, 204, 206, 209, 211, 213, 214, 215, 216, 217, 219, 222, 224, 226, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 267, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 282, 284, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 313, 314, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 339, 340, 341, 342], "source_data": [213, 214, 215, 216, 217], "source_featur": [34, 264], "source_fil": [75, 159, 195, 213, 214, 215, 216, 217, 336], "source_file_h5": [213, 214, 215, 217], "source_file_nc": 216, "source_file_path": [264, 336], "source_handl": [213, 214, 215, 216, 217], "source_lat_lon": [213, 214, 215, 216, 217], "source_typ": 249, "south_north": [101, 104, 144, 159, 190, 192, 206, 213, 214, 257, 264], "spa": 189, "space": [24, 30, 32, 75, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 135, 206, 256, 282, 285, 301, 303], "space1": 264, "space2": 264, "spars": [291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "sparsifi": 264, "spatial": [7, 9, 10, 11, 12, 13, 19, 21, 22, 23, 24, 25, 27, 30, 32, 41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 66, 72, 75, 82, 84, 86, 92, 94, 96, 98, 101, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 153, 154, 155, 156, 158, 159, 162, 163, 167, 206, 211, 213, 214, 222, 224, 226, 228, 233, 235, 264, 268, 270, 277, 291, 293, 298, 299, 300, 301, 303, 309, 310, 314, 315, 320, 332], "spatial_1": [22, 23, 24, 25, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 66, 72, 75, 92, 96, 98, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 158, 190, 192, 209, 213, 214, 215, 216, 217, 219, 224, 230, 231, 232, 235, 264, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 317, 318, 320, 332, 333], "spatial_2": [22, 23, 24, 25, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 66, 72, 75, 92, 96, 98, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 158, 190, 192, 209, 213, 214, 215, 216, 217, 219, 224, 230, 231, 232, 235, 264, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 317, 318, 320, 332, 333], "spatial_chunk_index": [82, 84, 86], "spatial_chunk_lookup": 72, "spatial_id": 277, "spatial_model": 158, "spatial_pad": [72, 75, 336], "spatial_solar_model": [55, 158], "spatial_solar_model_dir": 55, "spatial_weight": [108, 134, 135, 226, 301, 303, 310], "spatial_wind_model": [55, 158], "spatial_wind_model_dir": 55, "spatialextremesloss": [42, 45, 47, 49, 57], "spatialextremesonlyloss": 293, "spatio": [54, 55, 57], "spatiotempor": [41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 66, 72, 75, 99, 101, 107, 108, 110, 111, 119, 135, 158, 172, 182, 206, 207, 208, 209, 213, 214, 215, 216, 217, 222, 228, 234, 236, 264, 277, 301, 302, 303, 309, 314, 341], "special": [42, 45, 47, 49, 53, 55, 57, 58, 153, 158, 160, 172, 220, 224], "specif": [66, 74, 75, 94, 99, 144, 153, 154, 155, 156, 159, 162, 163, 166, 167, 172, 182, 195, 197, 199, 201, 206, 207, 214, 269, 272, 273, 274, 282, 285], "specifi": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 72, 77, 101, 144, 153, 154, 155, 156, 158, 160, 162, 163, 166, 167, 206, 209, 219, 235, 236, 269, 272, 273, 274, 282], "spectra": [269, 272, 273, 274], "spectrum": [269, 272, 273, 274, 300, 302], "speed": [94, 193, 340], "spit": 336, "split": [75, 77, 84, 99, 108, 110, 111, 113, 114, 115, 117, 118, 119, 158, 206, 222, 224, 226, 228, 282, 285, 309, 310, 314, 315], "split_list": 158, "split_step": 158, "splitlin": [206, 282], "sponsor": [339, 340, 341], "spot": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "squar": [292, 297], "squeue": [285, 339, 340], "srep04364": [7, 9, 10, 11, 12, 13], "ss": 285, "ssp245": 30, "ssp5": 339, "ssssss": 277, "stabil": 193, "stack": [222, 226, 314, 315], "stackexchang": 174, "stai": 285, "stamp": [153, 154, 155, 156, 162, 163, 167, 189], "standard": [9, 10, 11, 12, 13, 19, 22, 25, 27, 30, 32, 42, 45, 47, 49, 53, 54, 55, 57, 59, 101, 108, 110, 112, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 150, 172, 182, 203, 204, 205, 206, 253, 260, 285, 295, 296, 306, 310, 329], "standard_nam": 203, "start": [42, 45, 47, 49, 57, 66, 72, 77, 94, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 153, 154, 155, 156, 162, 163, 167, 206, 209, 219, 226, 230, 232, 236, 282, 309, 310, 325, 336, 339, 340, 341], "starting_hour": 57, "startswith": [206, 282], "stat": [101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 309, 310], "state": [16, 42, 45, 47, 49, 57, 69, 89, 101, 280, 284, 285, 339, 341], "static": [7, 9, 10, 11, 12, 13, 28, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 72, 82, 84, 86, 92, 93, 94, 96, 98, 144, 189, 206, 224, 277, 282, 285, 287], "statist": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 42, 45, 47, 49, 57, 339], "statscollect": [110, 111, 113, 114, 115, 117, 118, 119], "statu": [84, 86, 284, 285, 339, 340], "std": [9, 10, 11, 12, 13, 27, 30, 32, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 150, 287, 309, 310], "stderr": [16, 69, 89, 280, 284, 285, 336], "stdev": [42, 45, 47, 49, 53, 54, 55, 57, 101], "stdout": [16, 69, 84, 86, 89, 280, 284, 285, 336], "stdout_path": [16, 69, 89, 280, 284, 285], "step": [15, 16, 30, 41, 42, 45, 47, 49, 51, 52, 53, 54, 55, 57, 59, 66, 68, 69, 72, 84, 88, 89, 92, 94, 96, 98, 101, 112, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 167, 209, 219, 222, 224, 264, 271, 279, 280, 284, 293, 314, 333, 336, 339, 340], "stich": 75, "still": [12, 24, 75, 101, 105, 162, 163, 198, 264, 339], "stitch": [66, 72, 75], "stoke": 294, "stop": [42, 45, 47, 49, 57, 72, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 153, 154, 155, 156, 162, 163, 206, 209, 219, 282, 309, 310, 325], "storag": 253, "store": [34, 74, 75, 94, 101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 153, 154, 155, 156, 158, 159, 162, 163, 166, 167, 199, 264, 287, 309, 310, 315, 325], "storm": 339, "str": [7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 22, 23, 24, 25, 30, 32, 34, 36, 37, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 68, 69, 74, 75, 82, 84, 86, 88, 89, 92, 93, 94, 96, 98, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 141, 144, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 182, 189, 195, 197, 199, 201, 206, 209, 213, 214, 215, 216, 217, 219, 244, 247, 249, 253, 259, 264, 277, 279, 280, 282, 284, 285, 287, 293, 309, 310, 318, 333], "str_decod": 94, "strateg": 341, "strategi": [45, 47, 49, 66, 133, 235, 236, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305], "stream": [339, 340], "strict": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 206, 282], "strictli": 59, "string": [66, 75, 82, 84, 86, 92, 94, 96, 98, 159, 206, 213, 214, 239, 247, 253, 259, 261, 264, 277, 282, 284, 285, 287, 318, 325, 326], "strip": [206, 282], "struct": 66, "structur": [42, 45, 47, 49, 57, 74, 75, 338, 340], "studi": 339, "style": [75, 82, 84, 86, 101, 159, 213, 214, 249, 264, 277], "sub": [41, 42, 45, 47, 49, 53, 54, 55, 57, 206, 282, 336], "subclass": [40, 41, 42, 99, 105, 164, 166, 194, 207, 209, 212, 220], "subfilt": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "subject": 339, "submiss": [16, 69, 89, 280, 284, 285, 339], "submit": [15, 16, 68, 69, 88, 89, 279, 280, 284, 285], "subprocess": 285, "subsampl": [108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 264, 293, 310, 333], "subsequ": [7, 9, 10, 11, 12, 13, 30, 32, 42, 45, 47, 49, 57, 72, 75], "subset": [55, 84], "subset_masked_meta": 84, "substitut": [206, 282], "substr": [206, 282], "subtract": [59, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 289], "success": [101, 172, 339, 340], "successfulli": 285, "suffix": [84, 206, 264, 277, 282], "suggest": 101, "suitabl": [206, 282], "sum": [7, 9, 10, 11, 12, 13, 23, 30, 32, 42, 45, 47, 49, 57, 264, 333], "sum_over_batch_s": [291, 292, 294, 295, 296, 297, 299, 300, 302, 305], "sup3r": [335, 339, 340, 342], "sup3r_file_tttttt_ssssss": 277, "sup3r_fp": 277, "sup3r_model": 336, "sup3r_out_": 336, "sup3rcc": [338, 340], "sup3rcc_conus_ecearth3_ssp585_r1i1p1f1_wind_2015": 339, "sup3rcondmom": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "sup3rdataset": [102, 103, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 147, 148, 150, 152, 153, 154, 155, 156, 162, 163, 166, 167, 170, 172, 182, 197, 199, 201, 209, 211, 219, 222, 224, 226, 227, 228, 232, 309, 310, 313, 314, 315], "sup3rgan": [49, 51, 53, 54, 55, 57, 59, 61, 66, 75, 159, 213, 214, 264, 336], "sup3rgandc": [108, 134, 135, 310], "sup3rqa": [284, 336], "sup3rwind": 338, "sup3rx": [27, 103, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 144, 148, 153, 154, 155, 156, 162, 163, 166, 167, 170, 172, 182, 206, 222, 226, 232, 242, 263, 309, 310, 313, 314, 315], "super": [0, 45, 47, 49, 50, 55, 57, 336, 339, 340, 341], "superresolv": [45, 49, 57, 72], "suppli": [41, 45, 47, 49, 53, 54, 55, 57], "support": [26, 30, 32, 264, 341], "sure": [55, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 162, 163, 211, 224, 228, 238, 277, 284, 309, 310, 339, 340, 341, 342], "surfac": [54, 174, 176, 177, 178, 182, 185, 287, 289], "surface_fil": 287, "surface_model_class": 54, "surface_model_kwarg": 54, "surfacespatialmetmodel": 54, "surround": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 267, 268, 270, 271, 289], "sustain": [339, 340, 341], "swapcas": [206, 282], "switch": [51, 63], "switcher": 37, "sx": 101, "synonym": 94, "synthet": [41, 42, 45, 47, 49, 53, 54, 55, 57, 264, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 341], "system": 18, "sza": [41, 45, 47, 49, 57, 212, 213, 214, 217], "t": [28, 30, 32, 42, 45, 47, 49, 57, 75, 92, 96, 98, 153, 154, 155, 156, 158, 162, 163, 206, 231, 282, 285, 339], "t0": [42, 45, 47, 49, 57], "t_center": [51, 63], "t_dataset": 259, "t_enhanc": [41, 45, 47, 49, 51, 52, 53, 54, 55, 57, 59, 63, 66, 72, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 141, 159, 211, 213, 214, 215, 216, 217, 224, 228, 264, 293, 309, 310, 333, 336], "t_file": 84, "t_hr_crop_slic": 72, "t_lr_crop_slic": 72, "t_lr_pad_slic": 72, "t_lr_slice": 72, "t_method": 293, "t_pad": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "t_slice": 277, "t_slices_hr": 320, "t_slices_lr": 320, "t_step": 271, "ta": [177, 178, 179], "ta_day_ec": 336, "tab": [45, 49, 57, 206, 282], "tab_bodi": 174, "tabl": [206, 282, 339], "tabsiz": [206, 282], "tag": [42, 43, 45, 47, 49, 57], "tailor": [269, 272, 273, 274], "take": [25, 55, 59, 75, 110, 111, 119, 158, 159, 211, 219, 224, 231, 264, 293, 309, 333, 336], "taken": 59, "tandfonlin": [182, 185], "target": [7, 9, 10, 11, 12, 13, 23, 24, 30, 32, 37, 59, 75, 84, 86, 94, 101, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 153, 154, 155, 156, 159, 162, 163, 209, 213, 214, 215, 216, 217, 219, 277, 336], "target_fp": 277, "target_masked_meta": 84, "target_meta": 84, "target_meta_fil": 84, "task": [75, 144], "tau": 30, "tau_fut": 30, "td": [317, 318, 320], "tech": 94, "technic": 339, "techniqu": [28, 30, 32], "technologi": [94, 339, 340, 341], "temp": 287, "temp_laps": 59, "temperatur": [54, 59, 153, 154, 155, 156, 162, 163, 174, 176, 177, 178, 179, 204, 339, 340], "temperature_": [54, 59], "temperature_100m": [153, 154, 155, 156, 162, 163], "temperature_2m": [104, 153, 154, 155, 156, 162, 163, 264], "temperature_max_2m": [104, 264], "temperature_min_2m": [104, 264], "tempfil": [317, 318, 320], "tempor": [7, 9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 66, 72, 75, 82, 84, 86, 92, 94, 96, 98, 99, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 153, 154, 155, 156, 158, 162, 163, 190, 192, 209, 211, 213, 214, 215, 216, 217, 219, 224, 226, 228, 230, 231, 232, 234, 235, 236, 264, 268, 269, 270, 271, 277, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 309, 310, 317, 320, 332, 333], "temporal_avg": 25, "temporal_chunk_index": [82, 84, 86], "temporal_coarsening_method": [108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 264, 310, 336], "temporal_id": 277, "temporal_model": 158, "temporal_model_class": 54, "temporal_model_kwarg": 54, "temporal_or_featur": [140, 332], "temporal_pad": [55, 57, 72, 75, 336], "temporal_solar_model": 55, "temporal_solar_model_dir": 55, "temporal_weight": [108, 134, 135, 226, 301, 303, 310], "temporalextremesonlyloss": 293, "temporari": 326, "temporarili": [92, 96, 98, 285], "temporarydirectori": [317, 318, 320], "tensor": [42, 45, 47, 49, 54, 55, 57, 75, 158, 255, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "tensorboard": [42, 43, 45, 47, 49, 57], "tensorboard_log": [45, 47, 49, 57], "tensorboard_profil": [45, 49, 57], "tensorboardmixin": 42, "tensorflow": [42, 45, 47, 49, 57, 75, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 305, 341, 342], "term": [23, 24, 25, 37, 42, 45, 47, 49, 57, 193, 298, 299, 301, 303, 304, 305], "termin": [42, 45, 47, 49, 57, 339, 340], "tern": 249, "test": [7, 9, 10, 11, 12, 13, 30, 32, 45, 47, 49, 59, 99, 206, 282, 308, 310, 311, 315, 317, 318, 319, 320, 321, 322, 323], "text": [206, 282], "tf": [42, 45, 47, 49, 57, 158, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "tf_gener": [42, 45, 47, 49, 57], "tf_loss": 293, "th": [264, 293, 333], "than": [7, 9, 10, 11, 12, 13, 23, 24, 28, 30, 32, 36, 37, 42, 45, 47, 49, 57, 72, 75, 84, 94, 99, 152, 153, 154, 155, 156, 158, 159, 162, 163, 166, 167, 209, 213, 214, 219, 222, 224, 226, 228, 230, 231, 232, 314, 315, 339], "theanet": 306, "thei": [20, 45, 49, 57, 75, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 147, 148, 150, 206, 221, 256, 282, 309, 310], "them": [55, 144], "theori": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "therefor": [28, 30, 32, 277], "thi": [6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 22, 23, 24, 25, 27, 30, 32, 34, 36, 37, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 66, 72, 73, 75, 84, 85, 92, 94, 96, 98, 99, 100, 101, 103, 104, 105, 108, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 144, 148, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 170, 172, 174, 189, 195, 196, 197, 199, 201, 206, 209, 211, 213, 214, 215, 216, 217, 219, 220, 222, 224, 225, 226, 228, 231, 242, 243, 246, 247, 251, 259, 264, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 285, 286, 287, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 309, 310, 313, 314, 315, 336, 339, 340, 341, 342], "thing": [99, 263], "third": [206, 282], "those": [20, 30, 32, 75, 99, 101, 104, 105, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 148, 150, 153, 154, 155, 156, 162, 163, 166, 167, 189, 219, 244, 264, 309, 310], "though": 198, "thread": [45, 49, 57, 61, 108, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 309, 310], "thread_nam": [122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137], "three": [30, 32, 206, 282], "threshold": [9, 10, 11, 12, 13, 23, 24, 27, 28, 30, 32, 36, 37, 42, 45, 47, 49, 57, 84, 153, 154, 155, 156, 162, 163, 209, 219, 277], "threshold_rang": [45, 49, 57], "thresold": [42, 45, 47, 49, 57], "through": [30, 32, 34, 42, 45, 47, 49, 57, 66, 72, 74, 75, 92, 96, 98, 101, 105, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 153, 154, 155, 156, 159, 162, 163, 166, 172, 182, 189, 195, 197, 199, 201, 211, 213, 214, 219, 222, 224, 228, 246, 251, 264, 309, 310, 336, 339], "throughout": 101, "thu": [12, 23, 24, 28, 30, 32, 37], "ti": [84, 101, 160], "ti_nsrdb": [162, 163], "tif": 19, "time": [7, 9, 10, 11, 12, 13, 19, 24, 25, 27, 30, 32, 34, 36, 37, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 63, 66, 72, 75, 82, 84, 86, 92, 93, 94, 96, 98, 101, 104, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 134, 135, 144, 153, 154, 155, 156, 159, 162, 163, 167, 197, 209, 213, 214, 215, 216, 217, 219, 222, 224, 226, 230, 231, 232, 234, 235, 236, 246, 254, 256, 257, 264, 271, 277, 287, 289, 293, 301, 303, 310, 314, 315, 318, 325, 333, 336, 339, 340], "time_chunk": 84, "time_dict": 287, "time_enhance_mod": [113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132], "time_independ": 101, "time_index": [19, 72, 82, 84, 86, 92, 93, 94, 96, 98, 101, 162, 163, 172, 189, 230, 232, 246, 254, 277], "time_index_step": 94, "time_kei": [82, 84, 86, 92, 93, 96, 98], "time_period": [197, 199, 201], "time_rol": [153, 154, 155, 156, 162, 163, 167], "time_shift": [153, 154, 155, 156, 162, 163, 167], "time_slic": [34, 35, 72, 153, 154, 155, 156, 162, 163, 209, 219], "time_step": [72, 101, 230, 231, 232, 234, 236], "time_window": 24, "timeseri": [94, 304, 305], "timestep": [54, 59, 75, 92, 94, 96, 98, 264, 318], "timezon": 277, "titl": [206, 282], "titlecas": [206, 282], "to_dataarrai": 101, "todo": [6, 20, 27, 45, 49, 52, 57, 85, 91, 95, 102, 107, 121, 147, 152, 153, 158, 162, 163, 198, 212, 220, 263, 264], "togeth": [30, 55, 72, 75, 86, 148, 277, 341], "too": [7, 9, 10, 11, 12, 13, 30, 32, 147, 206, 277, 282], "toolkit": 219, "top": 53, "topo": [41, 45, 47, 49, 57, 59, 222, 224, 226, 228, 314, 315], "topo_hr": 59, "topo_lr": 59, "topographi": [42, 45, 47, 49, 51, 54, 55, 57, 59, 66, 75, 110, 111, 113, 114, 115, 117, 118, 119, 158, 159, 212, 213, 214, 222, 224, 228, 309, 314, 315, 340], "tornado": 339, "total": [7, 9, 10, 11, 12, 13, 30, 32, 42, 43, 45, 47, 49, 57, 72, 75, 108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 153, 264, 272, 273, 294, 310, 333], "total_batch": [42, 43, 45, 47, 49, 57], "track": [310, 323], "trail": [206, 282], "train": [41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 61, 99, 104, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 148, 222, 224, 225, 226, 228, 277, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 309, 310, 314, 315, 336, 339, 340, 341, 342], "train_contain": [108, 110, 111, 113, 114, 115, 117, 118, 119, 309, 310], "train_disc": [45, 49, 57], "train_epoch": [45, 47, 49, 57], "train_gen": [45, 49, 57], "train_queu": [108, 110, 111, 113, 114, 115, 117, 118, 119, 309, 310], "trainabl": 47, "training_featur": 139, "training_weight": [42, 45, 47, 49, 57], "trane": [108, 134, 135, 310], "transfer": [42, 45, 47, 49, 57], "transform": [20, 24, 30, 32, 75, 92, 96, 98, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 166, 190, 192, 264, 309, 310], "transform_kwarg": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 309, 310], "transit": 25, "translat": [206, 282], "transpos": [54, 256, 260, 264], "treat": [94, 277], "treatment": [30, 153], "tree": [193, 213, 214, 215, 216, 217, 285], "trend": [23, 24, 29, 31, 32, 37], "trh": 339, "trhp": 340, "true": [5, 7, 9, 10, 11, 12, 13, 23, 24, 25, 27, 30, 32, 37, 41, 42, 45, 47, 49, 53, 54, 55, 57, 59, 66, 75, 84, 86, 94, 140, 162, 163, 206, 209, 211, 219, 264, 277, 282, 285, 287, 293, 332], "true_hr_rh": 59, "true_hr_temp": 59, "true_hr_topo": 59, "truncat": [28, 30, 206, 282], "truth": [42, 45, 47, 49, 57, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "try": [101, 206, 282, 336], "tslice": 232, "tttttt": 277, "tune": [108, 110, 113, 114, 115, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 310], "tupl": [7, 9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 30, 32, 36, 37, 45, 49, 53, 54, 55, 57, 66, 72, 74, 75, 84, 92, 94, 96, 98, 101, 103, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 158, 160, 162, 163, 166, 167, 189, 195, 197, 199, 201, 206, 209, 211, 219, 222, 224, 226, 228, 233, 234, 235, 236, 243, 257, 258, 267, 268, 270, 271, 277, 282, 285, 309, 310, 313, 314, 315], "turbul": 273, "turn": [298, 304, 336], "tutori": [291, 292, 294, 295, 296, 297, 299, 300, 302, 305], "two": [7, 9, 10, 11, 12, 13, 24, 30, 32, 54, 55, 59, 104, 110, 111, 113, 114, 115, 117, 118, 119, 158, 206, 277, 282, 285, 339], "type": [30, 32, 59, 75, 82, 84, 86, 92, 93, 94, 96, 98, 101, 105, 110, 111, 119, 122, 126, 144, 153, 154, 155, 156, 158, 159, 162, 163, 195, 209, 213, 214, 247, 249, 250, 264, 285, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 309, 330], "typic": [7, 8, 9, 10, 11, 12, 13, 30, 32, 54, 55, 57, 59, 66, 72, 75, 159, 162, 163, 169, 171, 172, 211, 213, 214, 254, 277, 285, 287, 296, 336], "tz": 277, "u": [7, 9, 10, 11, 12, 13, 30, 32, 55, 75, 92, 96, 98, 101, 105, 153, 154, 155, 156, 162, 163, 166, 167, 180, 181, 182, 183, 190, 191, 192, 206, 220, 272, 273, 282, 289, 294, 339, 340, 341], "u_": [92, 96, 98, 153, 154, 155, 156, 162, 163, 166, 167], "u_1000pa": 191, "u_100m": [7, 9, 10, 11, 12, 13, 30, 32, 101, 153, 154, 155, 156, 162, 163, 166, 167, 191, 336], "u_10m": [101, 144, 153, 154, 155, 156, 162, 163, 166, 167], "u_200m": 55, "u_20m": [153, 154, 155, 156, 162, 163, 166, 167], "u_30m": [153, 154, 155, 156, 162, 163, 166, 167], "u_40m": [153, 154, 155, 156, 162, 163, 166, 167], "u_50m": [153, 154, 155, 156, 162, 163, 166, 167], "u_idx": [92, 96, 98], "ukrain": 340, "ultim": [104, 153, 154, 155, 156, 162, 163, 166, 167], "un": [42, 45, 47, 49, 53, 54, 55, 57], "un_norm_out": [41, 42, 45, 47, 49, 51, 53, 54, 55, 59], "un_norm_output": [42, 45, 47, 49, 57], "unbias": 24, "uncas": [206, 282], "uncertainti": 339, "uncertanti": 339, "under": [45, 49, 57, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 339, 340, 341], "underli": [101, 103, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 162, 163, 166, 167, 197, 199, 201, 209, 211, 219, 221, 222, 224, 226, 228, 309, 310, 313, 314, 315], "underscor": [264, 282], "understand": [336, 339], "undetermin": 144, "unfilt": 84, "unflatten": [101, 263], "unicod": [206, 282], "unicodeencodeerror": [206, 282], "unif": 220, "unifi": 147, "union": [34, 66, 84, 101, 103, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 144, 148, 160, 162, 163, 166, 167, 170, 172, 182, 190, 192, 222, 224, 226, 230, 231, 232, 264, 277, 289, 309, 310, 313, 314, 315, 327, 332, 333], "uniqu": [75, 84, 159, 213, 214, 244], "unit": [30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 94, 204, 339, 341], "unix": [75, 82, 84, 86, 159, 213, 214, 249, 264, 277], "unless": [45, 49, 57, 206, 282], "unlik": 339, "unmask": 75, "unmasked_chunk": 75, "unnecessari": [59, 224], "unord": [30, 32], "unpad": [72, 75], "unpadded_slic": 72, "unrealist": [162, 163], "unscal": 94, "until": 285, "untouch": [206, 282], "up": [23, 24, 37, 42, 45, 47, 49, 52, 57, 72, 73, 75, 94, 336, 339, 340, 341, 342], "updat": [18, 42, 45, 47, 49, 55, 57, 94, 101, 107, 108, 134, 135, 158, 160, 195, 197, 199, 201, 204, 219, 225, 226, 264, 310, 339, 340, 341], "update_adversarial_weight": [45, 49, 57], "update_bound": [45, 49, 57], "update_d": 101, "update_dset": 94, "update_fil": 18, "update_frac": [45, 49, 57], "update_hr_data": 211, "update_loss_detail": [42, 45, 47, 49, 57], "update_lr_data": 211, "update_optim": [45, 47, 49, 57], "update_record": 310, "update_weight": [108, 134, 135, 226, 310], "upon": 61, "upper": [7, 9, 10, 11, 12, 13, 30, 32, 45, 49, 57, 206, 235, 282], "uppercas": [206, 282], "upsampl": 141, "urban": 339, "url": 286, "us": [7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 32, 34, 35, 36, 37, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 66, 72, 75, 76, 82, 84, 86, 92, 93, 94, 96, 98, 99, 101, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 144, 148, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 170, 172, 182, 185, 189, 195, 197, 199, 201, 202, 203, 206, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 226, 227, 228, 232, 233, 234, 235, 236, 237, 242, 243, 246, 247, 251, 253, 258, 263, 264, 266, 267, 268, 270, 271, 275, 276, 277, 282, 284, 285, 286, 287, 289, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 309, 310, 314, 315, 326, 336, 339, 340, 341, 342], "usabl": [206, 282], "usag": [105, 158, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 338], "usaid": 341, "user": [144, 209, 219, 285, 336], "usernam": [94, 285], "usual": [7, 9, 10, 11, 12, 13, 24, 28, 30, 32, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 108, 110, 111, 113, 114, 115, 117, 118, 119, 150, 153, 154, 155, 156, 162, 163, 166, 195, 197, 199, 201, 206, 209, 211, 219, 222, 226, 309, 310, 314, 315], "utc": 277, "utf": [206, 282], "util": [1, 8, 23, 24, 30, 32, 42, 45, 47, 49, 57, 275, 276, 277], "uv": [66, 92, 96, 98], "v": [7, 8, 9, 10, 11, 12, 13, 30, 32, 45, 49, 55, 57, 75, 92, 96, 98, 101, 158, 160, 166, 183, 184, 185, 190, 192, 272, 273, 294, 328, 336], "v0": 341, "v_100m": [7, 9, 10, 11, 12, 13, 30, 32], "v_10m": 101, "v_200m": 55, "v_idx": [92, 96, 98], "val": [42, 45, 47, 49, 57, 99, 101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 242, 250, 258, 285, 309, 310], "val_": [45, 47, 57], "val_contain": [108, 110, 111, 113, 114, 115, 117, 118, 119, 309, 310], "val_queu": [108, 110, 111, 113, 114, 115, 117, 118, 119, 309, 310], "valbatchqueuedc": [108, 112, 310], "valid": [9, 10, 11, 12, 13, 42, 45, 47, 49, 57, 99, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 206, 264, 282, 284, 309, 310, 339], "validation_loss_disc": [42, 45, 47, 49, 57], "validation_loss_gen": [42, 45, 47, 49, 57], "valqueueclass": 112, "valu": [7, 9, 10, 11, 12, 13, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 32, 36, 37, 41, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 59, 72, 75, 94, 101, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 158, 160, 162, 163, 166, 167, 182, 185, 193, 204, 206, 209, 213, 214, 215, 216, 217, 219, 224, 228, 264, 267, 268, 270, 271, 277, 282, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 310, 327, 336], "valuabl": 339, "valueerror": [108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 206, 282, 309, 310], "var": [224, 228, 243, 268, 269, 270, 271, 274, 287], "var_arrai": 289, "vari": [110, 111, 119, 309], "variabl": [42, 45, 47, 49, 57, 59, 75, 94, 101, 104, 176, 177, 178, 179, 268, 269, 270, 271, 274, 277, 287, 289, 336, 339, 340], "variant": 339, "variou": [93, 222, 226, 314, 315], "ve": 99, "veg_ssp585": 336, "vel": 132, "veloc": [128, 130, 193, 270], "verbos": [41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 144, 213, 214, 215, 216, 217, 284, 336], "veri": [23, 24, 37, 277, 336], "verifi": [336, 339], "version": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59, 94, 104, 206, 253, 282, 336, 338, 341], "version_record": [41, 45, 47, 49, 51, 53, 54, 55, 57, 59], "vertic": 206, "via": [16, 69, 89, 206, 280, 282, 284, 285, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 336, 339, 340], "view": [45, 47, 49, 57, 158, 160, 174, 339, 340, 341], "virtual": 105, "volum": [20, 72, 75], "vortex": [12, 17, 19], "vortic": 268, "vtype": 250, "w": [7, 9, 10, 11, 12, 13, 28, 30, 94, 144, 162, 163, 190, 192, 193, 277, 285], "w_delta_temp": 59, "w_delta_topo": 59, "wa": [30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 277, 285, 339, 340, 341], "wai": [30, 32, 45, 49, 57, 101, 222, 277, 314, 336, 339, 340], "walk": 339, "walltim": [16, 69, 89, 280, 284, 285, 336], "want": [99, 104, 108, 144, 153, 154, 155, 156, 162, 163, 166, 167, 226, 260, 310, 336, 339, 340, 341, 342], "warn": [37, 101, 159, 213, 214, 287], "warrant": [42, 45, 47, 49, 57], "wavenumb": [273, 274], "wd": [190, 192], "wd_true": [317, 320], "we": [20, 24, 30, 45, 49, 57, 72, 75, 84, 99, 101, 104, 108, 110, 111, 119, 124, 135, 150, 152, 153, 154, 155, 156, 158, 162, 163, 166, 167, 189, 198, 209, 219, 220, 224, 226, 251, 260, 264, 268, 270, 271, 309, 310, 315, 336, 339, 340], "weather": 339, "weigh": [110, 111, 119, 309], "weight": [42, 45, 47, 49, 57, 59, 101, 107, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 148, 150, 225, 226, 235, 236, 293, 298, 301, 303, 304, 309, 310], "weight_gen_adv": [45, 49, 57], "weird": [9, 10, 11, 12, 13, 27, 30, 32, 171], "well": [7, 9, 10, 11, 12, 13, 30, 32, 101, 104, 153, 154, 155, 156, 162, 163, 206, 282, 303, 336], "were": [7, 9, 10, 11, 12, 13, 24, 30, 32, 41, 42, 45, 47, 49, 53, 54, 55, 57, 264, 336], "west_east": [101, 104, 144, 159, 206, 213, 214, 257, 264], "weto": 341, "what": [159, 336, 339], "whatev": [55, 57], "when": [7, 9, 10, 11, 12, 13, 20, 30, 32, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 72, 75, 84, 92, 94, 96, 98, 101, 103, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 162, 163, 166, 167, 195, 197, 199, 201, 206, 209, 211, 219, 222, 224, 226, 228, 264, 269, 272, 273, 274, 277, 282, 287, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305, 309, 310, 313, 314, 315, 325, 336, 339], "where": [7, 9, 10, 11, 12, 13, 15, 16, 22, 23, 24, 25, 30, 32, 36, 37, 42, 45, 47, 49, 54, 57, 59, 68, 69, 72, 75, 84, 88, 89, 113, 114, 115, 117, 118, 122, 126, 127, 128, 129, 130, 131, 132, 162, 163, 169, 171, 206, 224, 231, 258, 264, 269, 272, 273, 274, 277, 279, 280, 282, 284, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 336], "whether": [9, 10, 11, 12, 13, 18, 19, 27, 30, 32, 42, 45, 47, 49, 57, 66, 75, 84, 86, 92, 96, 98, 101, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 158, 206, 209, 213, 214, 267, 268, 270, 271, 282, 284, 287, 309, 310, 325], "which": [7, 9, 10, 11, 12, 13, 30, 32, 33, 34, 41, 42, 45, 47, 49, 51, 53, 54, 55, 57, 59, 63, 66, 72, 75, 84, 90, 92, 96, 98, 99, 101, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 144, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 172, 180, 182, 183, 193, 197, 199, 200, 201, 206, 207, 209, 211, 213, 214, 215, 216, 217, 219, 221, 222, 224, 225, 226, 228, 245, 246, 247, 264, 277, 282, 285, 287, 293, 309, 310, 313, 314, 315, 323, 332, 333, 339, 340], "while": [24, 30, 32, 104, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 264, 309, 310], "whitespac": [206, 282], "whole": [285, 339], "whose": [206, 282], "width": [66, 72, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 206, 282], "wiki": 294, "wikipedia": 294, "wildcard": [153, 154, 155, 156, 162, 163, 166, 167], "wildfir": 339, "wind": [7, 9, 10, 11, 12, 13, 30, 32, 55, 75, 92, 96, 98, 163, 180, 181, 182, 183, 184, 185, 193, 219, 272, 273, 287, 289, 294, 336, 339, 340, 341], "wind_spe": [153, 154, 155, 156, 162, 163, 166, 167], "windcc": 156, "winddirect": [7, 9, 10, 11, 12, 13, 30, 32, 66, 92, 96, 98, 166, 190, 192, 268, 270, 271], "winddirection_100m": [317, 320, 336], "windir": [317, 320], "window": [24, 30, 32, 153, 234], "window_cent": 30, "window_mask": [30, 32], "window_s": [30, 32], "windshearformula": [182, 185], "windspe": [7, 9, 10, 11, 12, 13, 19, 30, 32, 66, 75, 92, 96, 98, 101, 144, 153, 154, 155, 156, 162, 163, 166, 167, 180, 183, 190, 192, 193, 317, 320, 339], "windspeed_100m": [317, 320, 336], "wise": 277, "within": [9, 10, 11, 12, 13, 22, 25, 27, 30, 32, 49, 84, 94, 108, 206, 282, 339], "without": [9, 10, 11, 12, 13, 19, 23, 27, 30, 32, 94, 101, 112, 131, 171, 336], "won": 231, "word": [206, 282, 285, 339, 340], "work": [55, 59, 104, 113, 114, 115, 117, 118, 121, 126, 127, 128, 129, 130, 131, 132, 206, 208, 222, 264, 277, 282, 285, 314, 339, 340, 341, 342], "worker": [9, 10, 11, 12, 13, 18, 23, 24, 30, 32, 37, 66, 75, 84, 92, 96, 98, 122, 124, 144, 211, 213, 214, 287], "workspac": 17, "worldwid": [339, 340, 341], "would": [24, 28, 30, 32, 42, 45, 47, 49, 57, 104, 153, 198, 220, 336], "wouldn": 30, "wrangl": [144, 153, 154, 155, 156, 162, 163], "wrap": [61, 101, 103, 108, 110, 111, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 144, 148, 150, 153, 154, 155, 156, 162, 163, 166, 167, 189, 197, 199, 201, 209, 211, 219, 222, 224, 226, 228, 251, 309, 310, 313, 314, 315], "wrapper": [61, 101, 104, 197, 328, 334], "wrf": [159, 173, 208, 213, 214, 336], "writabl": 94, "write": [9, 10, 11, 12, 13, 18, 19, 20, 30, 32, 42, 43, 45, 47, 49, 57, 66, 75, 82, 84, 86, 90, 92, 93, 94, 96, 98, 144, 150, 152, 213, 214, 277, 287, 318, 325], "write_chunk": 144, "write_data": [19, 82, 84, 86, 92, 93, 96, 98], "write_dataset": 94, "write_h5": 144, "write_mean": 94, "write_netcdf": [144, 213, 214], "write_netcdf_chunk": 144, "write_output": [9, 10, 11, 12, 13, 30, 32, 92, 96, 98], "write_profil": 94, "write_statu": [84, 86], "written": [12, 84, 94, 99, 144, 213, 214, 219, 264, 285, 287], "wrong": [30, 32], "ws_true": [317, 320], "wtk": [7, 8, 9, 10, 11, 12, 13, 30, 32, 110, 111, 113, 114, 115, 117, 118, 119, 159, 208, 211, 213, 214, 224, 339, 340], "www": [182, 185, 291, 292, 294, 295, 296, 297, 299, 300, 302, 305], "x": [59, 206, 282], "x1": [291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "x2": [291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "x_rang": [273, 274], "xarrai": [19, 86, 100, 101, 102, 103, 144, 147, 170, 195, 197, 198, 199, 201, 204, 219], "xd": 104, "xml": 174, "xmlcharrefreplac": [206, 282], "xr": [24, 101, 103, 104, 144, 148, 153, 154, 155, 156, 158, 162, 163, 167, 172, 195, 197, 199, 201, 204, 211, 213, 214, 215, 216, 217, 219, 243, 256, 287, 289, 313, 329, 334], "y": [59, 206, 269, 272, 273, 274, 282], "y_pred": [291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "y_true": [291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "year": [7, 9, 10, 11, 12, 13, 22, 24, 30, 32, 108, 226, 286, 287, 310, 339], "yearli": 287, "yearly_file_pattern": 287, "yet": [42, 45, 47, 49, 57, 75, 219], "yml": [339, 340], "you": [42, 45, 47, 49, 57, 75, 99, 104, 144, 264, 286, 336, 339, 340, 341, 342], "your": [66, 75, 285, 339, 340, 341, 342], "z": [193, 287], "z_fg": 30, "z_gf": [28, 30], "zenith": [175, 189, 277], "zenodo": 341, "zero": [7, 9, 10, 11, 12, 13, 23, 24, 28, 30, 32, 37, 57, 59, 72, 75, 82, 84, 86, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 140, 193, 206, 277, 282, 298, 304, 332], "zero_precipitation_r": [28, 30], "zero_r": 30, "zero_rate_threshold": [23, 30], "zeroratemixin": 30, "zeroth": [153, 154, 155, 156, 162, 163, 167], "zfill": [206, 282], "zg": 287, "zonal": [273, 274]}, "titles": ["sup3r", "sup3r.batch", "sup3r.batch.batch_cli", "sup3r.bias", "sup3r.bias.abstract", "sup3r.bias.abstract.AbstractBiasCorrection", "sup3r.bias.base", "sup3r.bias.base.DataRetrievalBase", "sup3r.bias.bias_calc", "sup3r.bias.bias_calc.LinearCorrection", "sup3r.bias.bias_calc.MonthlyLinearCorrection", "sup3r.bias.bias_calc.MonthlyScalarCorrection", "sup3r.bias.bias_calc.ScalarCorrection", "sup3r.bias.bias_calc.SkillAssessment", "sup3r.bias.bias_calc_cli", "sup3r.bias.bias_calc_cli.kickoff_local_job", "sup3r.bias.bias_calc_cli.kickoff_slurm_job", "sup3r.bias.bias_calc_vortex", "sup3r.bias.bias_calc_vortex.BiasCorrectUpdate", "sup3r.bias.bias_calc_vortex.VortexMeanPrepper", "sup3r.bias.bias_transforms", "sup3r.bias.bias_transforms.global_linear_bc", "sup3r.bias.bias_transforms.local_linear_bc", "sup3r.bias.bias_transforms.local_presrat_bc", "sup3r.bias.bias_transforms.local_qdm_bc", "sup3r.bias.bias_transforms.monthly_local_linear_bc", "sup3r.bias.mixins", "sup3r.bias.mixins.FillAndSmoothMixin", "sup3r.bias.mixins.ZeroRateMixin", "sup3r.bias.presrat", "sup3r.bias.presrat.PresRat", "sup3r.bias.qdm", "sup3r.bias.qdm.QuantileDeltaMappingCorrection", "sup3r.bias.utilities", "sup3r.bias.utilities.bias_correct_feature", "sup3r.bias.utilities.bias_correct_features", "sup3r.bias.utilities.lin_bc", "sup3r.bias.utilities.qdm_bc", "sup3r.cli", "sup3r.models", "sup3r.models.abstract", "sup3r.models.abstract.AbstractInterface", "sup3r.models.abstract.AbstractSingleModel", "sup3r.models.abstract.TensorboardMixIn", "sup3r.models.base", "sup3r.models.base.Sup3rGan", "sup3r.models.conditional", "sup3r.models.conditional.Sup3rCondMom", "sup3r.models.dc", "sup3r.models.dc.Sup3rGanDC", "sup3r.models.linear", "sup3r.models.linear.LinearInterp", "sup3r.models.multi_step", "sup3r.models.multi_step.MultiStepGan", "sup3r.models.multi_step.MultiStepSurfaceMetGan", "sup3r.models.multi_step.SolarMultiStepGan", "sup3r.models.solar_cc", "sup3r.models.solar_cc.SolarCC", "sup3r.models.surface", "sup3r.models.surface.SurfaceSpatialMetModel", "sup3r.models.utilities", "sup3r.models.utilities.TrainingSession", "sup3r.models.utilities.get_optimizer_class", "sup3r.models.utilities.st_interp", "sup3r.pipeline", "sup3r.pipeline.forward_pass", "sup3r.pipeline.forward_pass.ForwardPass", "sup3r.pipeline.forward_pass_cli", "sup3r.pipeline.forward_pass_cli.kickoff_local_job", "sup3r.pipeline.forward_pass_cli.kickoff_slurm_job", "sup3r.pipeline.pipeline_cli", "sup3r.pipeline.slicer", "sup3r.pipeline.slicer.ForwardPassSlicer", "sup3r.pipeline.strategy", "sup3r.pipeline.strategy.ForwardPassChunk", "sup3r.pipeline.strategy.ForwardPassStrategy", "sup3r.pipeline.utilities", "sup3r.pipeline.utilities.get_chunk_slices", "sup3r.pipeline.utilities.get_model", "sup3r.postprocessing", "sup3r.postprocessing.collectors", "sup3r.postprocessing.collectors.base", "sup3r.postprocessing.collectors.base.BaseCollector", "sup3r.postprocessing.collectors.h5", "sup3r.postprocessing.collectors.h5.CollectorH5", "sup3r.postprocessing.collectors.nc", "sup3r.postprocessing.collectors.nc.CollectorNC", "sup3r.postprocessing.data_collect_cli", "sup3r.postprocessing.data_collect_cli.kickoff_local_job", "sup3r.postprocessing.data_collect_cli.kickoff_slurm_job", "sup3r.postprocessing.writers", "sup3r.postprocessing.writers.base", "sup3r.postprocessing.writers.base.OutputHandler", "sup3r.postprocessing.writers.base.OutputMixin", "sup3r.postprocessing.writers.base.RexOutputs", "sup3r.postprocessing.writers.h5", "sup3r.postprocessing.writers.h5.OutputHandlerH5", "sup3r.postprocessing.writers.nc", "sup3r.postprocessing.writers.nc.OutputHandlerNC", "sup3r.preprocessing", "sup3r.preprocessing.accessor", "sup3r.preprocessing.accessor.Sup3rX", "sup3r.preprocessing.base", "sup3r.preprocessing.base.Container", "sup3r.preprocessing.base.Sup3rDataset", "sup3r.preprocessing.base.Sup3rMeta", "sup3r.preprocessing.batch_handlers", "sup3r.preprocessing.batch_handlers.dc", "sup3r.preprocessing.batch_handlers.dc.BatchHandlerDC", "sup3r.preprocessing.batch_handlers.factory", "sup3r.preprocessing.batch_handlers.factory.BatchHandler", "sup3r.preprocessing.batch_handlers.factory.BatchHandlerCC", "sup3r.preprocessing.batch_handlers.factory.BatchHandlerFactory", "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1", "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom1SF", "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2", "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SF", "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2Sep", "sup3r.preprocessing.batch_handlers.factory.BatchHandlerMom2SepSF", "sup3r.preprocessing.batch_handlers.factory.DualBatchHandler", "sup3r.preprocessing.batch_queues", "sup3r.preprocessing.batch_queues.abstract", "sup3r.preprocessing.batch_queues.abstract.AbstractBatchQueue", "sup3r.preprocessing.batch_queues.base", "sup3r.preprocessing.batch_queues.base.SingleBatchQueue", "sup3r.preprocessing.batch_queues.conditional", "sup3r.preprocessing.batch_queues.conditional.ConditionalBatchQueue", "sup3r.preprocessing.batch_queues.conditional.QueueMom1", "sup3r.preprocessing.batch_queues.conditional.QueueMom1SF", "sup3r.preprocessing.batch_queues.conditional.QueueMom2", "sup3r.preprocessing.batch_queues.conditional.QueueMom2SF", "sup3r.preprocessing.batch_queues.conditional.QueueMom2Sep", "sup3r.preprocessing.batch_queues.conditional.QueueMom2SepSF", "sup3r.preprocessing.batch_queues.dc", "sup3r.preprocessing.batch_queues.dc.BatchQueueDC", "sup3r.preprocessing.batch_queues.dc.ValBatchQueueDC", "sup3r.preprocessing.batch_queues.dual", "sup3r.preprocessing.batch_queues.dual.DualBatchQueue", "sup3r.preprocessing.batch_queues.utilities", "sup3r.preprocessing.batch_queues.utilities.smooth_data", "sup3r.preprocessing.batch_queues.utilities.spatial_simple_enhancing", "sup3r.preprocessing.batch_queues.utilities.temporal_simple_enhancing", "sup3r.preprocessing.cachers", "sup3r.preprocessing.cachers.base", "sup3r.preprocessing.cachers.base.Cacher", "sup3r.preprocessing.cachers.utilities", "sup3r.preprocessing.collections", "sup3r.preprocessing.collections.base", "sup3r.preprocessing.collections.base.Collection", "sup3r.preprocessing.collections.stats", "sup3r.preprocessing.collections.stats.StatsCollection", "sup3r.preprocessing.data_handlers", "sup3r.preprocessing.data_handlers.base", "sup3r.preprocessing.data_handlers.base.DailyDataHandler", "sup3r.preprocessing.data_handlers.base.DataHandler", "sup3r.preprocessing.data_handlers.base.DataHandlerH5SolarCC", "sup3r.preprocessing.data_handlers.base.DataHandlerH5WindCC", "sup3r.preprocessing.data_handlers.exo", "sup3r.preprocessing.data_handlers.exo.ExoData", "sup3r.preprocessing.data_handlers.exo.ExoDataHandler", "sup3r.preprocessing.data_handlers.exo.SingleExoDataStep", "sup3r.preprocessing.data_handlers.nc_cc", "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCC", "sup3r.preprocessing.data_handlers.nc_cc.DataHandlerNCforCCwithPowerLaw", "sup3r.preprocessing.derivers", "sup3r.preprocessing.derivers.base", "sup3r.preprocessing.derivers.base.BaseDeriver", "sup3r.preprocessing.derivers.base.Deriver", "sup3r.preprocessing.derivers.methods", "sup3r.preprocessing.derivers.methods.ClearSkyRatio", "sup3r.preprocessing.derivers.methods.ClearSkyRatioCC", "sup3r.preprocessing.derivers.methods.CloudMask", "sup3r.preprocessing.derivers.methods.DerivedFeature", "sup3r.preprocessing.derivers.methods.PressureWRF", "sup3r.preprocessing.derivers.methods.SurfaceRH", "sup3r.preprocessing.derivers.methods.Sza", "sup3r.preprocessing.derivers.methods.Tas", "sup3r.preprocessing.derivers.methods.TasMax", "sup3r.preprocessing.derivers.methods.TasMin", "sup3r.preprocessing.derivers.methods.TempNCforCC", "sup3r.preprocessing.derivers.methods.USolar", "sup3r.preprocessing.derivers.methods.UWind", "sup3r.preprocessing.derivers.methods.UWindPowerLaw", "sup3r.preprocessing.derivers.methods.VSolar", "sup3r.preprocessing.derivers.methods.VWind", "sup3r.preprocessing.derivers.methods.VWindPowerLaw", "sup3r.preprocessing.derivers.methods.Winddirection", "sup3r.preprocessing.derivers.methods.Windspeed", "sup3r.preprocessing.derivers.utilities", "sup3r.preprocessing.derivers.utilities.SolarZenith", "sup3r.preprocessing.derivers.utilities.invert_uv", "sup3r.preprocessing.derivers.utilities.parse_feature", "sup3r.preprocessing.derivers.utilities.transform_rotate_wind", "sup3r.preprocessing.derivers.utilities.windspeed_log_law", "sup3r.preprocessing.loaders", "sup3r.preprocessing.loaders.Loader", "sup3r.preprocessing.loaders.base", "sup3r.preprocessing.loaders.base.BaseLoader", "sup3r.preprocessing.loaders.h5", "sup3r.preprocessing.loaders.h5.LoaderH5", "sup3r.preprocessing.loaders.nc", "sup3r.preprocessing.loaders.nc.LoaderNC", "sup3r.preprocessing.loaders.utilities", "sup3r.preprocessing.loaders.utilities.standardize_names", "sup3r.preprocessing.loaders.utilities.standardize_values", "sup3r.preprocessing.names", "sup3r.preprocessing.names.Dimension", "sup3r.preprocessing.rasterizers", "sup3r.preprocessing.rasterizers.base", "sup3r.preprocessing.rasterizers.base.BaseRasterizer", "sup3r.preprocessing.rasterizers.dual", "sup3r.preprocessing.rasterizers.dual.DualRasterizer", "sup3r.preprocessing.rasterizers.exo", "sup3r.preprocessing.rasterizers.exo.BaseExoRasterizer", "sup3r.preprocessing.rasterizers.exo.ExoRasterizer", "sup3r.preprocessing.rasterizers.exo.ExoRasterizerH5", "sup3r.preprocessing.rasterizers.exo.ExoRasterizerNC", "sup3r.preprocessing.rasterizers.exo.SzaRasterizer", "sup3r.preprocessing.rasterizers.extended", "sup3r.preprocessing.rasterizers.extended.Rasterizer", "sup3r.preprocessing.samplers", "sup3r.preprocessing.samplers.base", "sup3r.preprocessing.samplers.base.Sampler", "sup3r.preprocessing.samplers.cc", "sup3r.preprocessing.samplers.cc.DualSamplerCC", "sup3r.preprocessing.samplers.dc", "sup3r.preprocessing.samplers.dc.SamplerDC", "sup3r.preprocessing.samplers.dual", "sup3r.preprocessing.samplers.dual.DualSampler", "sup3r.preprocessing.samplers.utilities", "sup3r.preprocessing.samplers.utilities.daily_time_sampler", "sup3r.preprocessing.samplers.utilities.nsrdb_reduce_daily_data", "sup3r.preprocessing.samplers.utilities.nsrdb_sub_daily_sampler", "sup3r.preprocessing.samplers.utilities.uniform_box_sampler", "sup3r.preprocessing.samplers.utilities.uniform_time_sampler", "sup3r.preprocessing.samplers.utilities.weighted_box_sampler", "sup3r.preprocessing.samplers.utilities.weighted_time_sampler", "sup3r.preprocessing.utilities", "sup3r.preprocessing.utilities.check_signatures", "sup3r.preprocessing.utilities.composite_info", "sup3r.preprocessing.utilities.composite_sig", "sup3r.preprocessing.utilities.compute_if_dask", "sup3r.preprocessing.utilities.contains_ellipsis", "sup3r.preprocessing.utilities.dims_array_tuple", "sup3r.preprocessing.utilities.expand_paths", "sup3r.preprocessing.utilities.get_class_kwargs", "sup3r.preprocessing.utilities.get_date_range_kwargs", "sup3r.preprocessing.utilities.get_input_handler_class", "sup3r.preprocessing.utilities.get_obj_params", "sup3r.preprocessing.utilities.get_source_type", "sup3r.preprocessing.utilities.is_type_of", "sup3r.preprocessing.utilities.log_args", "sup3r.preprocessing.utilities.lower_names", "sup3r.preprocessing.utilities.lowered", "sup3r.preprocessing.utilities.make_time_index_from_kws", "sup3r.preprocessing.utilities.numpy_if_tensor", "sup3r.preprocessing.utilities.ordered_array", "sup3r.preprocessing.utilities.ordered_dims", "sup3r.preprocessing.utilities.parse_ellipsis", "sup3r.preprocessing.utilities.parse_features", "sup3r.preprocessing.utilities.parse_keys", "sup3r.preprocessing.utilities.parse_to_list", "sup3r.qa", "sup3r.qa.qa", "sup3r.qa.qa.Sup3rQa", "sup3r.qa.qa_cli", "sup3r.qa.utilities", "sup3r.qa.utilities.continuous_dist", "sup3r.qa.utilities.direct_dist", "sup3r.qa.utilities.frequency_spectrum", "sup3r.qa.utilities.gradient_dist", "sup3r.qa.utilities.time_derivative_dist", "sup3r.qa.utilities.tke_frequency_spectrum", "sup3r.qa.utilities.tke_wavenumber_spectrum", "sup3r.qa.utilities.wavenumber_spectrum", "sup3r.solar", "sup3r.solar.solar", "sup3r.solar.solar.Solar", "sup3r.solar.solar_cli", "sup3r.solar.solar_cli.kickoff_local_job", "sup3r.solar.solar_cli.kickoff_slurm_job", "sup3r.utilities", "sup3r.utilities.ModuleName", "sup3r.utilities.cli", "sup3r.utilities.cli.BaseCLI", "sup3r.utilities.cli.SlurmManager", "sup3r.utilities.era_downloader", "sup3r.utilities.era_downloader.EraDownloader", "sup3r.utilities.interpolation", "sup3r.utilities.interpolation.Interpolator", "sup3r.utilities.loss_metrics", "sup3r.utilities.loss_metrics.CoarseMseLoss", "sup3r.utilities.loss_metrics.ExpLoss", "sup3r.utilities.loss_metrics.LowResLoss", "sup3r.utilities.loss_metrics.MaterialDerivativeLoss", "sup3r.utilities.loss_metrics.MmdLoss", "sup3r.utilities.loss_metrics.MmdMseLoss", "sup3r.utilities.loss_metrics.MseExpLoss", "sup3r.utilities.loss_metrics.SpatialExtremesLoss", "sup3r.utilities.loss_metrics.SpatialExtremesOnlyLoss", "sup3r.utilities.loss_metrics.SpatialFftOnlyLoss", "sup3r.utilities.loss_metrics.SpatiotemporalExtremesLoss", "sup3r.utilities.loss_metrics.SpatiotemporalFftOnlyLoss", "sup3r.utilities.loss_metrics.StExtremesFftLoss", "sup3r.utilities.loss_metrics.TemporalExtremesLoss", "sup3r.utilities.loss_metrics.TemporalExtremesOnlyLoss", "sup3r.utilities.loss_metrics.gaussian_kernel", "sup3r.utilities.pytest", "sup3r.utilities.pytest.helpers", "sup3r.utilities.pytest.helpers.BatchHandlerTesterCC", "sup3r.utilities.pytest.helpers.BatchHandlerTesterDC", "sup3r.utilities.pytest.helpers.BatchHandlerTesterFactory", "sup3r.utilities.pytest.helpers.DualSamplerTesterCC", "sup3r.utilities.pytest.helpers.DummyData", "sup3r.utilities.pytest.helpers.DummySampler", "sup3r.utilities.pytest.helpers.SamplerTester", "sup3r.utilities.pytest.helpers.SamplerTesterDC", "sup3r.utilities.pytest.helpers.make_collect_chunks", "sup3r.utilities.pytest.helpers.make_fake_cs_ratio_files", "sup3r.utilities.pytest.helpers.make_fake_dset", "sup3r.utilities.pytest.helpers.make_fake_h5_chunks", "sup3r.utilities.pytest.helpers.make_fake_nc_file", "sup3r.utilities.pytest.helpers.make_fake_tif", "sup3r.utilities.pytest.helpers.test_sampler_factory", "sup3r.utilities.utilities", "sup3r.utilities.utilities.Timer", "sup3r.utilities.utilities.generate_random_string", "sup3r.utilities.utilities.nn_fill_array", "sup3r.utilities.utilities.pd_date_range", "sup3r.utilities.utilities.preprocess_datasets", "sup3r.utilities.utilities.safe_cast", "sup3r.utilities.utilities.safe_serialize", "sup3r.utilities.utilities.spatial_coarsening", "sup3r.utilities.utilities.temporal_coarsening", "sup3r.utilities.utilities.xr_open_mfdataset", "Command Line Interfaces (CLIs)", "sup3r", "&lt;no title&gt;", "Examples", "Sup3rCC Examples", "Sup3rWind Examples", "Welcome to Sup3r!", "Installation", "Installation and Usage"], "titleterms": {"1": [341, 342], "2": [341, 342], "abstract": [4, 5, 40, 41, 42, 43, 121, 122], "abstractbatchqueu": 122, "abstractbiascorrect": 5, "abstractinterfac": 41, "abstractsinglemodel": 42, "access": [339, 340], "accessor": [100, 101], "acknowledg": [339, 340, 341], "analyst": [341, 342], "base": [6, 7, 44, 45, 81, 82, 91, 92, 93, 94, 102, 103, 104, 105, 123, 124, 143, 144, 147, 148, 152, 153, 154, 155, 156, 165, 166, 167, 196, 197, 208, 209, 221, 222], "basecli": 284, "basecollector": 82, "basederiv": 166, "baseexoraster": 213, "baseload": 197, "baseraster": 209, "batch": [1, 2, 336], "batch_cli": 2, "batch_handl": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "batch_queu": [120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "batchhandl": 110, "batchhandlercc": 111, "batchhandlerdc": 108, "batchhandlerfactori": 112, "batchhandlermom1": 113, "batchhandlermom1sf": 114, "batchhandlermom2": 115, "batchhandlermom2sep": 117, "batchhandlermom2sepsf": 118, "batchhandlermom2sf": 116, "batchhandlertestercc": 309, "batchhandlertesterdc": 310, "batchhandlertesterfactori": 311, "batchqueuedc": 134, "bia": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 336], "bias_calc": [8, 9, 10, 11, 12, 13], "bias_calc_cli": [14, 15, 16], "bias_calc_vortex": [17, 18, 19], "bias_correct_featur": [34, 35], "bias_transform": [20, 21, 22, 23, 24, 25], "biascorrectupd": 18, "cacher": [142, 143, 144, 145], "calc": 336, "cc": [223, 224], "check_signatur": 238, "citat": [339, 340, 341], "clearskyratio": 169, "clearskyratiocc": 170, "cli": [38, 283, 284, 285, 335], "clone": [341, 342], "cloudmask": 171, "coarsemseloss": 291, "collect": [146, 147, 148, 149, 150, 336], "collector": [80, 81, 82, 83, 84, 85, 86], "collectorh5": 84, "collectornc": 86, "command": 335, "composite_info": 239, "composite_sig": 240, "compute_if_dask": 241, "condit": [46, 47, 125, 126, 127, 128, 129, 130, 131, 132], "conditionalbatchqueu": 126, "contain": 103, "contains_ellipsi": 242, "continuous_dist": 267, "daily_time_sampl": 230, "dailydatahandl": 153, "data": [336, 339, 340], "data_collect_cli": [87, 88, 89], "data_handl": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "datahandl": 154, "datahandlerh5solarcc": 155, "datahandlerh5windcc": 156, "datahandlerncforcc": 162, "datahandlerncforccwithpowerlaw": 163, "dataretrievalbas": 7, "dc": [48, 49, 107, 108, 133, 134, 135, 225, 226], "deriv": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "derivedfeatur": 172, "develop": [341, 342], "dimens": 206, "dims_array_tupl": 243, "direct_dist": 268, "directori": 339, "dual": [136, 137, 210, 211, 227, 228], "dualbatchhandl": 119, "dualbatchqueu": 137, "dualraster": 211, "dualsampl": 228, "dualsamplercc": 224, "dualsamplertestercc": 312, "dummydata": 313, "dummysampl": 314, "era_download": [286, 287], "eradownload": 287, "exampl": [338, 339, 340], "exo": [157, 158, 159, 160, 212, 213, 214, 215, 216, 217], "exodata": 158, "exodatahandl": 159, "exoraster": 214, "exorasterizerh5": 215, "exorasterizernc": 216, "expand_path": 244, "exploss": 292, "extend": [218, 219], "factori": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "fillandsmoothmixin": 27, "forward": 336, "forward_pass": [65, 66], "forward_pass_cli": [67, 68, 69], "forwardpass": 66, "forwardpasschunk": 74, "forwardpassslic": 72, "forwardpassstrategi": 75, "frequency_spectrum": 269, "from": [341, 342], "gaussian_kernel": 306, "generate_random_str": 326, "get_chunk_slic": 77, "get_class_kwarg": 245, "get_date_range_kwarg": 246, "get_input_handler_class": 247, "get_model": 78, "get_obj_param": 248, "get_optimizer_class": 62, "get_source_typ": 249, "global_linear_bc": 21, "gradient_dist": 270, "h5": [83, 84, 95, 96, 198, 199], "helper": [308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323], "instal": [341, 342, 343], "interfac": 335, "interpol": [288, 289], "invert_uv": 190, "is_type_of": 250, "kickoff_local_job": [15, 68, 88, 279], "kickoff_slurm_job": [16, 69, 89, 280], "lin_bc": 36, "line": 335, "linear": [50, 51], "linearcorrect": 9, "linearinterp": 51, "loader": [194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "loaderh5": 199, "loadernc": 201, "local_linear_bc": 22, "local_presrat_bc": 23, "local_qdm_bc": 24, "log_arg": 251, "loss_metr": [290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "lower": 253, "lower_nam": 252, "lowresloss": 293, "make_collect_chunk": 317, "make_fake_cs_ratio_fil": 318, "make_fake_dset": 319, "make_fake_h5_chunk": 320, "make_fake_nc_fil": 321, "make_fake_tif": 322, "make_time_index_from_kw": 254, "materialderivativeloss": 294, "method": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "mixin": [26, 27, 28], "mmdloss": 295, "mmdmseloss": 296, "model": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 339, 340], "modulenam": 282, "monthly_local_linear_bc": 25, "monthlylinearcorrect": 10, "monthlyscalarcorrect": 11, "mseexploss": 297, "multi_step": [52, 53, 54, 55], "multistepgan": 53, "multistepsurfacemetgan": 54, "name": [205, 206], "nc": [85, 86, 97, 98, 200, 201], "nc_cc": [161, 162, 163], "nn_fill_arrai": 327, "nsrdb_reduce_daily_data": 231, "nsrdb_sub_daily_sampl": 232, "nuanc": 339, "numpy_if_tensor": 255, "option": [341, 342], "ordered_arrai": 256, "ordered_dim": 257, "outputhandl": 92, "outputhandlerh5": 96, "outputhandlernc": 98, "outputmixin": 93, "paramet": 244, "parse_ellipsi": 258, "parse_featur": [191, 259], "parse_kei": 260, "parse_to_list": 261, "pass": 336, "pd_date_rang": 328, "pip": [341, 342], "pipelin": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 336], "pipeline_cli": 70, "postprocess": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "preprocess": [99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "preprocess_dataset": 329, "presrat": [29, 30], "pressurewrf": 173, "pytest": [307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323], "qa": [262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 336], "qa_cli": 265, "qdm": [31, 32], "qdm_bc": 37, "quantiledeltamappingcorrect": 32, "queuemom1": 127, "queuemom1sf": 128, "queuemom2": 129, "queuemom2sep": 131, "queuemom2sepsf": 132, "queuemom2sf": 130, "raster": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], "recommend": [339, 340, 341, 342], "repo": [341, 342], "rexoutput": 94, "run": [339, 340], "safe_cast": 330, "safe_seri": 331, "sampler": [220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "samplerdc": 226, "samplertest": 315, "samplertesterdc": 316, "scalarcorrect": 12, "singlebatchqueu": 124, "singleexodatastep": 160, "skillassess": 13, "slicer": [71, 72], "slurmmanag": 285, "smooth_data": 139, "solar": [275, 276, 277, 278, 279, 280, 336], "solar_cc": [56, 57], "solar_cli": [278, 279, 280], "solarcc": 57, "solarmultistepgan": 55, "solarzenith": 189, "spatial_coarsen": 332, "spatial_simple_enhanc": 140, "spatialextremesloss": 298, "spatialextremesonlyloss": 299, "spatialfftonlyloss": 300, "spatiotemporalextremesloss": 301, "spatiotemporalfftonlyloss": 302, "st_interp": 63, "standardize_nam": 203, "standardize_valu": 204, "stat": [149, 150], "statscollect": 150, "stextremesfftloss": 303, "strategi": [73, 74, 75], "structur": 339, "sup3r": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 341], "sup3rcc": 339, "sup3rcondmom": 47, "sup3rdataset": 104, "sup3rgan": 45, "sup3rgandc": 49, "sup3rmeta": 105, "sup3rqa": 264, "sup3rwind": 340, "sup3rx": 101, "surfac": [58, 59], "surfacerh": 174, "surfacespatialmetmodel": 59, "sza": 175, "szaraster": 217, "ta": 176, "tasmax": 177, "tasmin": 178, "tempncforcc": 179, "temporal_coarsen": 333, "temporal_simple_enhanc": 141, "temporalextremesloss": 304, "temporalextremesonlyloss": 305, "tensorboardmixin": 43, "test_sampler_factori": 323, "time_derivative_dist": 271, "timer": 325, "tke_frequency_spectrum": 272, "tke_wavenumber_spectrum": 273, "trainingsess": 61, "transform_rotate_wind": 192, "uniform_box_sampl": 233, "uniform_time_sampl": 234, "usag": [339, 340, 343], "usolar": 180, "util": [33, 34, 35, 36, 37, 60, 61, 62, 63, 76, 77, 78, 138, 139, 140, 141, 145, 188, 189, 190, 191, 192, 193, 202, 203, 204, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334], "uwind": 181, "uwindpowerlaw": 182, "valbatchqueuedc": 135, "version": [339, 340], "vortexmeanprepp": 19, "vsolar": 183, "vwind": 184, "vwindpowerlaw": 185, "wavenumber_spectrum": 274, "weighted_box_sampl": 235, "weighted_time_sampl": 236, "welcom": 341, "winddirect": 186, "windspe": 187, "windspeed_log_law": 193, "writer": [90, 91, 92, 93, 94, 95, 96, 97, 98], "xr_open_mfdataset": 334, "zeroratemixin": 28}})